(function(){"use strict";onmessage=function(s){if(s.data[4].analysis==="multi"){this.postMessage(I(s));return}const u=new Uint8Array(s.data[0]),o=new Uint8Array(s.data[1]),m=new Uint8Array(s.data[2]),h=s.data[3][1]==="int32"?Int32Array:Float32Array,f=new h(s.data[3][0]),e=s.data[4],r=f.length,i=e.values.length,l=new Array(i).fill(0);for(let t=0;t<r;t++)o[t]!==0&&o[t]!==u[t]||isNaN(f[t])||l[m[t]]++;const d=[];for(let t=0;t<i;t++)d.push(new h(l[t]));const p=new Array(i).fill(0),N=new Float32Array(e.xPos);for(let t=0;t<r;t++){if(o[t]!==0&&o[t]!==u[t]||isNaN(f[t]))continue;const n=m[t];d[n][p[n]++]=f[t]}const y=[];if(e.analysis==="boxplot"){const t={};for(let n=0;n<i;n++){const a=d[n],c=a.length;if(c==0)continue;a.sort();const b=w(0,c),v=a[b],A=a[w(0,b)],M=a[w(b+1,c)],x=M-A;let g=A-1.5*x,Q=M+1.5*x;g=g<a[0]?a[0]:g,Q=Q>a[c-1]?a[c-1]:Q,t[n]=y.length,y.push({max:Q,min:g,Q1:A,Q3:M,med:v,id:n})}for(let n=0;n<r;n++){const a=t[m[n]];a!==void 0&&(N[n]=a*50+4+Math.random()*42)}}else{const t={};for(let n=0;n<i;n++){let a=null;e.scaletrim?a=U(d[n],e.ticks,e.scaletrim,e.bandwidth||7):a=F(d[n],e.ticks,e.bandwidth||7);const c=Math.max(...a);c!==0&&!isNaN(c)&&(a.id=n,a.max=c,t[n]=[y.length,c,a],y.push(a))}e.ticks[e.ticks.length-1],e.ticks[0]-e.ticks[1];for(let n=0;n<r;n++){const a=t[m[n]];a&&(N[n]=a[0]*50+4+Math.random()*42)}}postMessage(y)};function w(s,u){return s+Math.round((u-s)/2)}function U(s,u,o,m=2){const h=o[1]-o[0];return u.map(function(f){let e=0,r=0;for(let i=0;i<s.length;i++){let l=s[i];if(!isNaN(l)){l=(l-o[0])/h,l=l<0?0:l>1?1:l;let d=f-l;e+=Math.abs(d/=m)<=1?.75*(1-d*d)/m:0,r++}}return e/r})}function F(s,u,o=2){return u.map(function(m){let h=0,f=0;for(let e=0;e<s.length;e++){let r=s[e];if(!isNaN(r)){let i=m-r;h+=Math.abs(i/=o)<=1?.75*(1-i*i)/o:0,f++}}return h/f})}function I(s){const u=[];for(let t of s.data[2])u.push(t[1]==="int32"?new Int32Array(t[0]):new Float32Array(t[0]));const o=u.length,m=s.data[4],h=m.scaleVals;for(let t of h)t.push(t[1]-t[0]);new Uint8Array(s.data[0]);const f=new Uint8Array(s.data[1]),e=f.length,r=new Array(o),i=new Uint8Array(s.data[3]),l=m.cat;let d=0;for(let t=0;t<e;t++)i[t]===l&&f[t]===0&&d++;for(let t=0;t<o;t++)r[t]=new Float64Array(d);count=0;for(let t=0;t<e;t++)if(i[t]===l&&f[t]===0){for(let n=0;n<o;n++){let a=(u[n][t]-h[n][0])/h[n][2];r[n][count]=a<0?0:a>1?1:a}count++}const p=[];let N=Number.MAX_VALUE,y=Number.MIN_VALUE;for(let t=0;t<o;t++){const n=r[t],a=n.length;n.sort();const c=w(0,a),b=n[c],v=n[w(0,c)],A=n[w(c+1,a)],M=A-v;let x=v-1.5*M,g=A+1.5*M;x=x<n[0]?n[0]:x,g=g>n[a-1]?n[a-1]:g,N=Math.min(N,x),y=Math.max(y,g),p.push({max:g,min:x,Q1:v,Q3:A,med:b,id:t})}return p.max=y,p.min=N,p}})();
//# sourceMappingURL=boxPlotWorker-CJ4iGct0.js.map
