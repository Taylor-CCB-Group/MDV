{"version":3,"file":"catColWorker-B0JCMmku.js","sources":["../src/datastore/catColWorker.js"],"sourcesContent":["\n\n\n\nonmessage= function(e){  \n    const data= [];\n    for (let item of e.data[3]){\n        data.push(item[1]===\"int32\"?new Int32Array(item[0]):new Float32Array(item[0]))\n    }\n    const dLen= data.length\n    const cat= new Uint8Array(e.data[2]);\n    const config = e.data[4];\n    const  len = cat.length;\n    let valLen = config.values.length;\n    const scaleVals = config.scaleVals;\n  \n    const lFilter=new  Uint8Array(e.data[0]);\n    const gFilter = new  Uint8Array(e.data[1]);\n    if(config.method===\"averages_simple\"){\n        const r= addSimpleMean(data,gFilter,lFilter,cat,config);\n        postMessage(r);\n        return;\n\n    }\n    let result = new Array(dLen);\n    for (let n=0;n<dLen;n++){\n        const arr =  new Array(valLen);\n        for (let i=0;i<valLen;i++){\n            arr[i]= config.method===\"mean\"?[0,0]:[0,0,0];\n        }\n        result[n] =arr;\n        //list may get sorted\n        result[n]._id=n;\n\n    }\n    const catTotals= new Array(valLen).fill(0);\n    if (config.method===\"mean\"){\n        addAverages(result,data,len,dLen,gFilter,lFilter,cat,catTotals,valLen,scaleVals);\n    }\n   \n    else{\n        addMedians(result,data,len,dLen,gFilter,lFilter,cat,catTotals,valLen,scaleVals);\n    }\n    \n\n   \n    const indexR=[];\n    \n    for(let n=0;n<valLen;n++){\n        if (catTotals[n]!==0){\n            indexR.push(n);\n        }\n    }\n\n    \n    for(let n=0;n<dLen;n++){\n        result[n] =result[n].filter((x,i)=>catTotals[i]!==0)\n        result[n]._id=n;\n    }\n    \n  \n    valLen= indexR.length;\n\n    const transpose=new Array(valLen);\n    for (let i=0;i<valLen;i++){\n        transpose[i] = new Array(dLen);\n        transpose[i]._id=indexR[i];\n        for (let n=0;n<dLen;n++){\n            transpose[i][n]=isNaN(result[n][i])?0:result[n][i];\n        }\n    }   \n    postMessage({averages:result,transpose:transpose,catTotals:catTotals});\n}\n\n\nfunction addMedians(result,data,len,dLen,gFilter,lFilter,cat,catTotals,valLen,scaleVals){\n    \n    let t= performance.now();\n    for (let i=0;i<len;i++){\n        //if filtered out in global but not in local\n        if (gFilter[i]!==0){\n            if  (gFilter[i] !==lFilter[i]){\n            continue;\n            }           \n        }\n        let c= cat[i];\n        catTotals[c]++;\n        for (let n=0;n<dLen;n++){\n            if (isNaN(data[n][i])){\n                continue;\n            }\n            result[n][c][0]++;\n         \n        }\n    }\n    \n    for (let n=0;n<dLen;n++){\n\n        for(let i=0;i<valLen;i++){\n            if (result[n][i][0]){\n                result[n][i][1]= new Float32Array(result[n][i][0]);\n            }\n           \n        }\n    \n    \n    } \n    for (let i=0;i<len;i++){\n        //if filtered out in global but not in local\n        if (gFilter[i]!==0){\n            if  (gFilter[i] !==lFilter[i]){\n            continue;\n            }           \n        }\n        let c= cat[i];\n        for (let n=0;n<dLen;n++){\n            if (isNaN(data[n][i])){\n                continue;\n            }\n            const a = result[n][c];\n         \n            a[1][a[2]++]=data[n][i];    \n        }\n    }\n    \n\n    for (let n=0;n<dLen;n++){\n\n        const den = scaleVals[n][1]-scaleVals[n][0]; \n        for(let i=0;i<valLen;i++){   \n              \n            let a =result[n][i];\n            const li =a[1];\n            if (!li){\n                result[n][i]=NaN;\n                continue;\n            } \n            li.sort();\n            let r = li[Math.floor(li.length/2)];\n            r=(r-scaleVals[n][0])/den;\n            result[n][i]= r<0?0:r>1?1:r;          \n        }\n    }\n   \n\n}\n\n\nfunction addMedianst(result,data,len,dLen,gFilter,lFilter,cat,catTotals,valLen,scaleVals){\n    \n    let t= performance.now();\n    for (let i=0;i<len;i++){\n        //if filtered out in global but not in local\n        if (gFilter[i]!==0){\n            if  (gFilter[i] !==lFilter[i]){\n            continue;\n            }           \n        }\n        let c= cat[i];\n        catTotals[c]++;\n        for (let n=0;n<dLen;n++){\n            if (isNaN(data[n][i])){\n                continue;\n            }\n            result[n][c].push(data[n][i]);\n         \n        }\n    }\n\n    for (let n=0;n<dLen;n++){\n\n        const den = scaleVals[n][1]-scaleVals[n][0]; \n        for(let i=0;i<valLen;i++){   \n              \n            let li =result[n][i];\n            if (li.length===0){\n                result[n][i]=NaN;\n                continue;\n            } \n            li.sort();\n            let r = li[Math.floor(li.length/2)];\n            r=(r-scaleVals[n][0])/den;\n            result[n][i]= r<0?0:r>1?1:r;          \n        }\n    }\n   \n\n}\n\n\nfunction addAverages(result,data,len,dLen,gFilter,lFilter,cat,catTotals,valLen,scaleVals){\n    for (let i=0;i<len;i++){\n        //if filtered out in global but not in local\n        if (gFilter[i]!==0){\n            if  (gFilter[i] !==lFilter[i]){\n            continue;\n            }           \n        }\n        let c= cat[i];\n        catTotals[c]++;\n        for (let n=0;n<dLen;n++){\n            if (isNaN(data[n][i])){\n                continue;\n            }\n            const a= result[n][c];\n            a[0]+=data[n][i];\n            a[1]++;\n        }\n    }\n    for (let n=0;n<dLen;n++){\n        const den = scaleVals[n][1]-scaleVals[n][0];\n        if (den===0){\n            for(let i=0;i<valLen;i++){ \n                result[n][i]=0;\n            }\n            continue;\n        }\n       \n        for(let i=0;i<valLen;i++){  \n\n            let val =result[n][i];\n            let r = val[0]/val[1];\n            r=(r-scaleVals[n][0])/den;\n            result[n][i]= r<0?0:r>1?1:r\n        }\n    }\n\n}\n\nfunction addSimpleMean(data,gFilter,lFilter,catData,conf){\n    const dlen = data.length;\n    const len =catData.length;\n    const thr = conf.threshold || 0;\n    const r = conf.values.map((x,i)=>({id:i,count:0,values:conf.columns.map((x,i)=>({id:x,total:0,count:0}))}));\n    for (let i=0;i<len;i++){\n        //if filtered out in global but not in local\n        if (gFilter[i]!==0){\n            if  (gFilter[i] !==lFilter[i]){\n                continue;\n            }           \n        }\n        const c = catData[i];\n        const a= r[c].values;\n        r[c].count++;\n        for (let n=0;n<dlen;n++){  \n            const v= data[n][i];\n            if (isNaN(v) || !(v>thr) ){\n                continue;\n            }\n            a[n].total+=v;\n            a[n].count++;\n        }\n    }\n    let it = r[0].values[0]\n    let amax= it.count==0?0:it.total/it.count;\n    let amin =amax;\n    for (let i=0;i<dlen;i++){\n        for (let n=0;n<conf.values.length;n++){\n            const item= r[n].values[i];\n            const av= item.count==0?0:item.total/item.count;\n            item.frac = r[n].count==0?0:(item.count/r[n].count)*100;\n            amax=av>amax?av:amax;\n            amin=av<amin?av:amin;\n            item.mean=av;\n            item.cat_id=n     \n        }\n    }\n    return {data:r,mean_range:[amin,amax]}\n}"],"names":["e","data","item","dLen","cat","config","len","valLen","scaleVals","lFilter","gFilter","r","addSimpleMean","result","arr","i","catTotals","addAverages","addMedians","indexR","x","transpose","n","c","a","den","li","val","catData","conf","dlen","thr","v","it","amax","amin","av"],"mappings":"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"}