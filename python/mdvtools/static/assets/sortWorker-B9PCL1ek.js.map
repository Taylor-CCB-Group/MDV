{"version":3,"file":"sortWorker-B9PCL1ek.js","sources":["../src/datastore/datatypes.js","../src/datastore/sortWorker.js"],"sourcesContent":[" const datatypes={\n    \"int32\":{arr:Int32Array,type:\"number\"},\n    \"double\":{arr:Float32Array,type:\"number\"},\n    \"integer\":{arr:Int32Array,type:\"number\"},\n    \"text16\":{arr:Uint16Array,type:\"text\"},\n    \"text\":{arr:Uint8Array,type:\"text\"},\n    \"unique\":{arr:Uint8Array,type:\"unique\"},\n    \"multitext\":{arr:Uint8Array,type:\"multitext\"}\n}\n\nexport default datatypes;","import datatypes from \"./datatypes.js\";\n\nonmessage=function(e){\n    const {orderBuffer,columns}=e.data;\n    //get access to the order buffer\n    const ord = new Uint32Array(orderBuffer);\n    //build the methods\n    const methods = columns.map(x=>{\n        const dinfo = datatypes[x.datatype];\n        const data = new dinfo.arr(x.buffer);\n        let meth = null;\n        if (dinfo.type===\"text\"){\n            meth= getTextSort({data,desc:x.desc,values:x.values})\n        }\n        else if (dinfo.type===\"unique\"){\n            meth= getUniqueSort({data,desc:x.desc,size:x.stringLength})\n        }\n        else if (dinfo.type===\"multitext\"){\n            meth= getMultiTextSort({data,desc:x.desc,size:x.stringLength})\n        }\n        else{\n            meth= getNumberSort({data,desc:x.desc})\n        }\n        return meth;\n    })\n    ord.sort((a,b)=>{\n        for (let m of methods){\n            const r = m(a,b);\n            if (r!==0){\n                return r;\n            }\n        }\n        return 0;\n    });\n    this.postMessage(\"done\");\n\n}\n\n\nfunction getNumberSort({data,desc}){\n    const mu = desc?-1:1;\n    return (a,b)=>{\n        let va= data[a];\n        let vb = data[b];\n        va= isNaN(va)?Number.MAX_VALUE:va;\n        vb= isNaN(vb)?Number.MAX_VALUE:vb;\n        return (va>vb?1:va<vb?-1:0)*mu\n    }\n}\n\nfunction getTextSort({data,values,desc}){   \n    //is it quicker to build map and sort on numbers\n    //rather than sort by text?\n    const map = getSortedValues(values,desc);\n    return (a,b)=> map[data[a]]-map[data[b]];\n}\n\nfunction getUniqueSort({data,desc,size}){\n    const names = {};\n    const tc= new TextDecoder();\n    const mu = order===desc?-1:1;\n    for (let i=0;i<data.length;i++){\n        const index = data[i];\n        names[index]= tc.decode(col.slice(index*size,(index*size)+size));\n    }\n    return (a,b)=>names[a].localeCompare(names[b])*mu;\n}\n\nfunction getMultiTextSort({data,desc,values,size}){\n    const map = getSortedValues(values,desc);\n    map[65536]=65356;\n    return (a,b)=> {\n        const a1= data.slice(a*size,(a*size)+size);\n        const b1= data.slice(b*size,(b*size)+size);\n        for (let i=0;i<size;i++){\n            const r = map[a1[i]]-map[b1[i]];\n            if (r!==0){\n                return r;\n            }\n            //end reached without a difference\n            if (a1[i]===65536 && b1[i]===65536){\n                return 0;\n            }\n        }\n        return 0;\n    }\n}\n\nfunction getSortedValues(values,desc){\n    const mu = desc?-1:1;\n    const o = values.map((x,i)=>[x,i]).sort((a,b)=>a[0].localeCompare(b[0])*mu);\n    const map = {};\n    for (let i=0;i<o.length;i++){\n        map[o[i][1]]=i;\n    }\n    return map;\n}"],"names":["datatypes","e","orderBuffer","columns","ord","methods","x","dinfo","data","meth","getTextSort","getUniqueSort","getMultiTextSort","getNumberSort","a","b","m","r","desc","mu","va","vb","values","map","getSortedValues","size","names","tc","i","index","a1","b1","o"],"mappings":"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"}