(function(){"use strict";onmessage=function(a){if(a.data[4].analysis==="multi"){this.postMessage(I(a));return}const f=new Uint8Array(a.data[0]),o=new Uint8Array(a.data[1]),m=new Uint8Array(a.data[2]),h=a.data[3][1]==="int32"?Int32Array:Float32Array,u=new h(a.data[3][0]),e=a.data[4],i=u.length,r=e.values.length,c=new Array(r).fill(0);for(let t=0;t<i;t++)o[t]!==0&&o[t]!==f[t]||Number.isNaN(u[t])||c[m[t]]++;const d=[];for(let t=0;t<r;t++)d.push(new h(c[t]));const w=new Array(r).fill(0),b=new Float32Array(e.xPos);for(let t=0;t<i;t++){if(o[t]!==0&&o[t]!==f[t]||Number.isNaN(u[t]))continue;const n=m[t];d[n][w[n]++]=u[t]}const y=[];if(e.analysis==="boxplot"){const t={};for(let n=0;n<r;n++){const s=d[n],l=s.length;if(l===0)continue;s.sort();const M=N(0,l),v=s[M],A=s[N(0,M)],p=s[N(M+1,l)],x=p-A;let g=A-1.5*x,Q=p+1.5*x;g=g<s[0]?s[0]:g,Q=Q>s[l-1]?s[l-1]:Q,t[n]=y.length,y.push({max:Q,min:g,Q1:A,Q3:p,med:v,id:n})}for(let n=0;n<i;n++){const s=t[m[n]];s!==void 0&&(b[n]=s*50+4+Math.random()*42)}}else{const t={};for(let n=0;n<r;n++){let s=null;e.scaletrim?s=U(d[n],e.ticks,e.scaletrim,e.bandwidth||7):s=F(d[n],e.ticks,e.bandwidth||7);const l=Math.max(...s);l!==0&&!Number.isNaN(l)&&(s.id=n,s.max=l,t[n]=[y.length,l,s],y.push(s))}e.ticks[e.ticks.length-1],e.ticks[0]-e.ticks[1];for(let n=0;n<i;n++){const s=t[m[n]];s&&(b[n]=s[0]*50+4+Math.random()*42)}}postMessage(y)};function N(a,f){return a+Math.round((f-a)/2)}function U(a,f,o,m=2){const h=o[1]-o[0];return f.map(u=>{let e=0,i=0;for(let r=0;r<a.length;r++){let c=a[r];if(!Number.isNaN(c)){c=(c-o[0])/h,c=c<0?0:c>1?1:c;let d=u-c;e+=Math.abs(d/=m)<=1?.75*(1-d*d)/m:0,i++}}return e/i})}function F(a,f,o=2){return f.map(m=>{let h=0,u=0;for(let e=0;e<a.length;e++){const i=a[e];if(!Number.isNaN(i)){let r=m-i;h+=Math.abs(r/=o)<=1?.75*(1-r*r)/o:0,u++}}return h/u})}function I(a){const f=[];for(const t of a.data[2])f.push(t[1]==="int32"?new Int32Array(t[0]):new Float32Array(t[0]));const o=f.length,m=a.data[4],h=m.scaleVals;for(const t of h)t.push(t[1]-t[0]);new Uint8Array(a.data[0]);const u=new Uint8Array(a.data[1]),e=u.length,i=new Array(o),r=new Uint8Array(a.data[3]),c=m.cat;let d=0;for(let t=0;t<e;t++)r[t]===c&&u[t]===0&&d++;for(let t=0;t<o;t++)i[t]=new Float64Array(d);count=0;for(let t=0;t<e;t++)if(r[t]===c&&u[t]===0){for(let n=0;n<o;n++){const s=(f[n][t]-h[n][0])/h[n][2];i[n][count]=s<0?0:s>1?1:s}count++}const w=[];let b=Number.MAX_VALUE,y=Number.MIN_VALUE;for(let t=0;t<o;t++){const n=i[t],s=n.length;n.sort();const l=N(0,s),M=n[l],v=n[N(0,l)],A=n[N(l+1,s)],p=A-v;let x=v-1.5*p,g=A+1.5*p;x=x<n[0]?n[0]:x,g=g>n[s-1]?n[s-1]:g,b=Math.min(b,x),y=Math.max(y,g),w.push({max:g,min:x,Q1:v,Q3:A,med:M,id:t})}return w.max=y,w.min=b,w}})();
//# sourceMappingURL=boxPlotWorker-BvOiGWqU.js.map
