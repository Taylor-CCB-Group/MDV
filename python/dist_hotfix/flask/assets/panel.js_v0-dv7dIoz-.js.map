{"version":3,"file":"panel.js_v0-dv7dIoz-.js","sources":["../../../../src/browser/vendor/inflate.js","../../../../src/browser/vendor/zlib_and_gzip.js","../../../../src/browser/igvxhr.js","../../../../src/browser/bigwig.js","../../../../src/browser/utils.js","../../../../src/browser/bam.js","../../../../src/browser/feature.js","../../../../src/browser/tracks.js","../../../../src/browser/bam_track.js","../../../../src/browser/BamCoverageTrack.js","../../../../src/browser/extra/interaction_track.js","../../../../src/utilities/SettingsDialog.js","../../../../node_modules/canvas-to-svg/dist/canvas-to-svg.modern.js","../../../../src/browser/panel.js?v0.3"],"sourcesContent":["/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n// \n// Javascript ZLib\n// By Thomas Down 2010-2011\n//\n// Based very heavily on portions of jzlib (by ymnk@jcraft.com), who in\n// turn credits Jean-loup Gailly and Mark Adler for the original zlib code.\n//\n// inflate.js: ZLib inflate code\n//\n\n//\n// Shared constants\n//\n\nvar MAX_WBITS=15; // 32K LZ77 window\nvar DEF_WBITS=MAX_WBITS;\nvar MAX_MEM_LEVEL=9;\nvar MANY=1440;\nvar BMAX = 15;\n\n// preset dictionary flag in zlib header\nvar PRESET_DICT=0x20;\n\nvar Z_NO_FLUSH=0;\nvar Z_PARTIAL_FLUSH=1;\nvar Z_SYNC_FLUSH=2;\nvar Z_FULL_FLUSH=3;\nvar Z_FINISH=4;\n\nvar Z_DEFLATED=8;\n\nvar Z_OK=0;\nvar Z_STREAM_END=1;\nvar Z_NEED_DICT=2;\nvar Z_ERRNO=-1;\nvar Z_STREAM_ERROR=-2;\nvar Z_DATA_ERROR=-3;\nvar Z_MEM_ERROR=-4;\nvar Z_BUF_ERROR=-5;\nvar Z_VERSION_ERROR=-6;\n\nvar METHOD=0;   // waiting for method byte\nvar FLAG=1;     // waiting for flag byte\nvar DICT4=2;    // four dictionary check bytes to go\nvar DICT3=3;    // three dictionary check bytes to go\nvar DICT2=4;    // two dictionary check bytes to go\nvar DICT1=5;    // one dictionary check byte to go\nvar DICT0=6;    // waiting for inflateSetDictionary\nvar BLOCKS=7;   // decompressing blocks\nvar CHECK4=8;   // four check bytes to go\nvar CHECK3=9;   // three check bytes to go\nvar CHECK2=10;  // two check bytes to go\nvar CHECK1=11;  // one check byte to go\nvar DONE=12;    // finished check, done\nvar BAD=13;     // got an error--stay here\n\nvar inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nvar IB_TYPE=0;  // get type bits (3, including end bit)\nvar IB_LENS=1;  // get lengths for stored\nvar IB_STORED=2;// processing stored block\nvar IB_TABLE=3; // get table lengths\nvar IB_BTREE=4; // get bit lengths tree for a dynamic block\nvar IB_DTREE=5; // get length, distance trees for a dynamic block\nvar IB_CODES=6; // processing fixed or dynamic block\nvar IB_DRY=7;   // output remaining window bytes\nvar IB_DONE=8;  // finished last block, done\nvar IB_BAD=9;   // ot a data error--stuck here\n\nvar fixed_bl = 9;\nvar fixed_bd = 5;\n\nvar fixed_tl = [\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,192,\n    80,7,10, 0,8,96, 0,8,32, 0,9,160,\n    0,8,0, 0,8,128, 0,8,64, 0,9,224,\n    80,7,6, 0,8,88, 0,8,24, 0,9,144,\n    83,7,59, 0,8,120, 0,8,56, 0,9,208,\n    81,7,17, 0,8,104, 0,8,40, 0,9,176,\n    0,8,8, 0,8,136, 0,8,72, 0,9,240,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,200,\n    81,7,13, 0,8,100, 0,8,36, 0,9,168,\n    0,8,4, 0,8,132, 0,8,68, 0,9,232,\n    80,7,8, 0,8,92, 0,8,28, 0,9,152,\n    84,7,83, 0,8,124, 0,8,60, 0,9,216,\n    82,7,23, 0,8,108, 0,8,44, 0,9,184,\n    0,8,12, 0,8,140, 0,8,76, 0,9,248,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,196,\n    81,7,11, 0,8,98, 0,8,34, 0,9,164,\n    0,8,2, 0,8,130, 0,8,66, 0,9,228,\n    80,7,7, 0,8,90, 0,8,26, 0,9,148,\n    84,7,67, 0,8,122, 0,8,58, 0,9,212,\n    82,7,19, 0,8,106, 0,8,42, 0,9,180,\n    0,8,10, 0,8,138, 0,8,74, 0,9,244,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,204,\n    81,7,15, 0,8,102, 0,8,38, 0,9,172,\n    0,8,6, 0,8,134, 0,8,70, 0,9,236,\n    80,7,9, 0,8,94, 0,8,30, 0,9,156,\n    84,7,99, 0,8,126, 0,8,62, 0,9,220,\n    82,7,27, 0,8,110, 0,8,46, 0,9,188,\n    0,8,14, 0,8,142, 0,8,78, 0,9,252,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,194,\n    80,7,10, 0,8,97, 0,8,33, 0,9,162,\n    0,8,1, 0,8,129, 0,8,65, 0,9,226,\n    80,7,6, 0,8,89, 0,8,25, 0,9,146,\n    83,7,59, 0,8,121, 0,8,57, 0,9,210,\n    81,7,17, 0,8,105, 0,8,41, 0,9,178,\n    0,8,9, 0,8,137, 0,8,73, 0,9,242,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,202,\n    81,7,13, 0,8,101, 0,8,37, 0,9,170,\n    0,8,5, 0,8,133, 0,8,69, 0,9,234,\n    80,7,8, 0,8,93, 0,8,29, 0,9,154,\n    84,7,83, 0,8,125, 0,8,61, 0,9,218,\n    82,7,23, 0,8,109, 0,8,45, 0,9,186,\n    0,8,13, 0,8,141, 0,8,77, 0,9,250,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,198,\n    81,7,11, 0,8,99, 0,8,35, 0,9,166,\n    0,8,3, 0,8,131, 0,8,67, 0,9,230,\n    80,7,7, 0,8,91, 0,8,27, 0,9,150,\n    84,7,67, 0,8,123, 0,8,59, 0,9,214,\n    82,7,19, 0,8,107, 0,8,43, 0,9,182,\n    0,8,11, 0,8,139, 0,8,75, 0,9,246,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,206,\n    81,7,15, 0,8,103, 0,8,39, 0,9,174,\n    0,8,7, 0,8,135, 0,8,71, 0,9,238,\n    80,7,9, 0,8,95, 0,8,31, 0,9,158,\n    84,7,99, 0,8,127, 0,8,63, 0,9,222,\n    82,7,27, 0,8,111, 0,8,47, 0,9,190,\n    0,8,15, 0,8,143, 0,8,79, 0,9,254,\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,193,\n\n    80,7,10, 0,8,96, 0,8,32, 0,9,161,\n    0,8,0, 0,8,128, 0,8,64, 0,9,225,\n    80,7,6, 0,8,88, 0,8,24, 0,9,145,\n    83,7,59, 0,8,120, 0,8,56, 0,9,209,\n    81,7,17, 0,8,104, 0,8,40, 0,9,177,\n    0,8,8, 0,8,136, 0,8,72, 0,9,241,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,201,\n    81,7,13, 0,8,100, 0,8,36, 0,9,169,\n    0,8,4, 0,8,132, 0,8,68, 0,9,233,\n    80,7,8, 0,8,92, 0,8,28, 0,9,153,\n    84,7,83, 0,8,124, 0,8,60, 0,9,217,\n    82,7,23, 0,8,108, 0,8,44, 0,9,185,\n    0,8,12, 0,8,140, 0,8,76, 0,9,249,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,197,\n    81,7,11, 0,8,98, 0,8,34, 0,9,165,\n    0,8,2, 0,8,130, 0,8,66, 0,9,229,\n    80,7,7, 0,8,90, 0,8,26, 0,9,149,\n    84,7,67, 0,8,122, 0,8,58, 0,9,213,\n    82,7,19, 0,8,106, 0,8,42, 0,9,181,\n    0,8,10, 0,8,138, 0,8,74, 0,9,245,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,205,\n    81,7,15, 0,8,102, 0,8,38, 0,9,173,\n    0,8,6, 0,8,134, 0,8,70, 0,9,237,\n    80,7,9, 0,8,94, 0,8,30, 0,9,157,\n    84,7,99, 0,8,126, 0,8,62, 0,9,221,\n    82,7,27, 0,8,110, 0,8,46, 0,9,189,\n    0,8,14, 0,8,142, 0,8,78, 0,9,253,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,195,\n    80,7,10, 0,8,97, 0,8,33, 0,9,163,\n    0,8,1, 0,8,129, 0,8,65, 0,9,227,\n    80,7,6, 0,8,89, 0,8,25, 0,9,147,\n    83,7,59, 0,8,121, 0,8,57, 0,9,211,\n    81,7,17, 0,8,105, 0,8,41, 0,9,179,\n    0,8,9, 0,8,137, 0,8,73, 0,9,243,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,203,\n    81,7,13, 0,8,101, 0,8,37, 0,9,171,\n    0,8,5, 0,8,133, 0,8,69, 0,9,235,\n    80,7,8, 0,8,93, 0,8,29, 0,9,155,\n    84,7,83, 0,8,125, 0,8,61, 0,9,219,\n    82,7,23, 0,8,109, 0,8,45, 0,9,187,\n    0,8,13, 0,8,141, 0,8,77, 0,9,251,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,199,\n    81,7,11, 0,8,99, 0,8,35, 0,9,167,\n    0,8,3, 0,8,131, 0,8,67, 0,9,231,\n    80,7,7, 0,8,91, 0,8,27, 0,9,151,\n    84,7,67, 0,8,123, 0,8,59, 0,9,215,\n    82,7,19, 0,8,107, 0,8,43, 0,9,183,\n    0,8,11, 0,8,139, 0,8,75, 0,9,247,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,207,\n    81,7,15, 0,8,103, 0,8,39, 0,9,175,\n    0,8,7, 0,8,135, 0,8,71, 0,9,239,\n    80,7,9, 0,8,95, 0,8,31, 0,9,159,\n    84,7,99, 0,8,127, 0,8,63, 0,9,223,\n    82,7,27, 0,8,111, 0,8,47, 0,9,191,\n    0,8,15, 0,8,143, 0,8,79, 0,9,255\n];\nvar fixed_td = [\n    80,5,1, 87,5,257, 83,5,17, 91,5,4097,\n    81,5,5, 89,5,1025, 85,5,65, 93,5,16385,\n    80,5,3, 88,5,513, 84,5,33, 92,5,8193,\n    82,5,9, 90,5,2049, 86,5,129, 192,5,24577,\n    80,5,2, 87,5,385, 83,5,25, 91,5,6145,\n    81,5,7, 89,5,1537, 85,5,97, 93,5,24577,\n    80,5,4, 88,5,769, 84,5,49, 92,5,12289,\n    82,5,13, 90,5,3073, 86,5,193, 192,5,24577\n];\n\n  // Tables for deflate from PKZIP's appnote.txt.\n  var cplens = [ // Copy lengths for literal codes 257..285\n        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n        35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n  ];\n\n  // see note #13 above about 258\n  var cplext = [ // Extra bits for literal codes 257..285\n        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n        3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112  // 112==invalid\n  ];\n\n var cpdist = [ // Copy offsets for distance codes 0..29\n        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n        257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n        8193, 12289, 16385, 24577\n  ];\n\n  var cpdext = [ // Extra bits for distance codes\n        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n        7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n        12, 12, 13, 13];\n\n//\n// ZStream.java\n//\n\nfunction ZStream() {\n}\n\n\nZStream.prototype.inflateInit = function(w, nowrap) {\n    if (!w) {\n\tw = DEF_WBITS;\n    }\n    if (nowrap) {\n\tnowrap = false;\n    }\n    this.istate = new Inflate();\n    return this.istate.inflateInit(this, nowrap?-w:w);\n}\n\nZStream.prototype.inflate = function(f) {\n    if(this.istate==null) return Z_STREAM_ERROR;\n    return this.istate.inflate(this, f);\n}\n\nZStream.prototype.inflateEnd = function(){\n    if(this.istate==null) return Z_STREAM_ERROR;\n    var ret=istate.inflateEnd(this);\n    this.istate = null;\n    return ret;\n}\nZStream.prototype.inflateSync = function(){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSync(this);\n}\nZStream.prototype.inflateSetDictionary = function(dictionary, dictLength){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSetDictionary(this, dictionary, dictLength);\n}\n\n/*\n\n  public int deflateInit(int level){\n    return deflateInit(level, MAX_WBITS);\n  }\n  public int deflateInit(int level, boolean nowrap){\n    return deflateInit(level, MAX_WBITS, nowrap);\n  }\n  public int deflateInit(int level, int bits){\n    return deflateInit(level, bits, false);\n  }\n  public int deflateInit(int level, int bits, boolean nowrap){\n    dstate=new Deflate();\n    return dstate.deflateInit(this, level, nowrap?-bits:bits);\n  }\n  public int deflate(int flush){\n    if(dstate==null){\n      return Z_STREAM_ERROR;\n    }\n    return dstate.deflate(this, flush);\n  }\n  public int deflateEnd(){\n    if(dstate==null) return Z_STREAM_ERROR;\n    int ret=dstate.deflateEnd();\n    dstate=null;\n    return ret;\n  }\n  public int deflateParams(int level, int strategy){\n    if(dstate==null) return Z_STREAM_ERROR;\n    return dstate.deflateParams(this, level, strategy);\n  }\n  public int deflateSetDictionary (byte[] dictionary, int dictLength){\n    if(dstate == null)\n      return Z_STREAM_ERROR;\n    return dstate.deflateSetDictionary(this, dictionary, dictLength);\n  }\n\n*/\n\n/*\n  // Flush as much pending output as possible. All deflate() output goes\n  // through this function so some applications may wish to modify it\n  // to avoid allocating a large strm->next_out buffer and copying into it.\n  // (See also read_buf()).\n  void flush_pending(){\n    int len=dstate.pending;\n\n    if(len>avail_out) len=avail_out;\n    if(len==0) return;\n\n    if(dstate.pending_buf.length<=dstate.pending_out ||\n       next_out.length<=next_out_index ||\n       dstate.pending_buf.length<(dstate.pending_out+len) ||\n       next_out.length<(next_out_index+len)){\n      System.out.println(dstate.pending_buf.length+\", \"+dstate.pending_out+\n\t\t\t \", \"+next_out.length+\", \"+next_out_index+\", \"+len);\n      System.out.println(\"avail_out=\"+avail_out);\n    }\n\n    System.arraycopy(dstate.pending_buf, dstate.pending_out,\n\t\t     next_out, next_out_index, len);\n\n    next_out_index+=len;\n    dstate.pending_out+=len;\n    total_out+=len;\n    avail_out-=len;\n    dstate.pending-=len;\n    if(dstate.pending==0){\n      dstate.pending_out=0;\n    }\n  }\n\n  // Read a new buffer from the current input stream, update the adler32\n  // and total number of bytes read.  All deflate() input goes through\n  // this function so some applications may wish to modify it to avoid\n  // allocating a large strm->next_in buffer and copying from it.\n  // (See also flush_pending()).\n  int read_buf(byte[] buf, int start, int size) {\n    int len=avail_in;\n\n    if(len>size) len=size;\n    if(len==0) return 0;\n\n    avail_in-=len;\n\n    if(dstate.noheader==0) {\n      adler=_adler.adler32(adler, next_in, next_in_index, len);\n    }\n    System.arraycopy(next_in, next_in_index, buf, start, len);\n    next_in_index  += len;\n    total_in += len;\n    return len;\n  }\n\n  public void free(){\n    next_in=null;\n    next_out=null;\n    msg=null;\n    _adler=null;\n  }\n}\n*/\n\n\n//\n// Inflate.java\n//\n\nfunction Inflate() {\n    this.was = [0];\n}\n\nInflate.prototype.inflateReset = function(z) {\n    if(z == null || z.istate == null) return Z_STREAM_ERROR;\n    \n    z.total_in = z.total_out = 0;\n    z.msg = null;\n    z.istate.mode = z.istate.nowrap!=0 ? BLOCKS : METHOD;\n    z.istate.blocks.reset(z, null);\n    return Z_OK;\n}\n\nInflate.prototype.inflateEnd = function(z){\n    if(this.blocks != null)\n      this.blocks.free(z);\n    this.blocks=null;\n    return Z_OK;\n}\n\nInflate.prototype.inflateInit = function(z, w){\n    z.msg = null;\n    this.blocks = null;\n\n    // handle undocumented nowrap option (no zlib header or check)\n    let nowrap = 0;\n    if(w < 0){\n      w = - w;\n      nowrap = 1;\n    }\n\n    // set window size\n    if(w<8 ||w>15){\n      this.inflateEnd(z);\n      return Z_STREAM_ERROR;\n    }\n    this.wbits=w;\n\n    z.istate.blocks=new InfBlocks(z, \n\t\t\t\t  z.istate.nowrap!=0 ? null : this,\n\t\t\t\t  1<<w);\n\n    // reset state\n    this.inflateReset(z);\n    return Z_OK;\n  }\n\nInflate.prototype.inflate = function(z, f){\n    var r, b;\n\n    if(z == null || z.istate == null || z.next_in == null)\n      return Z_STREAM_ERROR;\n    f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n    r = Z_BUF_ERROR;\n    while (true){\n      switch (z.istate.mode){\n      case METHOD:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        if(((z.istate.method = z.next_in[z.next_in_index++])&0xf)!=Z_DEFLATED){\n          z.istate.mode = BAD;\n          z.msg=\"unknown compression method\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        if((z.istate.method>>4)+8>z.istate.wbits){\n          z.istate.mode = BAD;\n          z.msg=\"invalid window size\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        z.istate.mode=FLAG;\n      case FLAG:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        b = (z.next_in[z.next_in_index++])&0xff;\n\n        if((((z.istate.method << 8)+b) % 31)!=0){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect header check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        if((b&PRESET_DICT)==0){\n          z.istate.mode = BLOCKS;\n          break;\n        }\n        z.istate.mode = DICT4;\n      case DICT4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=DICT3;\n      case DICT3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode=DICT2;\n      case DICT2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode=DICT1;\n      case DICT1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need += (z.next_in[z.next_in_index++]&0xff);\n        z.adler = z.istate.need;\n        z.istate.mode = DICT0;\n        return Z_NEED_DICT;\n      case DICT0:\n        z.istate.mode = BAD;\n        z.msg = \"need dictionary\";\n        z.istate.marker = 0;       // can try inflateSync\n        return Z_STREAM_ERROR;\n      case BLOCKS:\n\n        r = z.istate.blocks.proc(z, r);\n        if(r == Z_DATA_ERROR){\n          z.istate.mode = BAD;\n          z.istate.marker = 0;     // can try inflateSync\n          break;\n        }\n        if(r == Z_OK){\n          r = f;\n        }\n        if(r != Z_STREAM_END){\n          return r;\n        }\n        r = f;\n        z.istate.blocks.reset(z, z.istate.was);\n        if(z.istate.nowrap!=0){\n          z.istate.mode=DONE;\n          break;\n        }\n        z.istate.mode=CHECK4;\n      case CHECK4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=CHECK3;\n      case CHECK3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode = CHECK2;\n      case CHECK2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode = CHECK1;\n      case CHECK1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=(z.next_in[z.next_in_index++]&0xff);\n\n        if(((z.istate.was[0])) != ((z.istate.need))){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect data check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        z.istate.mode = DONE;\n      case DONE:\n        return Z_STREAM_END;\n      case BAD:\n        return Z_DATA_ERROR;\n      default:\n        return Z_STREAM_ERROR;\n      }\n    }\n  }\n\n\nInflate.prototype.inflateSetDictionary = function(z,  dictionary, dictLength) {\n    var index=0;\n    var length = dictLength;\n    if(z==null || z.istate == null|| z.istate.mode != DICT0)\n      return Z_STREAM_ERROR;\n\n    if(z._adler.adler32(1, dictionary, 0, dictLength)!=z.adler){\n      return Z_DATA_ERROR;\n    }\n\n    z.adler = z._adler.adler32(0, null, 0, 0);\n\n    if(length >= (1<<z.istate.wbits)){\n      length = (1<<z.istate.wbits)-1;\n      index=dictLength - length;\n    }\n    z.istate.blocks.set_dictionary(dictionary, index, length);\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n  }\n\n//  static private byte[] mark = {(byte)0, (byte)0, (byte)0xff, (byte)0xff};\nvar mark = [0, 0, 255, 255]\n\nInflate.prototype.inflateSync = function(z){\n    var n;       // number of bytes to look at\n    var p;       // pointer to bytes\n    var m;       // number of marker bytes found in a row\n    var r, w;   // temporaries to save total_in and total_out\n\n    // set up\n    if(z == null || z.istate == null)\n      return Z_STREAM_ERROR;\n    if(z.istate.mode != BAD){\n      z.istate.mode = BAD;\n      z.istate.marker = 0;\n    }\n    if((n=z.avail_in)==0)\n      return Z_BUF_ERROR;\n    p=z.next_in_index;\n    m=z.istate.marker;\n\n    // search\n    while (n!=0 && m < 4){\n      if(z.next_in[p] == mark[m]){\n        m++;\n      }\n      else if(z.next_in[p]!=0){\n        m = 0;\n      }\n      else{\n        m = 4 - m;\n      }\n      p++; n--;\n    }\n\n    // restore\n    z.total_in += p-z.next_in_index;\n    z.next_in_index = p;\n    z.avail_in = n;\n    z.istate.marker = m;\n\n    // return no joy or set up to restart on a new block\n    if(m != 4){\n      return Z_DATA_ERROR;\n    }\n    r=z.total_in;  w=z.total_out;\n    this.inflateReset(z);\n    z.total_in=r;  z.total_out = w;\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n  // implementation to provide an additional safety check. PPP uses Z_SYNC_FLUSH\n  // but removes the length bytes of the resulting empty stored block. When\n  // decompressing, PPP checks that at the end of input packet, inflate is\n  // waiting for these length bytes.\nInflate.prototype.inflateSyncPoint = function(z){\n    if(z == null || z.istate == null || z.istate.blocks == null)\n      return Z_STREAM_ERROR;\n    return z.istate.blocks.sync_point();\n}\n\n\n//\n// InfBlocks.java\n//\n\nvar INFBLOCKS_BORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nfunction InfBlocks(z, checkfn, w) {\n    this.hufts=new Int32Array(MANY*3);\n    this.window=new Uint8Array(w);\n    this.end=w;\n    this.checkfn = checkfn;\n    this.mode = IB_TYPE;\n    this.reset(z, null);\n\n    this.left = 0;            // if STORED, bytes left to copy \n\n    this.table = 0;           // table lengths (14 bits) \n    this.index = 0;           // index into blens (or border) \n    this.blens = null;         // bit lengths of codes \n    this.bb=new Int32Array(1); // bit length tree depth \n    this.tb=new Int32Array(1); // bit length decoding tree \n\n    this.codes = new InfCodes();\n\n    this.last = 0;            // true if this block is the last block \n\n  // mode independent information \n    this.bitk = 0;            // bits in bit buffer \n    this.bitb = 0;            // bit buffer \n    this.read = 0;            // window read pointer \n    this.write = 0;           // window write pointer \n    this.check = 0;          // check on output \n\n    this.inftree=new InfTree();\n}\n\n\n\n\nInfBlocks.prototype.reset = function(z, c){\n    if(c) c[0]=this.check;\n    if(this.mode==IB_CODES){\n      this.codes.free(z);\n    }\n    this.mode=IB_TYPE;\n    this.bitk=0;\n    this.bitb=0;\n    this.read=this.write=0;\n\n    if(this.checkfn)\n      z.adler=this.check=z._adler.adler32(0, null, 0, 0);\n  }\n\n InfBlocks.prototype.proc = function(z, r){\n    var t;              // temporary storage\n    var b;              // bit buffer\n    var k;              // bits in bit buffer\n    var p;              // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n\n    // copy input/output information to locals (UPDATE macro restores)\n    {p=z.next_in_index;n=z.avail_in;b=this.bitb;k=this.bitk;}\n    {q=this.write;m=(q<this.read ? this.read-q-1 : this.end-q);}\n\n    // process input based on current state\n    while(true){\n      switch (this.mode){\n      case IB_TYPE:\n\n\twhile(k<(3)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\tt = (b & 7);\n\tthis.last = t & 1;\n\n\tswitch (t >>> 1){\n        case 0:                         // stored \n          {b>>>=(3);k-=(3);}\n          t = k & 7;                    // go to byte boundary\n\n          {b>>>=(t);k-=(t);}\n          this.mode = IB_LENS;                  // get length of stored block\n          break;\n        case 1:                         // fixed\n          {\n              var bl=new Int32Array(1);\n\t      var bd=new Int32Array(1);\n              var tl=[];\n\t      var td=[];\n\n\t      inflate_trees_fixed(bl, bd, tl, td, z);\n              this.codes.init(bl[0], bd[0], tl[0], 0, td[0], 0, z);\n          }\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_CODES;\n          break;\n        case 2:                         // dynamic\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_TABLE;\n          break;\n        case 3:                         // illegal\n\n          {b>>>=(3);k-=(3);}\n          this.mode = BAD;\n          z.msg = \"invalid block type\";\n          r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tbreak;\n      case IB_LENS:\n\twhile(k<(32)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)){\n\t  this.mode = BAD;\n\t  z.msg = \"invalid stored block lengths\";\n\t  r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tthis.left = (b & 0xffff);\n\tb = k = 0;                       // dump bits\n\tthis.mode = left!=0 ? IB_STORED : (this.last!=0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_STORED:\n\tif (n == 0){\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tif(m==0){\n\t  if(q==end&&read!=0){\n\t    q=0; m=(q<this.read ? this.read-q-1 : this.end-q);\n\t  }\n\t  if(m==0){\n\t    this.write=q; \n\t    r=this.inflate_flush(z,r);\n\t    q=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    if(q==this.end && this.read != 0){\n\t      q=0; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    }\n\t    if(m==0){\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\tt = this.left;\n\tif(t>n) t = n;\n\tif(t>m) t = m;\n\tarrayCopy(z.next_in, p, window, q, t);\n\tp += t;  n -= t;\n\tq += t;  m -= t;\n\tif ((this.left -= t) != 0)\n\t  break;\n\tthis.mode = (this.last != 0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_TABLE:\n\n\twhile(k<(14)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.table = t = (b & 0x3fff);\n\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29)\n\t  {\n\t    this.mode = IB_BAD;\n\t    z.msg = \"too many length or distance symbols\";\n\t    r = Z_DATA_ERROR;\n\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  }\n\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\tif(this.blens==null || this.blens.length<t){\n\t    this.blens=new Int32Array(t);\n\t}\n\telse{\n\t  for(var i=0; i<t; i++){\n              this.blens[i]=0;\n          }\n\t}\n\n\t{b>>>=(14);k-=(14);}\n\n\tthis.index = 0;\n\tthis.mode = IB_BTREE;\n      case IB_BTREE:\n\twhile (this.index < 4 + (this.table >>> 10)){\n\t  while(k<(3)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = b&7;\n\n\t  {b>>>=(3);k-=(3);}\n\t}\n\n\twhile(this.index < 19){\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = 0;\n\t}\n\n\tthis.bb[0] = 7;\n\tt = this.inftree.inflate_trees_bits(this.blens, this.bb, this.tb, this.hufts, z);\n\tif (t != Z_OK){\n\t  r = t;\n\t  if (r == Z_DATA_ERROR){\n\t    this.blens=null;\n\t    this.mode = IB_BAD;\n\t  }\n\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tthis.index = 0;\n\tthis.mode = IB_DTREE;\n      case IB_DTREE:\n\twhile (true){\n\t  t = this.table;\n\t  if(!(this.index < 258 + (t & 0x1f) + ((t >> 5) & 0x1f))){\n\t    break;\n\t  }\n\n\t  var h; //int[]\n\t  var i, j, c;\n\n\t  t = this.bb[0];\n\n\t  while(k<(t)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n//\t  if (this.tb[0]==-1){\n//            dlog(\"null...\");\n//\t  }\n\n\t  t=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+1];\n\t  c=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+2];\n\n\t  if (c < 16){\n\t    b>>>=(t);k-=(t);\n\t    this.blens[this.index++] = c;\n\t  }\n\t  else { // c == 16..18\n\t    i = c == 18 ? 7 : c - 14;\n\t    j = c == 18 ? 11 : 3;\n\n\t    while(k<(t+i)){\n\t      if(n!=0){\n\t\tr=Z_OK;\n\t      }\n\t      else{\n\t\tthis.bitb=b; this.bitk=k; \n\t\tz.avail_in=n;\n\t\tz.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\tthis.write=q;\n\t\treturn this.inflate_flush(z,r);\n\t      };\n\t      n--;\n\t      b|=(z.next_in[p++]&0xff)<<k;\n\t      k+=8;\n\t    }\n\n\t    b>>>=(t);k-=(t);\n\n\t    j += (b & inflate_mask[i]);\n\n\t    b>>>=(i);k-=(i);\n\n\t    i = this.index;\n\t    t = this.table;\n\t    if (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) ||\n\t\t(c == 16 && i < 1)){\n\t      this.blens=null;\n\t      this.mode = IB_BAD;\n\t      z.msg = \"invalid bit length repeat\";\n\t      r = Z_DATA_ERROR;\n\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\n\t    c = c == 16 ? this.blens[i-1] : 0;\n\t    do{\n\t      this.blens[i++] = c;\n\t    }\n\t    while (--j!=0);\n\t    this.index = i;\n\t  }\n\t}\n\n\tthis.tb[0]=-1;\n\t{\n\t    var bl=new Int32Array(1);\n\t    var bd=new Int32Array(1);\n\t    var tl=new Int32Array(1);\n\t    var td=new Int32Array(1);\n\t    bl[0] = 9;         // must be <= 9 for lookahead assumptions\n\t    bd[0] = 6;         // must be <= 9 for lookahead assumptions\n\n\t    t = this.table;\n\t    t = this.inftree.inflate_trees_dynamic(257 + (t & 0x1f), \n\t\t\t\t\t      1 + ((t >> 5) & 0x1f),\n\t\t\t\t\t      this.blens, bl, bd, tl, td, this.hufts, z);\n\n\t    if (t != Z_OK){\n\t        if (t == Z_DATA_ERROR){\n\t            this.blens=null;\n\t            this.mode = BAD;\n\t        }\n\t        r = t;\n\n\t        this.bitb=b; this.bitk=k; \n\t        z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t        this.write=q;\n\t        return this.inflate_flush(z,r);\n\t    }\n\t    this.codes.init(bl[0], bd[0], this.hufts, tl[0], this.hufts, td[0], z);\n\t}\n\tthis.mode = IB_CODES;\n      case IB_CODES:\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n; z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\n\tif ((r = this.codes.proc(this, z, r)) != Z_STREAM_END){\n\t  return this.inflate_flush(z, r);\n\t}\n\tr = Z_OK;\n\tthis.codes.free(z);\n\n\tp=z.next_in_index; n=z.avail_in;b=this.bitb;k=this.bitk;\n\tq=this.write;m = (q < this.read ? this.read-q-1 : this.end-q);\n\n\tif (this.last==0){\n\t  this.mode = IB_TYPE;\n\t  break;\n\t}\n\tthis.mode = IB_DRY;\n      case IB_DRY:\n\tthis.write=q; \n\tr = this.inflate_flush(z, r); \n\tq=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\tif (this.read != this.write){\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z, r);\n\t}\n\tthis.mode = DONE;\n      case IB_DONE:\n\tr = Z_STREAM_END;\n\n\tthis.bitb=b; this.bitk=k; \n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      case IB_BAD:\n\tr = Z_DATA_ERROR;\n\n\tthis.bitb=b; this.bitk=k; \n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\tthis.bitb=b; this.bitk=k; \n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      }\n    }\n  }\n\nInfBlocks.prototype.free = function(z){\n    this.reset(z, null);\n    this.window=null;\n    this.hufts=null;\n}\n\nInfBlocks.prototype.set_dictionary = function(d, start, n){\n    arrayCopy(d, start, window, 0, n);\n    this.read = this.write = n;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH. \nInfBlocks.prototype.sync_point = function(){\n    return this.mode == IB_LENS;\n}\n\n  // copy as much as possible from the sliding window to the output area\nInfBlocks.prototype.inflate_flush = function(z, r){\n    var n;\n    var p;\n    var q;\n\n    // local copies of source and destination pointers\n    p = z.next_out_index;\n    q = this.read;\n\n    // compute number of bytes to copy as far as end of window\n    n = ((q <= this.write ? this.write : this.end) - q);\n    if (n > z.avail_out) n = z.avail_out;\n    if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n    // update counters\n    z.avail_out -= n;\n    z.total_out += n;\n\n    // update check information\n    if(this.checkfn != null)\n      z.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n    // copy as far as end of window\n    arrayCopy(this.window, q, z.next_out, p, n);\n    p += n;\n    q += n;\n\n    // see if more to copy at beginning of window\n    if (q == this.end){\n      // wrap pointers\n      q = 0;\n      if (this.write == this.end)\n        this.write = 0;\n\n      // compute bytes to copy\n      n = this.write - q;\n      if (n > z.avail_out) n = z.avail_out;\n      if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n      // update counters\n      z.avail_out -= n;\n      z.total_out += n;\n\n      // update check information\n      if(this.checkfn != null)\n\tz.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n      // copy\n      arrayCopy(this.window, q, z.next_out, p, n);\n      p += n;\n      q += n;\n    }\n\n    // update pointers\n    z.next_out_index = p;\n    this.read = q;\n\n    // done\n    return r;\n  }\n\n//\n// InfCodes.java\n//\n\nvar IC_START=0;  // x: set up for LEN\nvar IC_LEN=1;    // i: get length/literal/eob next\nvar IC_LENEXT=2; // i: getting length extra (have base)\nvar IC_DIST=3;   // i: get distance next\nvar IC_DISTEXT=4;// i: getting distance extra\nvar IC_COPY=5;   // o: copying bytes in window, waiting for space\nvar IC_LIT=6;    // o: got literal, waiting for output space\nvar IC_WASH=7;   // o: got eob, possibly still output waiting\nvar IC_END=8;    // x: got eob and all data flushed\nvar IC_BADCODE=9;// x: got error\n\nfunction InfCodes() {\n}\n\nInfCodes.prototype.init = function(bl, bd, tl, tl_index, td, td_index, z) {\n    this.mode=IC_START;\n    this.lbits=bl;\n    this.dbits=bd;\n    this.ltree=tl;\n    this.ltree_index=tl_index;\n    this.dtree = td;\n    this.dtree_index=td_index;\n    this.tree=null;\n}\n\nInfCodes.prototype.proc = function(s, z, r){ \n    var j;              // temporary storage\n    var t;              // temporary pointer (int[])\n    var tindex;         // temporary pointer\n    var e;              // extra bits or operation\n    var b=0;            // bit buffer\n    var k=0;            // bits in bit buffer\n    var p=0;            // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n    var f;              // pointer to copy strings from\n\n    // copy input/output information to locals (UPDATE macro restores)\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // process input and output based on current state\n    while (true){\n      switch (this.mode){\n\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n      case IC_START:         // x: set up for LEN\n\tif (m >= 258 && n >= 10){\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  r = this.inflate_fast(this.lbits, this.dbits, \n\t\t\t   this.ltree, this.ltree_index, \n\t\t\t   this.dtree, this.dtree_index,\n\t\t\t   s, z);\n\n\t  p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n\t  q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t  if (r != Z_OK){\n\t    this.mode = r == Z_STREAM_END ? IC_WASH : IC_BADCODE;\n\t    break;\n\t  }\n\t}\n\tthis.need = this.lbits;\n\tthis.tree = this.ltree;\n\tthis.tree_index=this.ltree_index;\n\n\tthis.mode = IC_LEN;\n      case IC_LEN:           // i: get length/literal/eob next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b&inflate_mask[j]))*3;\n\n\tb>>>=(this.tree[tindex+1]);\n\tk-=(this.tree[tindex+1]);\n\n\te=this.tree[tindex];\n\n\tif(e == 0){               // literal\n\t  this.lit = this.tree[tindex+2];\n\t  this.mode = IC_LIT;\n\t  break;\n\t}\n\tif((e & 16)!=0 ){          // length\n\t  this.get = e & 15;\n\t  this.len = this.tree[tindex+2];\n\t  this.mode = IC_LENEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tif ((e & 32)!=0){               // end of block\n\t  this.mode = IC_WASH;\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid literal/length code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_LENEXT:        // i: getting length extra (have base)\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.len += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.need = this.dbits;\n\tthis.tree = this.dtree;\n\tthis.tree_index = this.dtree_index;\n\tthis.mode = IC_DIST;\n      case IC_DIST:          // i: get distance next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b & inflate_mask[j]))*3;\n\n\tb>>=this.tree[tindex+1];\n\tk-=this.tree[tindex+1];\n\n\te = (this.tree[tindex]);\n\tif((e & 16)!=0){               // distance\n\t  this.get = e & 15;\n\t  this.dist = this.tree[tindex+2];\n\t  this.mode = IC_DISTEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid distance code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_DISTEXT:       // i: getting distance extra\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.dist += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.mode = IC_COPY;\n      case IC_COPY:          // o: copying bytes in window, waiting for space\n        f = q - this.dist;\n        while(f < 0){     // modulo window size-\"while\" instead\n          f += s.end;     // of \"if\" handles invalid distances\n\t}\n\twhile (this.len!=0){\n\n\t  if(m==0){\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.write=q; r=s.inflate_flush(z,r);\n\t      q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t      if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\n\t      if(m==0){\n\t\ts.bitb=b;s.bitk=k;\n\t\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\ts.write=q;\n\t\treturn s.inflate_flush(z,r);\n\t      }  \n\t    }\n\t  }\n\n\t  s.window[q++]=s.window[f++]; m--;\n\n\t  if (f == s.end)\n            f = 0;\n\t  this.len--;\n\t}\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_LIT:           // o: got literal, waiting for output space\n\tif(m==0){\n\t  if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t  if(m==0){\n\t    s.write=q; r=s.inflate_flush(z,r);\n\t    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\t      return s.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\ts.window[q++]=this.lit; m--;\n\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_WASH:           // o: got eob, possibly more output\n\tif (k > 7){        // return unused byte, if any\n\t  k -= 8;\n\t  n++;\n\t  p--;             // can always return one\n\t}\n\n\ts.write=q; r=s.inflate_flush(z,r);\n\tq=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\tif (s.read != s.write){\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  return s.inflate_flush(z,r);\n\t}\n\tthis.mode = IC_END;\n      case IC_END:\n\tr = Z_STREAM_END;\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_BADCODE:       // x: got error\n\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n      }\n    }\n  }\n\nInfCodes.prototype.free = function(z){\n    //  ZFREE(z, c);\n}\n\n  // Called with number of bytes left to write in window at least 258\n  // (the maximum string length) and number of input bytes available\n  // at least ten.  The ten bytes are six bytes for the longest length/\n  // distance pair plus four bytes for overloading the bit buffer.\n\nInfCodes.prototype.inflate_fast = function(bl, bd, tl, tl_index, td, td_index, s, z) {\n    var t;                // temporary pointer\n    var   tp;             // temporary pointer (int[])\n    var tp_index;         // temporary pointer\n    var e;                // extra bits or operation\n    var b;                // bit buffer\n    var k;                // bits in bit buffer\n    var p;                // input data pointer\n    var n;                // bytes available there\n    var q;                // output window write pointer\n    var m;                // bytes to end of window or read pointer\n    var ml;               // mask for literal/length tree\n    var md;               // mask for distance tree\n    var c;                // bytes to copy\n    var d;                // distance back to copy from\n    var r;                // copy source pointer\n\n    var tp_index_t_3;     // (tp_index+t)*3\n\n    // load input, output, bit values\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // initialize masks\n    ml = inflate_mask[bl];\n    md = inflate_mask[bd];\n\n    // do until not enough input or output space for fast loop\n    do {                          // assume called with m >= 258 && n >= 10\n      // get literal/length code\n      while(k<(20)){              // max bits for literal/length code\n\tn--;\n\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n      }\n\n      t= b&ml;\n      tp=tl; \n      tp_index=tl_index;\n      tp_index_t_3=(tp_index+t)*3;\n      if ((e = tp[tp_index_t_3]) == 0){\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\ts.window[q++] = tp[tp_index_t_3+2];\n\tm--;\n\tcontinue;\n      }\n      do {\n\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\tif((e&16)!=0){\n\t  e &= 15;\n\t  c = tp[tp_index_t_3+2] + (b & inflate_mask[e]);\n\n\t  b>>=e; k-=e;\n\n\t  // decode distance base of block to copy\n\t  while(k<(15)){           // max bits for distance code\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t  }\n\n\t  t= b&md;\n\t  tp=td;\n\t  tp_index=td_index;\n          tp_index_t_3=(tp_index+t)*3;\n\t  e = tp[tp_index_t_3];\n\n\t  do {\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    if((e&16)!=0){\n\t      // get extra bits to add to distance base\n\t      e &= 15;\n\t      while(k<(e)){         // get extra bits (up to 13)\n\t\tn--;\n\t\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t      }\n\n\t      d = tp[tp_index_t_3+2] + (b&inflate_mask[e]);\n\n\t      b>>=(e); k-=(e);\n\n\t      // do the copy\n\t      m -= c;\n\t      if (q >= d){                // offset before dest\n\t\t//  just copy\n\t\tr=q-d;\n\t\tif(q-r>0 && 2>(q-r)){           \n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t\telse{\n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t      }\n\t      else{                  // else offset after destination\n                r=q-d;\n                do{\n                  r+=s.end;          // force pointer in window\n                }while(r<0);         // covers invalid distances\n\t\te=s.end-r;\n\t\tif(c>e){             // if source crosses,\n\t\t  c-=e;              // wrapped copy\n\t\t  if(q-r>0 && e>(q-r)){           \n\t\t    do{s.window[q++] = s.window[r++];}\n\t\t    while(--e!=0);\n\t\t  }\n\t\t  else{\n\t\t    arrayCopy(s.window, r, s.window, q, e);\n\t\t    q+=e; r+=e; e=0;\n\t\t  }\n\t\t  r = 0;                  // copy rest from start of window\n\t\t}\n\n\t      }\n\n\t      // copy all or what's left\n              do{s.window[q++] = s.window[r++];}\n\t\twhile(--c!=0);\n\t      break;\n\t    }\n\t    else if((e&64)==0){\n\t      t+=tp[tp_index_t_3+2];\n\t      t+=(b&inflate_mask[e]);\n\t      tp_index_t_3=(tp_index+t)*3;\n\t      e=tp[tp_index_t_3];\n\t    }\n\t    else{\n\t      z.msg = \"invalid distance code\";\n\n\t      c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\n\t      return Z_DATA_ERROR;\n\t    }\n\t  }\n\t  while(true);\n\t  break;\n\t}\n\n\tif((e&64)==0){\n\t  t+=tp[tp_index_t_3+2];\n\t  t+=(b&inflate_mask[e]);\n\t  tp_index_t_3=(tp_index+t)*3;\n\t  if((e=tp[tp_index_t_3])==0){\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    s.window[q++]=tp[tp_index_t_3+2];\n\t    m--;\n\t    break;\n\t  }\n\t}\n\telse if((e&32)!=0){\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n \n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_STREAM_END;\n\t}\n\telse{\n\t  z.msg=\"invalid literal/length code\";\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_DATA_ERROR;\n\t}\n      } \n      while(true);\n    } \n    while(m>=258 && n>= 10);\n\n    // not enough input or output--restore pointers and return\n    c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n    s.bitb=b;s.bitk=k;\n    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n    s.write=q;\n\n    return Z_OK;\n}\n\n//\n// InfTree.java\n//\n\nfunction InfTree() {\n}\n\nInfTree.prototype.huft_build = function(b, bindex, n, s, d, e, t, m, hp, hn, v) {\n\n    // Given a list of code lengths and a maximum table size, make a set of\n    // tables to decode that set of codes.  Return Z_OK on success, Z_BUF_ERROR\n    // if the given code set is incomplete (the tables are still built in this\n    // case), Z_DATA_ERROR if the input is invalid (an over-subscribed set of\n    // lengths), or Z_MEM_ERROR if not enough memory.\n\n    var a;                       // counter for codes of length k\n    var f;                       // i repeats in table every f entries\n    var g;                       // maximum code length\n    var h;                       // table level\n    var i;                       // counter, current code\n    var j;                       // counter\n    var k;                       // number of bits in current code\n    var l;                       // bits per table (returned in m)\n    var mask;                    // (1 << w) - 1, to avoid cc -O bug on HP\n    var p;                       // pointer into c[], b[], or v[]\n    var q;                       // points to current table\n    var w;                       // bits before this table == (l * h)\n    var xp;                      // pointer into x\n    var y;                       // number of dummy codes added\n    var z;                       // number of entries in current table\n\n    // Generate counts for each bit length\n\n    p = 0; i = n;\n    do {\n      this.c[b[bindex+p]]++; p++; i--;   // assume all entries <= BMAX\n    }while(i!=0);\n\n    if(this.c[0] == n){                // null input--all zero length codes\n      t[0] = -1;\n      m[0] = 0;\n      return Z_OK;\n    }\n\n    // Find minimum and maximum length, bound *m by those\n    l = m[0];\n    for (j = 1; j <= BMAX; j++)\n      if(this.c[j]!=0) break;\n    k = j;                        // minimum code length\n    if(l < j){\n      l = j;\n    }\n    for (i = BMAX; i!=0; i--){\n      if(this.c[i]!=0) break;\n    }\n    g = i;                        // maximum code length\n    if(l > i){\n      l = i;\n    }\n    m[0] = l;\n\n    // Adjust last length count to fill out codes, if needed\n    for (y = 1 << j; j < i; j++, y <<= 1){\n      if ((y -= this.c[j]) < 0){\n        return Z_DATA_ERROR;\n      }\n    }\n    if ((y -= this.c[i]) < 0){\n      return Z_DATA_ERROR;\n    }\n    this.c[i] += y;\n\n    // Generate starting offsets into the value table for each length\n    this.x[1] = j = 0;\n    p = 1;  xp = 2;\n    while (--i!=0) {                 // note that i == g from above\n      this.x[xp] = (j += this.c[p]);\n      xp++;\n      p++;\n    }\n\n    // Make a table of values in order of bit lengths\n    i = 0; p = 0;\n    do {\n      if ((j = b[bindex+p]) != 0){\n        this.v[this.x[j]++] = i;\n      }\n      p++;\n    }\n    while (++i < n);\n    n = this.x[g];                     // set n to length of v\n\n    // Generate the Huffman codes and for each, make the table entries\n    this.x[0] = i = 0;                 // first Huffman code is zero\n    p = 0;                        // grab values in bit order\n    h = -1;                       // no tables yet--level -1\n    w = -l;                       // bits decoded == (l * h)\n    this.u[0] = 0;                     // just to keep compilers happy\n    q = 0;                        // ditto\n    z = 0;                        // ditto\n\n    // go through the bit lengths (k already is bits in shortest code)\n    for (; k <= g; k++){\n      a = this.c[k];\n      while (a--!=0){\n\t// here i is the Huffman code of length k bits for value *p\n\t// make tables up to required level\n        while (k > w + l){\n          h++;\n          w += l;                 // previous table always l bits\n\t  // compute minimum size table less than or equal to l bits\n          z = g - w;\n          z = (z > l) ? l : z;        // table size upper limit\n          if((f=1<<(j=k-w))>a+1){     // try a k-w bit table\n                                      // too few codes for k-w bit table\n            f -= a + 1;               // deduct codes from patterns left\n            xp = k;\n            if(j < z){\n              while (++j < z){        // try smaller tables up to z bits\n                if((f <<= 1) <= this.c[++xp])\n                  break;              // enough codes to use up j bits\n                f -= this.c[xp];           // else deduct codes from patterns\n              }\n\t    }\n          }\n          z = 1 << j;                 // table entries for j-bit table\n\n\t  // allocate new table\n          if (this.hn[0] + z > MANY){       // (note: doesn't matter for fixed)\n            return Z_DATA_ERROR;       // overflow of MANY\n          }\n          this.u[h] = q = /*hp+*/ this.hn[0];   // DEBUG\n          this.hn[0] += z;\n \n\t  // connect to last table, if there is one\n\t  if(h!=0){\n            this.x[h]=i;           // save pattern for backing up\n            this.r[0]=j;     // bits in this table\n            this.r[1]=l;     // bits to dump before this table\n            j=i>>>(w - l);\n            this.r[2] = (q - this.u[h-1] - j);               // offset to this table\n            arrayCopy(this.r, 0, hp, (this.u[h-1]+j)*3, 3); // connect to last table\n          }\n          else{\n            t[0] = q;               // first table is returned result\n\t  }\n        }\n\n\t// set up table entry in r\n        this.r[1] = (k - w);\n        if (p >= n){\n          this.r[0] = 128 + 64;      // out of values--invalid code\n\t}\n        else if (v[p] < s){\n          this.r[0] = (this.v[p] < 256 ? 0 : 32 + 64);  // 256 is end-of-block\n          this.r[2] = this.v[p++];          // simple code is just the value\n        }\n        else{\n          this.r[0]=(e[this.v[p]-s]+16+64); // non-simple--look up in lists\n          this.r[2]=d[this.v[p++] - s];\n        }\n\n        // fill code-like entries with r\n        f=1<<(k-w);\n        for (j=i>>>w;j<z;j+=f){\n          arrayCopy(this.r, 0, hp, (q+j)*3, 3);\n\t}\n\n\t// backwards increment the k-bit code i\n        for (j = 1 << (k - 1); (i & j)!=0; j >>>= 1){\n          i ^= j;\n\t}\n        i ^= j;\n\n\t// backup over finished tables\n        mask = (1 << w) - 1;      // needed on HP, cc -O bug\n        while ((i & mask) != this.x[h]){\n          h--;                    // don't need to update q\n          w -= l;\n          mask = (1 << w) - 1;\n        }\n      }\n    }\n    // Return Z_BUF_ERROR if we were given an incomplete table\n    return y != 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n}\n\nInfTree.prototype.inflate_trees_bits = function(c, bb, tb, hp, z) {\n    var result;\n    this.initWorkArea(19);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, 19, 19, null, null, tb, bb, hp, this.hn, this.v);\n\n    if(result == Z_DATA_ERROR){\n      z.msg = \"oversubscribed dynamic bit lengths tree\";\n    }\n    else if(result == Z_BUF_ERROR || bb[0] == 0){\n      z.msg = \"incomplete dynamic bit lengths tree\";\n      result = Z_DATA_ERROR;\n    }\n    return result;\n}\n\nInfTree.prototype.inflate_trees_dynamic = function(nl, nd, c, bl, bd, tl, td, hp, z) {\n    var result;\n\n    // build literal/length tree\n    this.initWorkArea(288);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, this.hn, this.v);\n    if (result != Z_OK || bl[0] == 0){\n      if(result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed literal/length tree\";\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"incomplete literal/length tree\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    // build distance tree\n    this.initWorkArea(288);\n    result = this.huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, this.hn, this.v);\n\n    if (result != Z_OK || (bd[0] == 0 && nl > 257)){\n      if (result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed distance tree\";\n      }\n      else if (result == Z_BUF_ERROR) {\n        z.msg = \"incomplete distance tree\";\n        result = Z_DATA_ERROR;\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"empty distance tree with lengths\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    return Z_OK;\n}\n/*\n  static int inflate_trees_fixed(int[] bl,  //literal desired/actual bit depth\n                                 int[] bd,  //distance desired/actual bit depth\n                                 int[][] tl,//literal/length tree result\n                                 int[][] td,//distance tree result \n                                 ZStream z  //for memory allocation\n\t\t\t\t ){\n\n*/\n\nfunction inflate_trees_fixed(bl, bd, tl, td, z) {\n    bl[0]=fixed_bl;\n    bd[0]=fixed_bd;\n    tl[0]=fixed_tl;\n    td[0]=fixed_td;\n    return Z_OK;\n}\n\nInfTree.prototype.initWorkArea = function(vsize){\n    if(this.hn==null){\n        this.hn=new Int32Array(1);\n        this.v=new Int32Array(vsize);\n        this.c=new Int32Array(BMAX+1);\n        this.r=new Int32Array(3);\n        this.u=new Int32Array(BMAX);\n        this.x=new Int32Array(BMAX+1);\n    }\n    if(this.v.length<vsize){ \n        this.v=new Int32Array(vsize); \n    }\n    for(var i=0; i<vsize; i++){this.v[i]=0;}\n    for(var i=0; i<BMAX+1; i++){this.c[i]=0;}\n    for(var i=0; i<3; i++){this.r[i]=0;}\n//  for(int i=0; i<BMAX; i++){u[i]=0;}\n    arrayCopy(this.c, 0, this.u, 0, BMAX);\n//  for(int i=0; i<BMAX+1; i++){x[i]=0;}\n    arrayCopy(this.c, 0, this.x, 0, BMAX+1);\n}\n\nvar testArray = new Uint8Array(1);\nvar hasSubarray = (typeof testArray.subarray === 'function');\nvar hasSlice = false; /* (typeof testArray.slice === 'function'); */ // Chrome slice performance is so dire that we're currently not using it...\n\nfunction arrayCopy(src, srcOffset, dest, destOffset, count) {\n    if (count == 0) {\n        return;\n    } \n    if (!src) {\n        throw \"Undef src\";\n    } else if (!dest) {\n        throw \"Undef dest\";\n    }\n\n    if (srcOffset == 0 && count == src.length) {\n        arrayCopy_fast(src, dest, destOffset);\n    } else if (hasSubarray) {\n        arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset); \n    } else if (src.BYTES_PER_ELEMENT == 1 && count > 100) {\n        arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else { \n        arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n    }\n\n}\n\nfunction arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n\n    // dlog('_slow call: srcOffset=' + srcOffset + '; destOffset=' + destOffset + '; count=' + count);\n\n     for (var i = 0; i < count; ++i) {\n        dest[destOffset + i] = src[srcOffset + i];\n    }\n}\n\nfunction arrayCopy_fast(src, dest, destOffset) {\n    dest.set(src, destOffset);\n}\n\n\n  // largest prime smaller than 65536\nvar ADLER_BASE=65521; \n  // NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1\nvar ADLER_NMAX=5552;\n\nfunction adler32(adler, /* byte[] */ buf,  index, len){\n    if(buf == null){ return 1; }\n\n    var s1=adler&0xffff;\n    var s2=(adler>>16)&0xffff;\n    var k;\n\n    while(len > 0) {\n      k=len<ADLER_NMAX?len:ADLER_NMAX;\n      len-=k;\n      while(k>=16){\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        k-=16;\n      }\n      if(k!=0){\n        do{\n          s1+=buf[index++]&0xff; s2+=s1;\n        }\n        while(--k!=0);\n      }\n      s1%=ADLER_BASE;\n      s2%=ADLER_BASE;\n    }\n    return (s2<<16)|s1;\n}\n\n\n\nfunction jszlib_inflate_buffer(buffer, start, length, afterUncOffset) {\n    if (!start) {\n        buffer = new Uint8Array(buffer);\n    } else {\n        buffer = new Uint8Array(buffer, start, length);\n    }\n\n    var z = new ZStream();\n    z.inflateInit(DEF_WBITS, true);\n    z.next_in = buffer;\n    z.next_in_index = 0;\n    z.avail_in = buffer.length;\n\n    var oBlockList = [];\n    var totalSize = 0;\n    while (true) {\n        var obuf = new Uint8Array(32000);\n        z.next_out = obuf;\n        z.next_out_index = 0;\n        z.avail_out = obuf.length;\n        var status = z.inflate(Z_NO_FLUSH);\n        if (status != Z_OK && status != Z_STREAM_END) {\n            throw z.msg;\n        }\n        if (z.avail_out != 0) {\n            var newob = new Uint8Array(obuf.length - z.avail_out);\n            arrayCopy(obuf, 0, newob, 0, (obuf.length - z.avail_out));\n            obuf = newob;\n        }\n        oBlockList.push(obuf);\n        totalSize += obuf.length;\n        if (status == Z_STREAM_END) {\n            break;\n        }\n    }\n\n    if (afterUncOffset) {\n        afterUncOffset[0] = (start || 0) + z.next_in_index;\n    }\n\n    if (oBlockList.length == 1) {\n        return oBlockList[0].buffer;\n    } else {\n        var out = new Uint8Array(totalSize);\n        var cursor = 0;\n        for (var i = 0; i < oBlockList.length; ++i) {\n            var b = oBlockList[i];\n            arrayCopy(b, 0, out, cursor, b.length);\n            cursor += b.length;\n        }\n        return out.buffer;\n    }\n}\n\nexport {jszlib_inflate_buffer,arrayCopy}","/**\n * @fileoverview Zlib namespace. Zlib の仕様に準拠した圧縮は Zlib.Deflate で実装\n * されている. これは Inflate との共存を考慮している為.\n */\n\nvar USE_TYPEDARRAY = true;\nconst ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE = 65000;\n\nvar Zlib = {\n  Huffman: {},\n  Util: {},\n  CRC32: {}\n};\n\n\n/**\n * Compression Method\n * @enum {number}\n */\nZlib.CompressionMethod = {\n  DEFLATE: 8,\n  RESERVED: 15\n};\n\n\n\n\n/**\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Zip = function(opt_params) {\n  opt_params = opt_params || {};\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  this.files = [];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment = opt_params['comment'];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password;\n};\n\n\n/**\n * @enum {number}\n */\nZlib.Zip.CompressionMethod = {\n  STORE: 0,\n  DEFLATE: 8\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.OperatingSystem = {\n  MSDOS: 0,\n  UNIX: 3,\n  MACINTOSH: 7\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.Flags = {\n  ENCRYPT:    0x0001,\n  DESCRIPTOR: 0x0008,\n  UTF8:       0x0800\n};\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\n/**\n * @param {Array.<number>|Uint8Array} input\n * @param {Object=} opt_params options.\n */\nZlib.Zip.prototype.addFile = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {string} */\n  var filename = '' || opt_params['filename'];\n  /** @type {boolean} */\n  var compressed;\n  /** @type {number} */\n  var size = input.length;\n  /** @type {number} */\n  var crc32 = 0;\n\n  if (USE_TYPEDARRAY && input instanceof Array) {\n    input = new Uint8Array(input);\n  }\n\n  // default\n  if (typeof opt_params['compressionMethod'] !== 'number') {\n    opt_params['compressionMethod'] = Zlib.Zip.CompressionMethod.DEFLATE;\n  }\n\n  // その場で圧縮する場合\n  if (opt_params['compress']) {\n    switch (opt_params['compressionMethod']) {\n      case Zlib.Zip.CompressionMethod.STORE:\n        break;\n      case Zlib.Zip.CompressionMethod.DEFLATE:\n        crc32 = Zlib.CRC32.calc(input);\n        input = this.deflateWithOption(input, opt_params);\n        compressed = true;\n        break;\n      default:\n        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n    }\n  }\n\n  this.files.push({\n    buffer: input,\n    option: opt_params,\n    compressed: compressed,\n    encrypted: false,\n    size: size,\n    crc32: crc32\n  });\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Zip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\nZlib.Zip.prototype.compress = function() {\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  var files = this.files;\n  /** @type {{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }} */\n  var file;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var op1;\n  /** @type {number} */\n  var op2;\n  /** @type {number} */\n  var op3;\n  /** @type {number} */\n  var localFileSize = 0;\n  /** @type {number} */\n  var centralDirectorySize = 0;\n  /** @type {number} */\n  var endOfCentralDirectorySize;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var needVersion;\n  /** @type {number} */\n  var flags;\n  /** @type {Zlib.Zip.CompressionMethod} */\n  var compressionMethod;\n  /** @type {Date} */\n  var date;\n  /** @type {number} */\n  var crc32;\n  /** @type {number} */\n  var size;\n  /** @type {number} */\n  var plainSize;\n  /** @type {number} */\n  var filenameLength;\n  /** @type {number} */\n  var extraFieldLength;\n  /** @type {number} */\n  var commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var filename;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var extraField;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var comment;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {*} */\n  var tmp;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var jl;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        (file.option['filename']) ? file.option['filename'].length : 0;\n    extraFieldLength =\n        (file.option['extraField']) ? file.option['extraField'].length : 0;\n    commentLength =\n        (file.option['comment']) ? file.option['comment'].length : 0;\n\n    // 圧縮されていなかったら圧縮\n    if (!file.compressed) {\n      // 圧縮前に CRC32 の計算をしておく\n      file.crc32 = Zlib.CRC32.calc(file.buffer);\n\n      switch (file.option['compressionMethod']) {\n        case Zlib.Zip.CompressionMethod.STORE:\n          break;\n        case Zlib.Zip.CompressionMethod.DEFLATE:\n          file.buffer = this.deflateWithOption(file.buffer, file.option);\n          file.compressed = true;\n          break;\n        default:\n          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n      }\n    }\n\n    // encryption\n    if (file.option['password'] !== void 0|| this.password !== void 0) {\n      // init encryption\n      key = this.createEncryptionKey(file.option['password'] || this.password);\n\n      // add header\n      buffer = file.buffer;\n      if (USE_TYPEDARRAY) {\n        tmp = new Uint8Array(buffer.length + 12);\n        tmp.set(buffer, 12);\n        buffer = tmp;\n      } else {\n        buffer.unshift(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n      }\n\n      for (j = 0; j < 12; ++j) {\n        buffer[j] = this.encode(\n            key,\n            i === 11 ? (file.crc32 & 0xff) : (Math.random() * 256 | 0)\n        );\n      }\n\n      // data encryption\n      for (jl = buffer.length; j < jl; ++j) {\n        buffer[j] = this.encode(key, buffer[j]);\n      }\n      file.buffer = buffer;\n    }\n\n    // 必要バッファサイズの計算\n    localFileSize +=\n        // local file header\n        30 + filenameLength +\n        // file data\n        file.buffer.length;\n\n    centralDirectorySize +=\n        // file header\n        46 + filenameLength + commentLength;\n  }\n\n  // end of central directory\n  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n  output = new (USE_TYPEDARRAY ? Uint8Array : Array)(\n      localFileSize + centralDirectorySize + endOfCentralDirectorySize\n  );\n  op1 = 0;\n  op2 = localFileSize;\n  op3 = op2 + centralDirectorySize;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        file.option['filename'] ? file.option['filename'].length :  0;\n    extraFieldLength = 0; // TODO\n    commentLength =\n        file.option['comment'] ? file.option['comment'].length : 0;\n\n    //-------------------------------------------------------------------------\n    // local file header & file header\n    //-------------------------------------------------------------------------\n\n    offset = op1;\n\n    // signature\n    // local file header\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[0];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[1];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[2];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[3];\n    // file header\n    output[op2++] = Zlib.Zip.FileHeaderSignature[0];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[1];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[2];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[3];\n\n    // compressor info\n    needVersion = 20;\n    output[op2++] = needVersion & 0xff;\n    output[op2++] =\n        /** @type {Zlib.Zip.OperatingSystem} */\n        (file.option['os']) ||\n        Zlib.Zip.OperatingSystem.MSDOS;\n\n    // need version\n    output[op1++] = output[op2++] =  needVersion       & 0xff;\n    output[op1++] = output[op2++] = (needVersion >> 8) & 0xff;\n\n    // general purpose bit flag\n    flags = 0;\n    if (file.option['password'] || this.password) {\n      flags |= Zlib.Zip.Flags.ENCRYPT;\n    }\n    output[op1++] = output[op2++] =  flags       & 0xff;\n    output[op1++] = output[op2++] = (flags >> 8) & 0xff;\n\n    // compression method\n    compressionMethod =\n        /** @type {Zlib.Zip.CompressionMethod} */\n        (file.option['compressionMethod']);\n    output[op1++] = output[op2++] =  compressionMethod       & 0xff;\n    output[op1++] = output[op2++] = (compressionMethod >> 8) & 0xff;\n\n    // date\n    date = /** @type {(Date|undefined)} */(file.option['date']) || new Date();\n    output[op1++] = output[op2++] =\n        ((date.getMinutes() & 0x7) << 5) |\n        (date.getSeconds() / 2 | 0);\n    output[op1++] = output[op2++] =\n        (date.getHours()   << 3) |\n        (date.getMinutes() >> 3);\n    //\n    output[op1++] = output[op2++] =\n        ((date.getMonth() + 1 & 0x7) << 5) |\n        (date.getDate());\n    output[op1++] = output[op2++] =\n        ((date.getFullYear() - 1980 & 0x7f) << 1) |\n        (date.getMonth() + 1 >> 3);\n\n    // CRC-32\n    crc32 = file.crc32;\n    output[op1++] = output[op2++] =  crc32        & 0xff;\n    output[op1++] = output[op2++] = (crc32 >>  8) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 16) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 24) & 0xff;\n\n    // compressed size\n    size = file.buffer.length;\n    output[op1++] = output[op2++] =  size        & 0xff;\n    output[op1++] = output[op2++] = (size >>  8) & 0xff;\n    output[op1++] = output[op2++] = (size >> 16) & 0xff;\n    output[op1++] = output[op2++] = (size >> 24) & 0xff;\n\n    // uncompressed size\n    plainSize = file.size;\n    output[op1++] = output[op2++] =  plainSize        & 0xff;\n    output[op1++] = output[op2++] = (plainSize >>  8) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 16) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 24) & 0xff;\n\n    // filename length\n    output[op1++] = output[op2++] =  filenameLength       & 0xff;\n    output[op1++] = output[op2++] = (filenameLength >> 8) & 0xff;\n\n    // extra field length\n    output[op1++] = output[op2++] =  extraFieldLength       & 0xff;\n    output[op1++] = output[op2++] = (extraFieldLength >> 8) & 0xff;\n\n    // file comment length\n    output[op2++] =  commentLength       & 0xff;\n    output[op2++] = (commentLength >> 8) & 0xff;\n\n    // disk number start\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // internal file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // external file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // relative offset of local header\n    output[op2++] =  offset        & 0xff;\n    output[op2++] = (offset >>  8) & 0xff;\n    output[op2++] = (offset >> 16) & 0xff;\n    output[op2++] = (offset >> 24) & 0xff;\n\n    // filename\n    filename = file.option['filename'];\n    if (filename) {\n      if (USE_TYPEDARRAY) {\n        output.set(filename, op1);\n        output.set(filename, op2);\n        op1 += filenameLength;\n        op2 += filenameLength;\n      } else {\n        for (j = 0; j < filenameLength; ++j) {\n          output[op1++] = output[op2++] = filename[j];\n        }\n      }\n    }\n\n    // extra field\n    extraField = file.option['extraField'];\n    if (extraField) {\n      if (USE_TYPEDARRAY) {\n        output.set(extraField, op1);\n        output.set(extraField, op2);\n        op1 += extraFieldLength;\n        op2 += extraFieldLength;\n      } else {\n        for (j = 0; j < commentLength; ++j) {\n          output[op1++] = output[op2++] = extraField[j];\n        }\n      }\n    }\n\n    // comment\n    comment = file.option['comment'];\n    if (comment) {\n      if (USE_TYPEDARRAY) {\n        output.set(comment, op2);\n        op2 += commentLength;\n      } else {\n        for (j = 0; j < commentLength; ++j) {\n          output[op2++] = comment[j];\n        }\n      }\n    }\n\n    //-------------------------------------------------------------------------\n    // file data\n    //-------------------------------------------------------------------------\n\n    if (USE_TYPEDARRAY) {\n      output.set(file.buffer, op1);\n      op1 += file.buffer.length;\n    } else {\n      for (j = 0, jl = file.buffer.length; j < jl; ++j) {\n        output[op1++] = file.buffer[j];\n      }\n    }\n  }\n\n  //-------------------------------------------------------------------------\n  // end of central directory\n  //-------------------------------------------------------------------------\n\n  // signature\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[0];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[1];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[2];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[3];\n\n  // number of this disk\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // number of the disk with the start of the central directory\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // total number of entries in the central directory on this disk\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // total number of entries in the central directory\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // size of the central directory\n  output[op3++] =  centralDirectorySize        & 0xff;\n  output[op3++] = (centralDirectorySize >>  8) & 0xff;\n  output[op3++] = (centralDirectorySize >> 16) & 0xff;\n  output[op3++] = (centralDirectorySize >> 24) & 0xff;\n\n  // offset of start of central directory with respect to the starting disk number\n  output[op3++] =  localFileSize        & 0xff;\n  output[op3++] = (localFileSize >>  8) & 0xff;\n  output[op3++] = (localFileSize >> 16) & 0xff;\n  output[op3++] = (localFileSize >> 24) & 0xff;\n\n  // .ZIP file comment length\n  commentLength = this.comment ? this.comment.length : 0;\n  output[op3++] =  commentLength       & 0xff;\n  output[op3++] = (commentLength >> 8) & 0xff;\n\n  // .ZIP file comment\n  if (this.comment) {\n    if (USE_TYPEDARRAY) {\n      output.set(this.comment, op3);\n      op3 += commentLength;\n    } else {\n      for (j = 0, jl = commentLength; j < jl; ++j) {\n        output[op3++] = this.comment[j];\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input\n * @param {Object=} opt_params options.\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Zip.prototype.deflateWithOption = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate} */\n  var deflator = new Zlib.RawDeflate(input, opt_params['deflateOption']);\n\n  return deflator.compress();\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @return {number}\n */\nZlib.Zip.prototype.getByte = function(key) {\n  /** @type {number} */\n  var tmp = ((key[2] & 0xffff) | 2);\n\n  return ((tmp * (tmp ^ 1)) >> 8) & 0xff;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Zip.prototype.encode = function(key, n) {\n  /** @type {number} */\n  var tmp = this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return tmp ^ n;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @param {number} n\n */\nZlib.Zip.prototype.updateKeys = function(key, n) {\n  key[0] = Zlib.CRC32.single(key[0], n);\n  key[1] =\n      (((((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681) >>> 0) + 1) >>> 0;\n  key[2] = Zlib.CRC32.single(key[2], key[1] >>> 24);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n * @return {!(Array.<number>|Uint32Array|Object)}\n */\nZlib.Zip.prototype.createEncryptionKey = function(password) {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var key = [305419896, 591751049, 878082192];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (USE_TYPEDARRAY) {\n    key = new Uint32Array(key);\n  }\n\n  for (i = 0, il = password.length; i < il; ++i) {\n    this.updateKeys(key, password[i] & 0xff);\n  }\n\n  return key;\n};\n\n\n\n/**\n * build huffman table from length list.\n * @param {!(Array.<number>|Uint8Array)} lengths length list.\n * @return {!Array} huffman table.\n */\nZlib.Huffman.buildHuffmanTable = function(lengths) {\n  /** @type {number} length list size. */\n  var listSize = lengths.length;\n  /** @type {number} max code length for table size. */\n  var maxCodeLength = 0;\n  /** @type {number} min code length for table size. */\n  var minCodeLength = Number.POSITIVE_INFINITY;\n  /** @type {number} table size. */\n  var size;\n  /** @type {!(Array|Uint8Array)} huffman code table. */\n  var table;\n  /** @type {number} bit length. */\n  var bitLength;\n  /** @type {number} huffman code. */\n  var code;\n  /**\n   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n   * @type {number} skip length for table filling.\n   */\n  var skip;\n  /** @type {number} reversed code. */\n  var reversed;\n  /** @type {number} reverse temp. */\n  var rtemp;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} table value. */\n  var value;\n\n  // Math.max は遅いので最長の値は for-loop で取得する\n  for (i = 0, il = listSize; i < il; ++i) {\n    if (lengths[i] > maxCodeLength) {\n      maxCodeLength = lengths[i];\n    }\n    if (lengths[i] < minCodeLength) {\n      minCodeLength = lengths[i];\n    }\n  }\n\n  size = 1 << maxCodeLength;\n  table = new (USE_TYPEDARRAY ? Uint32Array : Array)(size);\n\n  // ビット長の短い順からハフマン符号を割り当てる\n  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n    for (i = 0; i < listSize; ++i) {\n      if (lengths[i] === bitLength) {\n        // ビットオーダーが逆になるためビット長分並びを反転する\n        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n          reversed = (reversed << 1) | (rtemp & 1);\n          rtemp >>= 1;\n        }\n\n        // 最大ビット長をもとにテーブルを作るため、\n        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n        // そのどちらでも良い場所は同じ値で埋めることで\n        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n        value = (bitLength << 16) | i;\n        for (j = reversed; j < size; j += skip) {\n          table[j] = value;\n        }\n\n        ++code;\n      }\n    }\n\n    // 次のビット長へ\n    ++bitLength;\n    code <<= 1;\n    skip <<= 1;\n  }\n\n  return [table, maxCodeLength, minCodeLength];\n};\n\n\n\n\n//-----------------------------------------------------------------------------\n\n/** @define {number} buffer block size. */\nvar ZLIB_RAW_INFLATE_BUFFER_SIZE = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\n//-----------------------------------------------------------------------------\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {Object} opt_params option parameter.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n */\nZlib.RawInflate = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n  this.buffer;\n  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = USE_TYPEDARRAY ? new Uint8Array(input) : input;\n  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n  this.output;\n  /** @type {!number} output buffer pointer. */\n  this.op;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n  this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['bufferSize']) {\n      this.bufferSize = opt_params['bufferSize'];\n    }\n    if (opt_params['bufferType']) {\n      this.bufferType = opt_params['bufferType'];\n    }\n    if (opt_params['resize']) {\n      this.resize = opt_params['resize'];\n    }\n  }\n\n  // initialize\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.op = Zlib.RawInflate.MaxBackwardLength;\n      this.output =\n          new (USE_TYPEDARRAY ? Uint8Array : Array)(\n              Zlib.RawInflate.MaxBackwardLength +\n              this.bufferSize +\n              Zlib.RawInflate.MaxCopyLength\n          );\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.op = 0;\n      this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.bufferSize);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflate.BufferType = {\n  BLOCK: 0,\n  ADAPTIVE: 1\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n */\nZlib.RawInflate.prototype.decompress = function() {\n  while (!this.bfinal) {\n    this.parseBlock();\n  }\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      return this.concatBufferBlock();\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      return this.concatBufferDynamic();\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflate.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflate.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.Order = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.LengthExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.DistCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.DistExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflate.prototype.parseBlock = function() {\n  /** @type {number} header */\n  var hdr = this.readBits(3);\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n      // uncompressed\n    case 0:\n      this.parseUncompressedBlock();\n      break;\n      // fixed huffman\n    case 1:\n      this.parseFixedHuffmanBlock();\n      break;\n      // dynamic huffman\n    case 2:\n      this.parseDynamicHuffmanBlock();\n      break;\n      // reserved or other\n    default:\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflate.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // input byte\n  if (ip + ((length - bitsbuflen + 7) >> 3) >= inputLength) {\n    throw new Error('input buffer is broken');\n  }\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflate.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (ip >= inputLength) {\n      break;\n    }\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflate.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n  /** @type {number} output buffer length */\n  var olength = output.length;\n  /** @type {number} copy counter */\n  var preCopy;\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  // len\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: LEN');\n  }\n  len = input[ip++] | (input[ip++] << 8);\n\n  // nlen\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: NLEN');\n  }\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // check size\n  if (ip + len > input.length) { throw new Error('input buffer is broken'); }\n\n  // expand buffer\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      // pre copy\n      while (op + len > output.length) {\n        preCopy = olength - op;\n        len -= preCopy;\n        if (USE_TYPEDARRAY) {\n          output.set(input.subarray(ip, ip + preCopy), op);\n          op += preCopy;\n          ip += preCopy;\n        } else {\n          while (preCopy--) {\n            output[op++] = input[ip++];\n          }\n        }\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      while (op + len > output.length) {\n        output = this.expandBufferAdaptive({fixRatio: 2});\n      }\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n\n  // copy\n  if (USE_TYPEDARRAY) {\n    output.set(input.subarray(ip, ip + len), op);\n    op += len;\n    ip += len;\n  } else {\n    while (len--) {\n      output[op++] = input[ip++];\n    }\n  }\n\n  this.ip = ip;\n  this.op = op;\n  this.output = output;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflate.prototype.parseFixedHuffmanBlock = function() {\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(\n          Zlib.RawInflate.FixedLiteralLengthTable,\n          Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(\n          Zlib.RawInflate.FixedLiteralLengthTable,\n          Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflate.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit = this.readBits(5) + 257;\n  /** @type {number} number of distance codes. */\n  var hdist = this.readBits(5) + 1;\n  /** @type {number} number of code lengths. */\n  var hclen = this.readBits(4) + 4;\n  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n  var codeLengths =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflate.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n  var litlenTable;\n  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n  var distTable;\n  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n  var lengthTable;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var prev;\n  /** @type {number} */\n  var repeat;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n\n  // decode code lengths\n  for (i = 0; i < hclen; ++i) {\n    codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3);\n  }\n  if (!USE_TYPEDARRAY) {\n    for (i = hclen, hclen = codeLengths.length; i < hclen; ++i) {\n      codeLengths[Zlib.RawInflate.Order[i]] = 0;\n    }\n  }\n\n  // decode length table\n  codeLengthsTable = buildHuffmanTable(codeLengths);\n  lengthTable = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit + hdist);\n  for (i = 0, il = hlit + hdist; i < il;) {\n    code = this.readCodeByTable(codeLengthsTable);\n    switch (code) {\n      case 16:\n        repeat = 3 + this.readBits(2);\n        while (repeat--) { lengthTable[i++] = prev; }\n        break;\n      case 17:\n        repeat = 3 + this.readBits(3);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      case 18:\n        repeat = 11 + this.readBits(7);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      default:\n        lengthTable[i++] = code;\n        prev = code;\n        break;\n    }\n  }\n\n  litlenTable = USE_TYPEDARRAY\n      ? buildHuffmanTable(lengthTable.subarray(0, hlit))\n      : buildHuffmanTable(lengthTable.slice(0, hlit));\n  distTable = USE_TYPEDARRAY\n      ? buildHuffmanTable(lengthTable.subarray(hlit))\n      : buildHuffmanTable(lengthTable.slice(hlit));\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(litlenTable, distTable);\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(litlenTable, distTable);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * decode huffman code\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanBlock = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length - Zlib.RawInflate.MaxCopyLength;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op >= olength) {\n      this.op = op;\n      output = this.expandBufferBlock();\n      op = this.op;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * decode huffman code (adaptive)\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        output = this.expandBufferAdaptive();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op + codeLength > olength) {\n      output = this.expandBufferAdaptive();\n      olength = output.length;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * expand output buffer.\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.expandBufferBlock = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(\n          this.op - Zlib.RawInflate.MaxBackwardLength\n      );\n  /** @type {number} backward base point */\n  var backward = this.op - Zlib.RawInflate.MaxBackwardLength;\n  /** @type {number} copy index. */\n  var i;\n  /** @type {number} copy limit */\n  var il;\n\n  var output = this.output;\n\n  // copy to output buffer\n  if (USE_TYPEDARRAY) {\n    buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length));\n  } else {\n    for (i = 0, il = buffer.length; i < il; ++i) {\n      buffer[i] = output[i + Zlib.RawInflate.MaxBackwardLength];\n    }\n  }\n\n  this.blocks.push(buffer);\n  this.totalpos += buffer.length;\n\n  // copy to backward buffer\n  if (USE_TYPEDARRAY) {\n    output.set(\n        output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength)\n    );\n  } else {\n    for (i = 0; i < Zlib.RawInflate.MaxBackwardLength; ++i) {\n      output[i] = output[backward + i];\n    }\n  }\n\n  this.op = Zlib.RawInflate.MaxBackwardLength;\n\n  return output;\n};\n\n/**\n * expand output buffer. (adaptive)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.currentLitlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  } else {\n    buffer = output;\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferBlock = function() {\n  /** @type {number} buffer pointer. */\n  var pos = 0;\n  /** @type {number} buffer pointer. */\n  var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var output = this.output;\n  /** @type {!Array} blocks array. */\n  var blocks = this.blocks;\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var block;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  var buffer = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} loop limiter. */\n  var jl;\n\n  // single buffer\n  if (blocks.length === 0) {\n    return USE_TYPEDARRAY ?\n        this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) :\n        this.output.slice(Zlib.RawInflate.MaxBackwardLength, this.op);\n  }\n\n  // copy to buffer\n  for (i = 0, il = blocks.length; i < il; ++i) {\n    block = blocks[i];\n    for (j = 0, jl = block.length; j < jl; ++j) {\n      buffer[pos++] = block[j];\n    }\n  }\n\n  // current buffer\n  for (i = Zlib.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n    buffer[pos++] = output[i];\n  }\n\n  this.blocks = [];\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferDynamic = function() {\n  /** @type {Array.<number>|Uint8Array} output buffer. */\n  var buffer;\n  var op = this.op;\n\n  if (USE_TYPEDARRAY) {\n    if (this.resize) {\n      buffer = new Uint8Array(op);\n      buffer.set(this.output.subarray(0, op));\n    } else {\n      buffer = this.output.subarray(0, op);\n    }\n  } else {\n    if (this.output.length > op) {\n      this.output.length = op;\n    }\n    buffer = this.output;\n  }\n\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {number} ip input buffer pointer.\n * @param {number=} opt_buffersize buffer block size.\n * @constructor\n */\nZlib.RawInflateStream = function(input, ip, opt_buffersize) {\n  /** @type {!Array.<(Array|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize =\n      opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = ip === void 0 ? 0 : ip;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  this.input = USE_TYPEDARRAY ? new Uint8Array(input) : input;\n  /** @type {!(Uint8Array|Array)} output buffer. */\n  this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.bufferSize);\n  /** @type {!number} output buffer pointer. */\n  this.op = 0;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {number} uncompressed block length. */\n  this.blockLength;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n  /** @type {Array} */\n  this.litlenTable;\n  /** @type {Array} */\n  this.distTable;\n  /** @type {number} */\n  this.sp = 0; // stream pointer\n  /** @type {Zlib.RawInflateStream.Status} */\n  this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n\n  //\n  // backup\n  //\n  /** @type {!number} */\n  this.ip_;\n  /** @type {!number} */\n  this.bitsbuflen_;\n  /** @type {!number} */\n  this.bitsbuf_;\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.BlockType = {\n  UNCOMPRESSED: 0,\n  FIXED: 1,\n  DYNAMIC: 2\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.Status = {\n  INITIALIZED: 0,\n  BLOCK_HEADER_START: 1,\n  BLOCK_HEADER_END: 2,\n  BLOCK_BODY_START: 3,\n  BLOCK_BODY_END: 4,\n  DECODE_BLOCK_START: 5,\n  DECODE_BLOCK_END: 6\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.RawInflateStream.prototype.decompress = function(newInput, ip) {\n  /** @type {boolean} */\n  var stop = false;\n\n  if (newInput !== void 0) {\n    this.input = newInput;\n  }\n\n  if (ip !== void 0) {\n    this.ip = ip;\n  }\n\n  // decompress\n  while (!stop) {\n    switch (this.status) {\n        // block header\n      case Zlib.RawInflateStream.Status.INITIALIZED:\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_START:\n        if (this.readBlockHeader() < 0) {\n          stop = true;\n        }\n        break;\n        // block body\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_END: /* FALLTHROUGH */\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.readUncompressedBlockHeader() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED:\n            if (this.parseFixedHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.parseDynamicHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n        // decode data\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_END:\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.parseUncompressedBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED: /* FALLTHROUGH */\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.decodeHuffman() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_END:\n        if (this.bfinal) {\n          stop = true;\n        } else {\n          this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n        }\n        break;\n    }\n  }\n\n  return this.concatBuffer();\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflateStream.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflateStream.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.Order = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.LengthExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.DistCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.DistExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflateStream.prototype.readBlockHeader = function() {\n  /** @type {number} header */\n  var hdr;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_START;\n\n  this.save_();\n  if ((hdr = this.readBits(3)) < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    case 0: // uncompressed\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.UNCOMPRESSED;\n      break;\n    case 1: // fixed huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.FIXED;\n      break;\n    case 2: // dynamic huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.DYNAMIC;\n      break;\n    default: // reserved or other\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_END;\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflateStream.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    // input byte\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n\n    // concat octet\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {Array} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflateStream.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {!(Array|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} input byte */\n  var octet;\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * read uncompressed block header\n */\nZlib.RawInflateStream.prototype.readUncompressedBlockHeader = function() {\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  if (ip + 4 >= input.length) {\n    return -1;\n  }\n\n  len = input[ip++] | (input[ip++] << 8);\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  this.ip = ip;\n  this.blockLength = len;\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflateStream.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n  var len = this.blockLength;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  // copy\n  // XXX: とりあえず素直にコピー\n  while (len--) {\n    if (op === output.length) {\n      output = this.expandBuffer({fixRatio: 2});\n    }\n\n    // not enough input buffer\n    if (ip >= input.length) {\n      this.ip = ip;\n      this.op = op;\n      this.blockLength = len + 1; // コピーしてないので戻す\n      return -1;\n    }\n\n    output[op++] = input[ip++];\n  }\n\n  if (len < 0) {\n    this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n  }\n\n  this.ip = ip;\n  this.op = op;\n\n  return 0;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflateStream.prototype.parseFixedHuffmanBlock = function() {\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.litlenTable = Zlib.RawInflateStream.FixedLiteralLengthTable;\n  this.distTable = Zlib.RawInflateStream.FixedDistanceTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * オブジェクトのコンテキストを別のプロパティに退避する.\n * @private\n */\nZlib.RawInflateStream.prototype.save_ = function() {\n  this.ip_ = this.ip;\n  this.bitsbuflen_ = this.bitsbuflen;\n  this.bitsbuf_ = this.bitsbuf;\n};\n\n/**\n * 別のプロパティに退避したコンテキストを復元する.\n * @private\n */\nZlib.RawInflateStream.prototype.restore_ = function() {\n  this.ip = this.ip_;\n  this.bitsbuflen = this.bitsbuflen_;\n  this.bitsbuf = this.bitsbuf_;\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflateStream.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit;\n  /** @type {number} number of distance codes. */\n  var hdist;\n  /** @type {number} number of code lengths. */\n  var hclen;\n  /** @type {!(Uint8Array|Array)} code lengths. */\n  var codeLengths =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflateStream.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint32Array|Array)} literal and length code lengths. */\n  var litlenLengths;\n  /** @type {!(Uint32Array|Array)} distance code lengths. */\n  var distLengths;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.save_();\n  hlit = this.readBits(5) + 257;\n  hdist = this.readBits(5) + 1;\n  hclen = this.readBits(4) + 4;\n  if (hlit < 0 || hdist < 0 || hclen < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  try {\n    parseDynamicHuffmanBlockImpl.call(this);\n  } catch(e) {\n    this.restore_();\n    return -1;\n  }\n\n  function parseDynamicHuffmanBlockImpl() {\n    /** @type {number} */\n    var bits;\n    var code;\n    var prev = 0;\n    var repeat;\n    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n    var lengthTable;\n    /** @type {number} loop counter. */\n    var i;\n    /** @type {number} loop limit. */\n    var il;\n\n    // decode code lengths\n    for (i = 0; i < hclen; ++i) {\n      if ((bits = this.readBits(3)) < 0) {\n        throw new Error('not enough input');\n      }\n      codeLengths[Zlib.RawInflateStream.Order[i]] = bits;\n    }\n\n    // decode length table\n    codeLengthsTable = buildHuffmanTable(codeLengths);\n    lengthTable = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit + hdist);\n    for (i = 0, il = hlit + hdist; i < il;) {\n      code = this.readCodeByTable(codeLengthsTable);\n      if (code < 0) {\n        throw new Error('not enough input');\n      }\n      switch (code) {\n        case 16:\n          if ((bits = this.readBits(2)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = prev; }\n          break;\n        case 17:\n          if ((bits = this.readBits(3)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        case 18:\n          if ((bits = this.readBits(7)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 11 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        default:\n          lengthTable[i++] = code;\n          prev = code;\n          break;\n      }\n    }\n\n    // literal and length code\n    litlenLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit);\n\n    // distance code\n    distLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hdist);\n\n    this.litlenTable = USE_TYPEDARRAY\n        ? buildHuffmanTable(lengthTable.subarray(0, hlit))\n        : buildHuffmanTable(lengthTable.slice(0, hlit));\n    this.distTable = USE_TYPEDARRAY\n        ? buildHuffmanTable(lengthTable.subarray(hlit))\n        : buildHuffmanTable(lengthTable.slice(hlit));\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * decode huffman code (dynamic)\n * @return {(number|undefined)} -1 is error.\n */\nZlib.RawInflateStream.prototype.decodeHuffman = function() {\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var litlen = this.litlenTable;\n  var dist = this.distTable;\n\n  var olength = output.length;\n  var bits;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  while (true) {\n    this.save_();\n\n    code = this.readCodeByTable(litlen);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n\n    if (code === 256) {\n      break;\n    }\n\n    // literal\n    if (code < 256) {\n      if (op === olength) {\n        output = this.expandBuffer();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = Zlib.RawInflateStream.LengthCodeTable[ti];\n    if (Zlib.RawInflateStream.LengthExtraTable[ti] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.LengthExtraTable[ti]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeLength += bits;\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n    codeDist = Zlib.RawInflateStream.DistCodeTable[code];\n    if (Zlib.RawInflateStream.DistExtraTable[code] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.DistExtraTable[code]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeDist += bits;\n    }\n\n    // lz77 decode\n    if (op + codeLength >= olength) {\n      output = this.expandBuffer();\n      olength = output.length;\n    }\n\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n\n    // break\n    if (this.ip === this.input.length) {\n      this.op = op;\n      return -1;\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n\n  this.op = op;\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n};\n\n/**\n * expand output buffer. (dynamic)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflateStream.prototype.expandBuffer = function(opt_param) {\n  /** @type {!(Array|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.litlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  } else {\n    buffer = output;\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array|Uint8Array)} output buffer.\n */\nZlib.RawInflateStream.prototype.concatBuffer = function() {\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var buffer;\n  /** @type {number} */\n  var op = this.op;\n  /** @type {Uint8Array} */\n  var tmp;\n\n  if (this.resize) {\n    if (USE_TYPEDARRAY) {\n      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n    } else {\n      buffer = this.output.slice(this.sp, op);\n    }\n  } else {\n    buffer =\n        USE_TYPEDARRAY ? this.output.subarray(this.sp, op) : this.output.slice(this.sp, op);\n  }\n\n  this.sp = op;\n\n  // compaction\n  if (op > Zlib.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n    this.op = this.sp = Zlib.RawInflateStream.MaxBackwardLength;\n    if (USE_TYPEDARRAY) {\n      tmp = /** @type {Uint8Array} */(this.output);\n      this.output = new Uint8Array(this.bufferSize + Zlib.RawInflateStream.MaxBackwardLength);\n      this.output.set(tmp.subarray(op - Zlib.RawInflateStream.MaxBackwardLength, op));\n    } else {\n      this.output = this.output.slice(op - Zlib.RawInflateStream.MaxBackwardLength);\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @param {Object=} opt_params option parameters.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n */\nZlib.Inflate = function(input, opt_params) {\n  /** @type {number} */\n  var bufferSize;\n  /** @type {Zlib.Inflate.BufferType} */\n  var bufferType;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflate} */\n  this.rawinflate;\n  /** @type {(boolean|undefined)} verify flag. */\n  this.verify;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['verify']) {\n      this.verify = opt_params['verify'];\n    }\n  }\n\n  // Compression Method and Flags\n  cmf = input[this.ip++];\n  flg = input[this.ip++];\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  // RawInflate\n  this.rawinflate = new Zlib.RawInflate(input, {\n    'index': this.ip,\n    'bufferSize': opt_params['bufferSize'],\n    'bufferType': opt_params['bufferType'],\n    'resize': opt_params['resize']\n  });\n}\n\n/**\n * @enum {number}\n */\nZlib.Inflate.BufferType = Zlib.RawInflate.BufferType;\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.Inflate.prototype.decompress = function() {\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  var input = this.input;\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  buffer = this.rawinflate.decompress();\n  this.ip = this.rawinflate.ip;\n\n  // verify adler-32\n  if (this.verify) {\n    adler32 = (\n        input[this.ip++] << 24 | input[this.ip++] << 16 |\n        input[this.ip++] << 8 | input[this.ip++]\n    ) >>> 0;\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n\n  return buffer;\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\n/**\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @constructor\n */\nZlib.InflateStream = function(input) {\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input === void 0 ? new (USE_TYPEDARRAY ? Uint8Array : Array)() : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflateStream} */\n  this.rawinflate = new Zlib.RawInflateStream(this.input, this.ip);\n  /** @type {Zlib.CompressionMethod} */\n  this.method;\n  /** @type {!(Array|Uint8Array)} */\n  this.output = this.rawinflate.output;\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.InflateStream.prototype.decompress = function(input) {\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  // 新しい入力を入力バッファに結合する\n  // XXX Array, Uint8Array のチェックを行うか確認する\n  if (input !== void 0) {\n    if (USE_TYPEDARRAY) {\n      var tmp = new Uint8Array(this.input.length + input.length);\n      tmp.set(this.input, 0);\n      tmp.set(input, this.input.length);\n      this.input = tmp;\n    } else {\n      this.input = this.input.concat(input);\n    }\n  }\n\n  if (this.method === void 0) {\n    if(this.readHeader() < 0) {\n      return new (USE_TYPEDARRAY ? Uint8Array : Array)();\n    }\n  }\n\n  buffer = this.rawinflate.decompress(this.input, this.ip);\n  if (this.rawinflate.ip !== 0) {\n    this.input = USE_TYPEDARRAY ?\n        this.input.subarray(this.rawinflate.ip) :\n        this.input.slice(this.rawinflate.ip);\n    this.ip = 0;\n  }\n\n  // verify adler-32\n  /*\n  if (this.verify) {\n    adler32 =\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++];\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n  */\n\n  return buffer;\n};\n\nZlib.InflateStream.prototype.readHeader = function() {\n  var ip = this.ip;\n  var input = this.input;\n\n  // Compression Method and Flags\n  var cmf = input[ip++];\n  var flg = input[ip++];\n\n  if (cmf === void 0 || flg === void 0) {\n    return -1;\n  }\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  this.ip = ip;\n};\n\n\n/**\n * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gunzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {Array.<Zlib.GunzipMember>} */\n  this.member = [];\n  /** @type {boolean} */\n  this.decompressed = false;\n};\n\n/**\n * @return {Array.<Zlib.GunzipMember>}\n */\nZlib.Gunzip.prototype.getMembers = function() {\n  if (!this.decompressed) {\n    this.decompress();\n  }\n\n  return this.member.slice();\n};\n\n/**\n * inflate gzip data.\n * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n */\nZlib.Gunzip.prototype.decompress = function() {\n  /** @type {number} input length. */\n  var il = this.input.length;\n\n  while (this.ip < il) {\n    this.decodeMember();\n  }\n\n  this.decompressed = true;\n\n  return this.concatMember();\n};\n\n/**\n * decode gzip member.\n */\nZlib.Gunzip.prototype.decodeMember = function() {\n  /** @type {Zlib.GunzipMember} */\n  var member = new Zlib.GunzipMember();\n  /** @type {number} */\n  var isize;\n  /** @type {Zlib.RawInflate} RawInflate implementation. */\n  var rawinflate;\n  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n  var inflated;\n  /** @type {number} inflate size */\n  var inflen;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} character index in string. */\n  var ci;\n  /** @type {Array.<string>} character array. */\n  var str;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} */\n  var crc32;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  member.id1 = input[ip++];\n  member.id2 = input[ip++];\n\n  // check signature\n  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n  }\n\n  // check compression method\n  member.cm = input[ip++];\n  switch (member.cm) {\n    case 8: /* XXX: use Zlib const */\n      break;\n    default:\n      throw new Error('unknown compression method: ' + member.cm);\n  }\n\n  // flags\n  member.flg = input[ip++];\n\n  // modification time\n  mtime = (input[ip++])       |\n      (input[ip++] << 8)  |\n      (input[ip++] << 16) |\n      (input[ip++] << 24);\n  member.mtime = new Date(mtime * 1000);\n\n  // extra flags\n  member.xfl = input[ip++];\n\n  // operating system\n  member.os = input[ip++];\n\n  // extra\n  if ((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {\n    member.xlen = input[ip++] | (input[ip++] << 8);\n    ip = this.decodeSubField(ip, member.xlen);\n  }\n\n  // fname\n  if ((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.name = str.join('');\n  }\n\n  // fcomment\n  if ((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.comment = str.join('');\n  }\n\n  // fhcrc\n  if ((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {\n    member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 0xffff;\n    if (member.crc16 !== (input[ip++] | (input[ip++] << 8))) {\n      throw new Error('invalid header crc16');\n    }\n  }\n\n  // isize を事前に取得すると展開後のサイズが分かるため、\n  // inflate処理のバッファサイズが事前に分かり、高速になる\n  isize = (input[input.length - 4])       | (input[input.length - 3] << 8) |\n      (input[input.length - 2] << 16) | (input[input.length - 1] << 24);\n\n  // isize の妥当性チェック\n  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n  // 1/128 になるとする\n  // ここから入力バッファの残りが isize の 512 倍以上だったら\n  // サイズ指定のバッファ確保は行わない事とする\n  if (input.length - ip - /* CRC-32 */4 - /* ISIZE */4 < isize * 512) {\n    inflen = isize;\n  }\n\n  // compressed block\n  rawinflate = new Zlib.RawInflate(input, {'index': ip, 'bufferSize': inflen});\n  member.data = inflated = rawinflate.decompress();\n  ip = rawinflate.ip;\n\n  // crc32\n  member.crc32 = crc32 =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if (Zlib.CRC32.calc(inflated) !== crc32) {\n    throw new Error('invalid CRC-32 checksum: 0x' +\n        Zlib.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n  }\n\n  // input size\n  member.isize = isize =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if ((inflated.length & 0xffffffff) !== isize) {\n    throw new Error('invalid input size: ' +\n        (inflated.length & 0xffffffff) + ' / ' + isize);\n  }\n\n  this.member.push(member);\n  this.ip = ip;\n};\n\n/**\n * サブフィールドのデコード\n * XXX: 現在は何もせずスキップする\n */\nZlib.Gunzip.prototype.decodeSubField = function(ip, length) {\n  return ip + length;\n};\n\n/**\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Gunzip.prototype.concatMember = function() {\n  /** @type {Array.<Zlib.GunzipMember>} */\n  var member = this.member;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var p = 0;\n  /** @type {number} */\n  var size = 0;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n\n  for (i = 0, il = member.length; i < il; ++i) {\n    size += member[i].data.length;\n  }\n\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(size);\n    for (i = 0; i < il; ++i) {\n      buffer.set(member[i].data, p);\n      p += member[i].data.length;\n    }\n  } else {\n    buffer = [];\n    for (i = 0; i < il; ++i) {\n      buffer[i] = member[i].data;\n    }\n    buffer = Array.prototype.concat.apply([], buffer);\n  }\n\n  return buffer;\n};\n\n\n\n/**\n * @constructor\n */\nZlib.GunzipMember = function() {\n  /** @type {number} signature first byte. */\n  this.id1;\n  /** @type {number} signature second byte. */\n  this.id2;\n  /** @type {number} compression method. */\n  this.cm;\n  /** @type {number} flags. */\n  this.flg;\n  /** @type {Date} modification time. */\n  this.mtime;\n  /** @type {number} extra flags. */\n  this.xfl;\n  /** @type {number} operating system number. */\n  this.os;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  this.crc16;\n  /** @type {number} extra length. */\n  this.xlen;\n  /** @type {number} CRC-32 value for verification. */\n  this.crc32;\n  /** @type {number} input size modulo 32 value. */\n  this.isize;\n  /** @type {string} filename. */\n  this.name;\n  /** @type {string} comment. */\n  this.comment;\n  /** @type {!(Uint8Array|Array.<number>)} */\n  this.data;\n};\n\nZlib.GunzipMember.prototype.getName = function() {\n  return this.name;\n};\n\nZlib.GunzipMember.prototype.getData = function() {\n  return this.data;\n};\n\nZlib.GunzipMember.prototype.getMtime = function() {\n  return this.mtime;\n}\n\n/**\n * @fileoverview GZIP (RFC1952) 実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  this.output;\n  /** @type {number} output buffer. */\n  this.op = 0;\n  /** @type {!Object} flags option flags. */\n  this.flags = {};\n  /** @type {!string} filename. */\n  this.filename;\n  /** @type {!string} comment. */\n  this.comment;\n  /** @type {!Object} deflate options. */\n  this.deflateOptions;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['flags']) {\n      this.flags = opt_params['flags'];\n    }\n    if (typeof opt_params['filename'] === 'string') {\n      this.filename = opt_params['filename'];\n    }\n    if (typeof opt_params['comment'] === 'string') {\n      this.comment = opt_params['comment'];\n    }\n    if (opt_params['deflateOptions']) {\n      this.deflateOptions = opt_params['deflateOptions'];\n    }\n  }\n\n  if (!this.deflateOptions) {\n    this.deflateOptions = {};\n  }\n};\n\n/**\n * @type {number}\n * @const\n */\nZlib.Gzip.DefaultBufferSize = 0x8000;\n\n/**\n * encode gzip members.\n * @return {!(Array|Uint8Array)} gzip binary array.\n */\nZlib.Gzip.prototype.compress = function() {\n  /** @type {number} flags. */\n  var flg;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  var crc16;\n  /** @type {number} CRC-32 value for verification. */\n  var crc32;\n  /** @type {!Zlib.RawDeflate} raw deflate object. */\n  var rawdeflate;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Gzip.DefaultBufferSize);\n  /** @type {number} output buffer pointer. */\n  var op = 0;\n\n  var input = this.input;\n  var ip = this.ip;\n  var filename = this.filename;\n  var comment = this.comment;\n\n  // check signature\n  output[op++] = 0x1f;\n  output[op++] = 0x8b;\n\n  // check compression method\n  output[op++] = 8; /* XXX: use Zlib const */\n\n  // flags\n  flg = 0;\n  if (this.flags['fname'])    flg |= Zlib.Gzip.FlagsMask.FNAME;\n  if (this.flags['fcomment']) flg |= Zlib.Gzip.FlagsMask.FCOMMENT;\n  if (this.flags['fhcrc'])    flg |= Zlib.Gzip.FlagsMask.FHCRC;\n  // XXX: FTEXT\n  // XXX: FEXTRA\n  output[op++] = flg;\n\n  // modification time\n  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n  output[op++] = mtime        & 0xff;\n  output[op++] = mtime >>>  8 & 0xff;\n  output[op++] = mtime >>> 16 & 0xff;\n  output[op++] = mtime >>> 24 & 0xff;\n\n  // extra flags\n  output[op++] = 0;\n\n  // operating system\n  output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN;\n\n  // extra\n  /* NOP */\n\n  // fname\n  if (this.flags['fname'] !== void 0) {\n    for (i = 0, il = filename.length; i < il; ++i) {\n      c = filename.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fcomment\n  if (this.flags['comment']) {\n    for (i = 0, il = comment.length; i < il; ++i) {\n      c = comment.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fhcrc\n  if (this.flags['fhcrc']) {\n    crc16 = Zlib.CRC32.calc(output, 0, op) & 0xffff;\n    output[op++] = (crc16      ) & 0xff;\n    output[op++] = (crc16 >>> 8) & 0xff;\n  }\n\n  // add compress option\n  this.deflateOptions['outputBuffer'] = output;\n  this.deflateOptions['outputIndex'] = op;\n\n  // compress\n  rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);\n  output = rawdeflate.compress();\n  op = rawdeflate.op;\n\n  // expand buffer\n  if (USE_TYPEDARRAY) {\n    if (op + 8 > output.buffer.byteLength) {\n      this.output = new Uint8Array(op + 8);\n      this.output.set(new Uint8Array(output.buffer));\n      output = this.output;\n    } else {\n      output = new Uint8Array(output.buffer);\n    }\n  }\n\n  // crc32\n  crc32 = Zlib.CRC32.calc(input);\n  output[op++] = (crc32       ) & 0xff;\n  output[op++] = (crc32 >>>  8) & 0xff;\n  output[op++] = (crc32 >>> 16) & 0xff;\n  output[op++] = (crc32 >>> 24) & 0xff;\n\n  // input size\n  il = input.length;\n  output[op++] = (il       ) & 0xff;\n  output[op++] = (il >>>  8) & 0xff;\n  output[op++] = (il >>> 16) & 0xff;\n  output[op++] = (il >>> 24) & 0xff;\n\n  this.ip = ip;\n\n  if (USE_TYPEDARRAY && op < output.length) {\n    this.output = output = output.subarray(0, op);\n  }\n\n  return output;\n};\n\n/** @enum {number} */\nZlib.Gzip.OperatingSystem = {\n  FAT: 0,\n  AMIGA: 1,\n  VMS: 2,\n  UNIX: 3,\n  VM_CMS: 4,\n  ATARI_TOS: 5,\n  HPFS: 6,\n  MACINTOSH: 7,\n  Z_SYSTEM: 8,\n  CP_M: 9,\n  TOPS_20: 10,\n  NTFS: 11,\n  QDOS: 12,\n  ACORN_RISCOS: 13,\n  UNKNOWN: 255\n};\n\n/** @enum {number} */\nZlib.Gzip.FlagsMask = {\n  FTEXT: 0x01,\n  FHCRC: 0x02,\n  FEXTRA: 0x04,\n  FNAME: 0x08,\n  FCOMMENT: 0x10\n};\n\n\n/**\n * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n */\n\n/**\n * カスタムハフマン符号で使用するヒープ実装\n * @param {number} length ヒープサイズ.\n * @constructor\n */\nZlib.Heap = function(length) {\n  this.buffer = new (USE_TYPEDARRAY ? Uint16Array : Array)(length * 2);\n  this.length = 0;\n};\n\n/**\n * 親ノードの index 取得\n * @param {number} index 子ノードの index.\n * @return {number} 親ノードの index.\n *\n */\nZlib.Heap.prototype.getParent = function(index) {\n  return ((index - 2) / 4 | 0) * 2;\n};\n\n/**\n * 子ノードの index 取得\n * @param {number} index 親ノードの index.\n * @return {number} 子ノードの index.\n */\nZlib.Heap.prototype.getChild = function(index) {\n  return 2 * index + 2;\n};\n\n/**\n * Heap に値を追加する\n * @param {number} index キー index.\n * @param {number} value 値.\n * @return {number} 現在のヒープ長.\n */\nZlib.Heap.prototype.push = function(index, value) {\n  var current, parent,\n      heap = this.buffer,\n      swap;\n\n  current = this.length;\n  heap[this.length++] = value;\n  heap[this.length++] = index;\n\n  // ルートノードにたどり着くまで入れ替えを試みる\n  while (current > 0) {\n    parent = this.getParent(current);\n\n    // 親ノードと比較して親の方が小さければ入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[current];\n      heap[current] = heap[parent];\n      heap[parent] = swap;\n\n      swap = heap[current + 1];\n      heap[current + 1] = heap[parent + 1];\n      heap[parent + 1] = swap;\n\n      current = parent;\n      // 入れ替えが必要なくなったらそこで抜ける\n    } else {\n      break;\n    }\n  }\n\n  return this.length;\n};\n\n/**\n * Heapから一番大きい値を返す\n * @return {{index: number, value: number, length: number}} {index: キーindex,\n *     value: 値, length: ヒープ長} の Object.\n */\nZlib.Heap.prototype.pop = function() {\n  var index, value,\n      heap = this.buffer, swap,\n      current, parent;\n\n  value = heap[0];\n  index = heap[1];\n\n  // 後ろから値を取る\n  this.length -= 2;\n  heap[0] = heap[this.length];\n  heap[1] = heap[this.length + 1];\n\n  parent = 0;\n  // ルートノードから下がっていく\n  while (true) {\n    current = this.getChild(parent);\n\n    // 範囲チェック\n    if (current >= this.length) {\n      break;\n    }\n\n    // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n      current += 2;\n    }\n\n    // 親ノードと比較して親の方が小さい場合は入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[parent];\n      heap[parent] = heap[current];\n      heap[current] = swap;\n\n      swap = heap[parent + 1];\n      heap[parent + 1] = heap[current + 1];\n      heap[current + 1] = swap;\n    } else {\n      break;\n    }\n\n    parent = current;\n  }\n\n  return {index: index, value: value, length: this.length};\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n/**\n * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n */\n\n\n/**\n * Raw Deflate 実装\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n * @param {Object=} opt_params option parameters.\n *\n * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n * 変換されます.\n * 別のオブジェクトになるため出力バッファを参照している変数などは\n * 更新する必要があります.\n */\nZlib.RawDeflate = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;\n  /** @type {number} */\n  this.lazy = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsLitLen;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsDist;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      (USE_TYPEDARRAY && input instanceof Array) ? new Uint8Array(input) : input;\n  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n  this.output;\n  /** @type {number} pos output buffer position. */\n  this.op = 0;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['lazy']) {\n      this.lazy = opt_params['lazy'];\n    }\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n    if (opt_params['outputBuffer']) {\n      this.output =\n          (USE_TYPEDARRAY && opt_params['outputBuffer'] instanceof Array) ?\n              new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n    }\n    if (typeof opt_params['outputIndex'] === 'number') {\n      this.op = opt_params['outputIndex'];\n    }\n  }\n\n  if (!this.output) {\n    this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(0x8000);\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawDeflate.CompressionType = {\n  NONE: 0,\n  FIXED: 1,\n  DYNAMIC: 2,\n  RESERVED: 3\n};\n\n\n/**\n * LZ77 の最小マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MinLength = 3;\n\n/**\n * LZ77 の最大マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MaxLength = 258;\n\n/**\n * LZ77 のウィンドウサイズ\n * @const\n * @type {number}\n */\nZlib.RawDeflate.WindowSize = 0x8000;\n\n/**\n * 最長の符号長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.MaxCodeLength = 16;\n\n/**\n * ハフマン符号の最大数値\n * @const\n * @type {number}\n */\nZlib.RawDeflate.HUFMAX = 286;\n\n/**\n * 固定ハフマン符号の符号化テーブル\n * @const\n * @type {Array.<Array.<number, number>>}\n */\nZlib.RawDeflate.FixedHuffmanTable = (function() {\n  var table = [], i;\n\n  for (i = 0; i < 288; i++) {\n    switch (true) {\n      case (i <= 143): table.push([i       + 0x030, 8]); break;\n      case (i <= 255): table.push([i - 144 + 0x190, 9]); break;\n      case (i <= 279): table.push([i - 256 + 0x000, 7]); break;\n      case (i <= 287): table.push([i - 280 + 0x0C0, 8]); break;\n      default:\n        throw 'invalid literal: ' + i;\n    }\n  }\n\n  return table;\n})();\n\n/**\n * DEFLATE ブロックの作成\n * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n */\nZlib.RawDeflate.prototype.compress = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var blockArray;\n  /** @type {number} */\n  var position;\n  /** @type {number} */\n  var length;\n\n  var input = this.input;\n\n  // compression\n  switch (this.compressionType) {\n    case Zlib.RawDeflate.CompressionType.NONE:\n      // each 65535-Byte (length header: 16-bit)\n      for (position = 0, length = input.length; position < length;) {\n        blockArray = USE_TYPEDARRAY ?\n            input.subarray(position, position + 0xffff) :\n            input.slice(position, position + 0xffff);\n        position += blockArray.length;\n        this.makeNocompressBlock(blockArray, (position === length));\n      }\n      break;\n    case Zlib.RawDeflate.CompressionType.FIXED:\n      this.output = this.makeFixedHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    case Zlib.RawDeflate.CompressionType.DYNAMIC:\n      this.output = this.makeDynamicHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    default:\n      throw 'invalid compression type';\n  }\n\n  return this.output;\n};\n\n/**\n * 非圧縮ブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeNocompressBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {number} */\n      var len;\n      /** @type {number} */\n      var nlen;\n      /** @type {number} */\n      var i;\n      /** @type {number} */\n      var il;\n\n      var output = this.output;\n      var op = this.op;\n\n      // expand buffer\n      if (USE_TYPEDARRAY) {\n        output = new Uint8Array(this.output.buffer);\n        while (output.length <= op + blockArray.length + 5) {\n          output = new Uint8Array(output.length << 1);\n        }\n        output.set(this.output);\n      }\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.NONE;\n      output[op++] = (bfinal) | (btype << 1);\n\n      // length\n      len = blockArray.length;\n      nlen = (~len + 0x10000) & 0xffff;\n      output[op++] =          len & 0xff;\n      output[op++] =  (len >>> 8) & 0xff;\n      output[op++] =         nlen & 0xff;\n      output[op++] = (nlen >>> 8) & 0xff;\n\n      // copy buffer\n      if (USE_TYPEDARRAY) {\n        output.set(blockArray, op);\n        op += blockArray.length;\n        output = output.subarray(0, op);\n      } else {\n        for (i = 0, il = blockArray.length; i < il; ++i) {\n          output[op++] = blockArray[i];\n        }\n        output.length = op;\n      }\n\n      this.op = op;\n      this.output = output;\n\n      return output;\n    };\n\n/**\n * 固定ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeFixedHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib.BitStream(USE_TYPEDARRAY ?\n          new Uint8Array(this.output.buffer) : this.output, this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.FIXED;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n      this.fixedHuffman(data, stream);\n\n      return stream.finish();\n    };\n\n/**\n * 動的ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeDynamicHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib.BitStream(USE_TYPEDARRAY ?\n          new Uint8Array(this.output.buffer) : this.output, this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n      /** @type {number} */\n      var hlit;\n      /** @type {number} */\n      var hdist;\n      /** @type {number} */\n      var hclen;\n      /** @const @type {Array.<number>} */\n      var hclenOrder =\n          [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var litLenLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var litLenCodes;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var distLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var distCodes;\n      /** @type {{\n       *   codes: !(Array.<number>|Uint32Array),\n       *   freqs: !(Array.<number>|Uint8Array)\n       * }} */\n      var treeSymbols;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var treeLengths;\n      /** @type {Array} */\n      var transLengths = new Array(19);\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var treeCodes;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var bitlen;\n      /** @type {number} */\n      var i;\n      /** @type {number} */\n      var il;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n\n      // リテラル・長さ, 距離のハフマン符号と符号長の算出\n      litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n      litLenCodes = this.getCodesFromLengths_(litLenLengths);\n      distLengths = this.getLengths_(this.freqsDist, 7);\n      distCodes = this.getCodesFromLengths_(distLengths);\n\n      // HLIT, HDIST の決定\n      for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n      for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {}\n\n      // HCLEN\n      treeSymbols =\n          this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n      treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n      for (i = 0; i < 19; i++) {\n        transLengths[i] = treeLengths[hclenOrder[i]];\n      }\n      for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n      treeCodes = this.getCodesFromLengths_(treeLengths);\n\n      // 出力\n      stream.writeBits(hlit - 257, 5, true);\n      stream.writeBits(hdist - 1, 5, true);\n      stream.writeBits(hclen - 4, 4, true);\n      for (i = 0; i < hclen; i++) {\n        stream.writeBits(transLengths[i], 3, true);\n      }\n\n      // ツリーの出力\n      for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n        code = treeSymbols.codes[i];\n\n        stream.writeBits(treeCodes[code], treeLengths[code], true);\n\n        // extra bits\n        if (code >= 16) {\n          i++;\n          switch (code) {\n            case 16: bitlen = 2; break;\n            case 17: bitlen = 3; break;\n            case 18: bitlen = 7; break;\n            default:\n              throw 'invalid code: ' + code;\n          }\n\n          stream.writeBits(treeSymbols.codes[i], bitlen, true);\n        }\n      }\n\n      this.dynamicHuffman(\n          data,\n          [litLenCodes, litLenLengths],\n          [distCodes, distLengths],\n          stream\n      );\n\n      return stream.finish();\n    };\n\n\n/**\n * 動的ハフマン符号化(カスタムハフマンテーブル)\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.dynamicHuffman =\n    function(dataArray, litLen, dist, stream) {\n      /** @type {number} */\n      var index;\n      /** @type {number} */\n      var length;\n      /** @type {number} */\n      var literal;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var litLenCodes;\n      /** @type {number} */\n      var litLenLengths;\n      /** @type {number} */\n      var distCodes;\n      /** @type {number} */\n      var distLengths;\n\n      litLenCodes = litLen[0];\n      litLenLengths = litLen[1];\n      distCodes = dist[0];\n      distLengths = dist[1];\n\n      // 符号を BitStream に書き込んでいく\n      for (index = 0, length = dataArray.length; index < length; ++index) {\n        literal = dataArray[index];\n\n        // literal or length\n        stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);\n\n        // 長さ・距離符号\n        if (literal > 256) {\n          // length extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // distance\n          code = dataArray[++index];\n          stream.writeBits(distCodes[code], distLengths[code], true);\n          // distance extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // 終端\n        } else if (literal === 256) {\n          break;\n        }\n      }\n\n      return stream;\n    };\n\n/**\n * 固定ハフマン符号化\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; index++) {\n    literal = dataArray[index];\n\n    // 符号の書き込み\n    Zlib.BitStream.prototype.writeBits.apply(\n        stream,\n        Zlib.RawDeflate.FixedHuffmanTable[literal]\n    );\n\n    // 長さ・距離符号\n    if (literal > 0x100) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      stream.writeBits(dataArray[++index], 5);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // 終端\n    } else if (literal === 0x100) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * マッチ情報\n * @param {!number} length マッチした長さ.\n * @param {!number} backwardDistance マッチ位置との距離.\n * @constructor\n */\nZlib.RawDeflate.Lz77Match = function(length, backwardDistance) {\n  /** @type {number} match length. */\n  this.length = length;\n  /** @type {number} backward distance. */\n  this.backwardDistance = backwardDistance;\n};\n\n/**\n * 長さ符号テーブル.\n * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n * @const\n * @type {!(Array.<number>|Uint32Array)}\n */\nZlib.RawDeflate.Lz77Match.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint32Array(table) : table;\n})((function() {\n  /** @type {!Array} */\n  var table = [];\n  /** @type {number} */\n  var i;\n  /** @type {!Array.<number>} */\n  var c;\n\n  for (i = 3; i <= 258; i++) {\n    c = code(i);\n    table[i] = (c[2] << 24) | (c[1] << 16) | c[0];\n  }\n\n  /**\n   * @param {number} length lz77 length.\n   * @return {!Array.<number>} lz77 codes.\n   */\n  function code(length) {\n    switch (true) {\n      case (length === 3): return [257, length - 3, 0]; break;\n      case (length === 4): return [258, length - 4, 0]; break;\n      case (length === 5): return [259, length - 5, 0]; break;\n      case (length === 6): return [260, length - 6, 0]; break;\n      case (length === 7): return [261, length - 7, 0]; break;\n      case (length === 8): return [262, length - 8, 0]; break;\n      case (length === 9): return [263, length - 9, 0]; break;\n      case (length === 10): return [264, length - 10, 0]; break;\n      case (length <= 12): return [265, length - 11, 1]; break;\n      case (length <= 14): return [266, length - 13, 1]; break;\n      case (length <= 16): return [267, length - 15, 1]; break;\n      case (length <= 18): return [268, length - 17, 1]; break;\n      case (length <= 22): return [269, length - 19, 2]; break;\n      case (length <= 26): return [270, length - 23, 2]; break;\n      case (length <= 30): return [271, length - 27, 2]; break;\n      case (length <= 34): return [272, length - 31, 2]; break;\n      case (length <= 42): return [273, length - 35, 3]; break;\n      case (length <= 50): return [274, length - 43, 3]; break;\n      case (length <= 58): return [275, length - 51, 3]; break;\n      case (length <= 66): return [276, length - 59, 3]; break;\n      case (length <= 82): return [277, length - 67, 4]; break;\n      case (length <= 98): return [278, length - 83, 4]; break;\n      case (length <= 114): return [279, length - 99, 4]; break;\n      case (length <= 130): return [280, length - 115, 4]; break;\n      case (length <= 162): return [281, length - 131, 5]; break;\n      case (length <= 194): return [282, length - 163, 5]; break;\n      case (length <= 226): return [283, length - 195, 5]; break;\n      case (length <= 257): return [284, length - 227, 5]; break;\n      case (length === 258): return [285, length - 258, 0]; break;\n      default: throw 'invalid length: ' + length;\n    }\n  }\n\n  return table;\n})());\n\n/**\n * 距離符号テーブル\n * @param {!number} dist 距離.\n * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n * @private\n */\nZlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {\n  /** @type {!Array.<number>} distance code table. */\n  var r;\n\n  switch (true) {\n    case (dist === 1): r = [0, dist - 1, 0]; break;\n    case (dist === 2): r = [1, dist - 2, 0]; break;\n    case (dist === 3): r = [2, dist - 3, 0]; break;\n    case (dist === 4): r = [3, dist - 4, 0]; break;\n    case (dist <= 6): r = [4, dist - 5, 1]; break;\n    case (dist <= 8): r = [5, dist - 7, 1]; break;\n    case (dist <= 12): r = [6, dist - 9, 2]; break;\n    case (dist <= 16): r = [7, dist - 13, 2]; break;\n    case (dist <= 24): r = [8, dist - 17, 3]; break;\n    case (dist <= 32): r = [9, dist - 25, 3]; break;\n    case (dist <= 48): r = [10, dist - 33, 4]; break;\n    case (dist <= 64): r = [11, dist - 49, 4]; break;\n    case (dist <= 96): r = [12, dist - 65, 5]; break;\n    case (dist <= 128): r = [13, dist - 97, 5]; break;\n    case (dist <= 192): r = [14, dist - 129, 6]; break;\n    case (dist <= 256): r = [15, dist - 193, 6]; break;\n    case (dist <= 384): r = [16, dist - 257, 7]; break;\n    case (dist <= 512): r = [17, dist - 385, 7]; break;\n    case (dist <= 768): r = [18, dist - 513, 8]; break;\n    case (dist <= 1024): r = [19, dist - 769, 8]; break;\n    case (dist <= 1536): r = [20, dist - 1025, 9]; break;\n    case (dist <= 2048): r = [21, dist - 1537, 9]; break;\n    case (dist <= 3072): r = [22, dist - 2049, 10]; break;\n    case (dist <= 4096): r = [23, dist - 3073, 10]; break;\n    case (dist <= 6144): r = [24, dist - 4097, 11]; break;\n    case (dist <= 8192): r = [25, dist - 6145, 11]; break;\n    case (dist <= 12288): r = [26, dist - 8193, 12]; break;\n    case (dist <= 16384): r = [27, dist - 12289, 12]; break;\n    case (dist <= 24576): r = [28, dist - 16385, 13]; break;\n    case (dist <= 32768): r = [29, dist - 24577, 13]; break;\n    default: throw 'invalid distance';\n  }\n\n  return r;\n};\n\n/**\n * マッチ情報を LZ77 符号化配列で返す.\n * なお、ここでは以下の内部仕様で符号化している\n * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n * @return {!Array.<number>} LZ77 符号化 byte array.\n */\nZlib.RawDeflate.Lz77Match.prototype.toLz77Array = function() {\n  /** @type {number} */\n  var length = this.length;\n  /** @type {number} */\n  var dist = this.backwardDistance;\n  /** @type {Array} */\n  var codeArray = [];\n  /** @type {number} */\n  var pos = 0;\n  /** @type {!Array.<number>} */\n  var code;\n\n  // length\n  code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];\n  codeArray[pos++] = code & 0xffff;\n  codeArray[pos++] = (code >> 16) & 0xff;\n  codeArray[pos++] = code >> 24;\n\n  // distance\n  code = this.getDistanceCode_(dist);\n  codeArray[pos++] = code[0];\n  codeArray[pos++] = code[1];\n  codeArray[pos++] = code[2];\n\n  return codeArray;\n};\n\n/**\n * LZ77 実装\n * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n */\nZlib.RawDeflate.prototype.lz77 = function(dataArray) {\n  /** @type {number} input position */\n  var position;\n  /** @type {number} input length */\n  var length;\n  /** @type {number} loop counter */\n  var i;\n  /** @type {number} loop limiter */\n  var il;\n  /** @type {number} chained-hash-table key */\n  var matchKey;\n  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n  var table = {};\n  /** @const @type {number} */\n  var windowSize = Zlib.RawDeflate.WindowSize;\n  /** @type {Array.<number>} match list */\n  var matchList;\n  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n  var longestMatch;\n  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n  var prevMatch;\n  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n  var lz77buf = USE_TYPEDARRAY ?\n      new Uint16Array(dataArray.length * 2) : [];\n  /** @type {number} lz77 output buffer pointer */\n  var pos = 0;\n  /** @type {number} lz77 skip length */\n  var skipLength = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsLitLen = new (USE_TYPEDARRAY ? Uint32Array : Array)(286);\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsDist = new (USE_TYPEDARRAY ? Uint32Array : Array)(30);\n  /** @type {number} */\n  var lazy = this.lazy;\n  /** @type {*} temporary variable */\n  var tmp;\n\n  // 初期化\n  if (!USE_TYPEDARRAY) {\n    for (i = 0; i <= 285;) { freqsLitLen[i++] = 0; }\n    for (i = 0; i <= 29;) { freqsDist[i++] = 0; }\n  }\n  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n  /**\n   * マッチデータの書き込み\n   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n   * @param {!number} offset スキップ開始位置(相対指定).\n   * @private\n   */\n  function writeMatch(match, offset) {\n    /** @type {Array.<number>} */\n    var lz77Array = match.toLz77Array();\n    /** @type {number} */\n    var i;\n    /** @type {number} */\n    var il;\n\n    for (i = 0, il = lz77Array.length; i < il; ++i) {\n      lz77buf[pos++] = lz77Array[i];\n    }\n    freqsLitLen[lz77Array[0]]++;\n    freqsDist[lz77Array[3]]++;\n    skipLength = match.length + offset - 1;\n    prevMatch = null;\n  }\n\n  // LZ77 符号化\n  for (position = 0, length = dataArray.length; position < length; ++position) {\n    // ハッシュキーの作成\n    for (matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength; i < il; ++i) {\n      if (position + i === length) {\n        break;\n      }\n      matchKey = (matchKey << 8) | dataArray[position + i];\n    }\n\n    // テーブルが未定義だったら作成する\n    if (table[matchKey] === void 0) { table[matchKey] = []; }\n    matchList = table[matchKey];\n\n    // skip\n    if (skipLength-- > 0) {\n      matchList.push(position);\n      continue;\n    }\n\n    // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n      matchList.shift();\n    }\n\n    // データ末尾でマッチしようがない場合はそのまま流しこむ\n    if (position + Zlib.RawDeflate.Lz77MinLength >= length) {\n      if (prevMatch) {\n        writeMatch(prevMatch, -1);\n      }\n\n      for (i = 0, il = length - position; i < il; ++i) {\n        tmp = dataArray[position + i];\n        lz77buf[pos++] = tmp;\n        ++freqsLitLen[tmp];\n      }\n      break;\n    }\n\n    // マッチ候補から最長のものを探す\n    if (matchList.length > 0) {\n      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n      if (prevMatch) {\n        // 現在のマッチの方が前回のマッチよりも長い\n        if (prevMatch.length < longestMatch.length) {\n          // write previous literal\n          tmp = dataArray[position - 1];\n          lz77buf[pos++] = tmp;\n          ++freqsLitLen[tmp];\n\n          // write current match\n          writeMatch(longestMatch, 0);\n        } else {\n          // write previous match\n          writeMatch(prevMatch, -1);\n        }\n      } else if (longestMatch.length < lazy) {\n        prevMatch = longestMatch;\n      } else {\n        writeMatch(longestMatch, 0);\n      }\n      // 前回マッチしていて今回マッチがなかったら前回のを採用\n    } else if (prevMatch) {\n      writeMatch(prevMatch, -1);\n    } else {\n      tmp = dataArray[position];\n      lz77buf[pos++] = tmp;\n      ++freqsLitLen[tmp];\n    }\n\n    matchList.push(position); // マッチテーブルに現在の位置を保存\n  }\n\n  // 終端処理\n  lz77buf[pos++] = 256;\n  freqsLitLen[256]++;\n  this.freqsLitLen = freqsLitLen;\n  this.freqsDist = freqsDist;\n\n  return /** @type {!(Uint16Array|Array.<number>)} */ (\n      USE_TYPEDARRAY ?  lz77buf.subarray(0, pos) : lz77buf\n  );\n};\n\n/**\n * マッチした候補の中から最長一致を探す\n * @param {!Object} data plain data byte array.\n * @param {!number} position plain data byte array position.\n * @param {!Array.<number>} matchList 候補となる位置の配列.\n * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n * @private\n */\nZlib.RawDeflate.prototype.searchLongestMatch_ =\n    function(data, position, matchList) {\n      var match,\n          currentMatch,\n          matchMax = 0, matchLength,\n          i, j, l, dl = data.length;\n\n      // 候補を後ろから 1 つずつ絞り込んでゆく\n      permatch:\n          for (i = 0, l = matchList.length; i < l; i++) {\n            match = matchList[l - i - 1];\n            matchLength = Zlib.RawDeflate.Lz77MinLength;\n\n            // 前回までの最長一致を末尾から一致検索する\n            if (matchMax > Zlib.RawDeflate.Lz77MinLength) {\n              for (j = matchMax; j > Zlib.RawDeflate.Lz77MinLength; j--) {\n                if (data[match + j - 1] !== data[position + j - 1]) {\n                  continue permatch;\n                }\n              }\n              matchLength = matchMax;\n            }\n\n            // 最長一致探索\n            while (matchLength < Zlib.RawDeflate.Lz77MaxLength &&\n            position + matchLength < dl &&\n            data[match + matchLength] === data[position + matchLength]) {\n              ++matchLength;\n            }\n\n            // マッチ長が同じ場合は後方を優先\n            if (matchLength > matchMax) {\n              currentMatch = match;\n              matchMax = matchLength;\n            }\n\n            // 最長が確定したら後の処理は省略\n            if (matchLength === Zlib.RawDeflate.Lz77MaxLength) {\n              break;\n            }\n          }\n\n      return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n    };\n\n/**\n * Tree-Transmit Symbols の算出\n * reference: PuTTY Deflate implementation\n * @param {number} hlit HLIT.\n * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n * @param {number} hdist HDIST.\n * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n * @return {{\n *   codes: !(Array.<number>|Uint32Array),\n *   freqs: !(Array.<number>|Uint8Array)\n * }} Tree-Transmit Symbols.\n */\nZlib.RawDeflate.prototype.getTreeSymbols_ =\n    function(hlit, litlenLengths, hdist, distLengths) {\n      var src = new (USE_TYPEDARRAY ? Uint32Array : Array)(hlit + hdist),\n          i, j, runLength, l,\n          result = new (USE_TYPEDARRAY ? Uint32Array : Array)(286 + 30),\n          nResult,\n          rpt,\n          freqs = new (USE_TYPEDARRAY ? Uint8Array : Array)(19);\n\n      j = 0;\n      for (i = 0; i < hlit; i++) {\n        src[j++] = litlenLengths[i];\n      }\n      for (i = 0; i < hdist; i++) {\n        src[j++] = distLengths[i];\n      }\n\n      // 初期化\n      if (!USE_TYPEDARRAY) {\n        for (i = 0, l = freqs.length; i < l; ++i) {\n          freqs[i] = 0;\n        }\n      }\n\n      // 符号化\n      nResult = 0;\n      for (i = 0, l = src.length; i < l; i += j) {\n        // Run Length Encoding\n        for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n        runLength = j;\n\n        if (src[i] === 0) {\n          // 0 の繰り返しが 3 回未満ならばそのまま\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = 0;\n              freqs[0]++;\n            }\n          } else {\n            while (runLength > 0) {\n              // 繰り返しは最大 138 までなので切り詰める\n              rpt = (runLength < 138 ? runLength : 138);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              // 3-10 回 -> 17\n              if (rpt <= 10) {\n                result[nResult++] = 17;\n                result[nResult++] = rpt - 3;\n                freqs[17]++;\n                // 11-138 回 -> 18\n              } else {\n                result[nResult++] = 18;\n                result[nResult++] = rpt - 11;\n                freqs[18]++;\n              }\n\n              runLength -= rpt;\n            }\n          }\n        } else {\n          result[nResult++] = src[i];\n          freqs[src[i]]++;\n          runLength--;\n\n          // 繰り返し回数が3回未満ならばランレングス符号は要らない\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = src[i];\n              freqs[src[i]]++;\n            }\n            // 3 回以上ならばランレングス符号化\n          } else {\n            while (runLength > 0) {\n              // runLengthを 3-6 で分割\n              rpt = (runLength < 6 ? runLength : 6);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              result[nResult++] = 16;\n              result[nResult++] = rpt - 3;\n              freqs[16]++;\n\n              runLength -= rpt;\n            }\n          }\n        }\n      }\n\n      return {\n        codes:\n            USE_TYPEDARRAY ? result.subarray(0, nResult) : result.slice(0, nResult),\n        freqs: freqs\n      };\n    };\n\n/**\n * ハフマン符号の長さを取得する\n * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n * @param {number} limit 符号長の制限.\n * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n * @private\n */\nZlib.RawDeflate.prototype.getLengths_ = function(freqs, limit) {\n  /** @type {number} */\n  var nSymbols = freqs.length;\n  /** @type {Zlib.Heap} */\n  var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var length = new (USE_TYPEDARRAY ? Uint8Array : Array)(nSymbols);\n  /** @type {Array} */\n  var nodes;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var values;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // 配列の初期化\n  if (!USE_TYPEDARRAY) {\n    for (i = 0; i < nSymbols; i++) {\n      length[i] = 0;\n    }\n  }\n\n  // ヒープの構築\n  for (i = 0; i < nSymbols; ++i) {\n    if (freqs[i] > 0) {\n      heap.push(i, freqs[i]);\n    }\n  }\n  nodes = new Array(heap.length / 2);\n  values = new (USE_TYPEDARRAY ? Uint32Array : Array)(heap.length / 2);\n\n  // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n  if (nodes.length === 1) {\n    length[heap.pop().index] = 1;\n    return length;\n  }\n\n  // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n  for (i = 0, il = heap.length / 2; i < il; ++i) {\n    nodes[i] = heap.pop();\n    values[i] = nodes[i].value;\n  }\n  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n  for (i = 0, il = nodes.length; i < il; ++i) {\n    length[nodes[i].index] = codeLength[i];\n  }\n\n  return length;\n};\n\n/**\n * Reverse Package Merge Algorithm.\n * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n * @param {number} symbols number of symbols.\n * @param {number} limit code length limit.\n * @return {!(Array.<number>|Uint8Array)} code lengths.\n */\nZlib.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var minimumCost = new (USE_TYPEDARRAY ? Uint16Array : Array)(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var flag = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength = new (USE_TYPEDARRAY ? Uint8Array : Array)(symbols);\n  /** @type {Array} */\n  var value = new Array(limit);\n  /** @type {Array} */\n  var type  = new Array(limit);\n  /** @type {Array.<number>} */\n  var currentPosition = new Array(limit);\n  /** @type {number} */\n  var excess = (1 << limit) - symbols;\n  /** @type {number} */\n  var half = (1 << (limit - 1));\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var t;\n  /** @type {number} */\n  var weight;\n  /** @type {number} */\n  var next;\n\n  /**\n   * @param {number} j\n   */\n  function takePackage(j) {\n    /** @type {number} */\n    var x = type[j][currentPosition[j]];\n\n    if (x === symbols) {\n      takePackage(j+1);\n      takePackage(j+1);\n    } else {\n      --codeLength[x];\n    }\n\n    ++currentPosition[j];\n  }\n\n  minimumCost[limit-1] = symbols;\n\n  for (j = 0; j < limit; ++j) {\n    if (excess < half) {\n      flag[j] = 0;\n    } else {\n      flag[j] = 1;\n      excess -= half;\n    }\n    excess <<= 1;\n    minimumCost[limit-2-j] = (minimumCost[limit-1-j] / 2 | 0) + symbols;\n  }\n  minimumCost[0] = flag[0];\n\n  value[0] = new Array(minimumCost[0]);\n  type[0]  = new Array(minimumCost[0]);\n  for (j = 1; j < limit; ++j) {\n    if (minimumCost[j] > 2 * minimumCost[j-1] + flag[j]) {\n      minimumCost[j] = 2 * minimumCost[j-1] + flag[j];\n    }\n    value[j] = new Array(minimumCost[j]);\n    type[j]  = new Array(minimumCost[j]);\n  }\n\n  for (i = 0; i < symbols; ++i) {\n    codeLength[i] = limit;\n  }\n\n  for (t = 0; t < minimumCost[limit-1]; ++t) {\n    value[limit-1][t] = freqs[t];\n    type[limit-1][t]  = t;\n  }\n\n  for (i = 0; i < limit; ++i) {\n    currentPosition[i] = 0;\n  }\n  if (flag[limit-1] === 1) {\n    --codeLength[0];\n    ++currentPosition[limit-1];\n  }\n\n  for (j = limit-2; j >= 0; --j) {\n    i = 0;\n    weight = 0;\n    next = currentPosition[j+1];\n\n    for (t = 0; t < minimumCost[j]; t++) {\n      weight = value[j+1][next] + value[j+1][next+1];\n\n      if (weight > freqs[i]) {\n        value[j][t] = weight;\n        type[j][t] = symbols;\n        next += 2;\n      } else {\n        value[j][t] = freqs[i];\n        type[j][t] = i;\n        ++i;\n      }\n    }\n\n    currentPosition[j] = 0;\n    if (flag[j] === 1) {\n      takePackage(j);\n    }\n  }\n\n  return codeLength;\n};\n\n/**\n * 符号長配列からハフマン符号を取得する\n * reference: PuTTY Deflate implementation\n * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n * @private\n */\nZlib.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {\n  var codes = new (USE_TYPEDARRAY ? Uint16Array : Array)(lengths.length),\n      count = [],\n      startCode = [],\n      code = 0, i, il, j, m;\n\n  // Count the codes of each length.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n  }\n\n  // Determine the starting code for each length block.\n  for (i = 1, il = Zlib.RawDeflate.MaxCodeLength; i <= il; i++) {\n    startCode[i] = code;\n    code += count[i] | 0;\n    code <<= 1;\n  }\n\n  // Determine the code for each symbol. Mirrored, of course.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    code = startCode[lengths[i]];\n    startCode[lengths[i]] += 1;\n    codes[i] = 0;\n\n    for (j = 0, m = lengths[i]; j < m; j++) {\n      codes[i] = (codes[i] << 1) | (code & 1);\n      code >>>= 1;\n    }\n  }\n\n  return codes;\n};\n\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Unzip = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      (USE_TYPEDARRAY && (input instanceof Array)) ?\n          new Uint8Array(input) : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {number} */\n  this.eocdrOffset;\n  /** @type {number} */\n  this.numberOfThisDisk;\n  /** @type {number} */\n  this.startDisk;\n  /** @type {number} */\n  this.totalEntriesThisDisk;\n  /** @type {number} */\n  this.totalEntries;\n  /** @type {number} */\n  this.centralDirectorySize;\n  /** @type {number} */\n  this.centralDirectoryOffset;\n  /** @type {number} */\n  this.commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  this.fileHeaderList;\n  /** @type {Object.<string, number>} */\n  this.filenameToIndex;\n  /** @type {boolean} */\n  this.verify = opt_params['verify'] || false;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password = opt_params['password'];\n};\n\nZlib.Unzip.CompressionMethod = Zlib.Zip.CompressionMethod;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.FileHeaderSignature = Zlib.Zip.FileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.LocalFileHeaderSignature = Zlib.Zip.LocalFileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.CentralDirectorySignature = Zlib.Zip.CentralDirectorySignature;\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.FileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.version;\n  /** @type {number} */\n  this.os;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {number} */\n  this.fileCommentLength;\n  /** @type {number} */\n  this.diskNumberStart;\n  /** @type {number} */\n  this.internalFileAttributes;\n  /** @type {number} */\n  this.externalFileAttributes;\n  /** @type {number} */\n  this.relativeOffset;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.comment;\n};\n\nZlib.Unzip.FileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // central file header signature\n  if (input[ip++] !== Zlib.Unzip.FileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[3]) {\n    throw new Error('invalid file header signature');\n  }\n\n  // version made by\n  this.version = input[ip++];\n  this.os = input[ip++];\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file comment length\n  this.fileCommentLength = input[ip++] | (input[ip++] << 8);\n\n  // disk number start\n  this.diskNumberStart = input[ip++] | (input[ip++] << 8);\n\n  // internal file attributes\n  this.internalFileAttributes = input[ip++] | (input[ip++] << 8);\n\n  // external file attributes\n  this.externalFileAttributes =\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24);\n\n  // relative offset of local header\n  this.relativeOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.fileNameLength) :\n      input.slice(ip, ip += this.fileNameLength)\n  );\n\n  // extra field\n  this.extraField = USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.extraFieldLength) :\n      input.slice(ip, ip += this.extraFieldLength);\n\n  // file comment\n  this.comment = USE_TYPEDARRAY ?\n      input.subarray(ip, ip + this.fileCommentLength) :\n      input.slice(ip, ip + this.fileCommentLength);\n\n  this.length = ip - this.offset;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.LocalFileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n};\n\nZlib.Unzip.LocalFileHeader.Flags = Zlib.Zip.Flags;\n\nZlib.Unzip.LocalFileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // local file header signature\n  if (input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[3]) {\n    throw new Error('invalid local file header signature');\n  }\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.fileNameLength) :\n      input.slice(ip, ip += this.fileNameLength)\n  );\n\n  // extra field\n  this.extraField = USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.extraFieldLength) :\n      input.slice(ip, ip += this.extraFieldLength);\n\n  this.length = ip - this.offset;\n};\n\n\nZlib.Unzip.prototype.searchEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  for (ip = input.length - 12; ip > 0; --ip) {\n    if (input[ip  ] === Zlib.Unzip.CentralDirectorySignature[0] &&\n        input[ip+1] === Zlib.Unzip.CentralDirectorySignature[1] &&\n        input[ip+2] === Zlib.Unzip.CentralDirectorySignature[2] &&\n        input[ip+3] === Zlib.Unzip.CentralDirectorySignature[3]) {\n      this.eocdrOffset = ip;\n      return;\n    }\n  }\n\n  throw new Error('End of Central Directory Record not found');\n};\n\nZlib.Unzip.prototype.parseEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  if (!this.eocdrOffset) {\n    this.searchEndOfCentralDirectoryRecord();\n  }\n  ip = this.eocdrOffset;\n\n  // signature\n  if (input[ip++] !== Zlib.Unzip.CentralDirectorySignature[0] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[1] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[2] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[3]) {\n    throw new Error('invalid signature');\n  }\n\n  // number of this disk\n  this.numberOfThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // number of the disk with the start of the central directory\n  this.startDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory on this disk\n  this.totalEntriesThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory\n  this.totalEntries = input[ip++] | (input[ip++] << 8);\n\n  // size of the central directory\n  this.centralDirectorySize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // offset of start of central directory with respect to the starting disk number\n  this.centralDirectoryOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // .ZIP file comment length\n  this.commentLength = input[ip++] | (input[ip++] << 8);\n\n  // .ZIP file comment\n  this.comment = USE_TYPEDARRAY ?\n      input.subarray(ip, ip + this.commentLength) :\n      input.slice(ip, ip + this.commentLength);\n};\n\nZlib.Unzip.prototype.parseFileHeader = function() {\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var filelist = [];\n  /** @type {Object.<string, number>} */\n  var filetable = {};\n  /** @type {number} */\n  var ip;\n  /** @type {Zlib.Unzip.FileHeader} */\n  var fileHeader;\n  /*: @type {number} */\n  var i;\n  /*: @type {number} */\n  var il;\n\n  if (this.fileHeaderList) {\n    return;\n  }\n\n  if (this.centralDirectoryOffset === void 0) {\n    this.parseEndOfCentralDirectoryRecord();\n  }\n  ip = this.centralDirectoryOffset;\n\n  for (i = 0, il = this.totalEntries; i < il; ++i) {\n    fileHeader = new Zlib.Unzip.FileHeader(this.input, ip);\n    fileHeader.parse();\n    ip += fileHeader.length;\n    filelist[i] = fileHeader;\n    filetable[fileHeader.filename] = i;\n  }\n\n  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n    throw new Error('invalid file header size');\n  }\n\n  this.fileHeaderList = filelist;\n  this.filenameToIndex = filetable;\n};\n\n/**\n * @param {number} index file header index.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} file data.\n */\nZlib.Unzip.prototype.getFileData = function(index, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList = this.fileHeaderList;\n  /** @type {Zlib.Unzip.LocalFileHeader} */\n  var localFileHeader;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var length;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {number} */\n  var crc32;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (!fileHeaderList) {\n    this.parseFileHeader();\n  }\n\n  if (fileHeaderList[index] === void 0) {\n    throw new Error('wrong index');\n  }\n\n  offset = fileHeaderList[index].relativeOffset;\n  localFileHeader = new Zlib.Unzip.LocalFileHeader(this.input, offset);\n  localFileHeader.parse();\n  offset += localFileHeader.length;\n  length = localFileHeader.compressedSize;\n\n  // decryption\n  if ((localFileHeader.flags & Zlib.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n    if (!(opt_params['password'] || this.password)) {\n      throw new Error('please set password');\n    }\n    key =  this.createDecryptionKey(opt_params['password'] || this.password);\n\n    // encryption header\n    for(i = offset, il = offset + 12; i < il; ++i) {\n      this.decode(key, input[i]);\n    }\n    offset += 12;\n    length -= 12;\n\n    // decryption\n    for (i = offset, il = offset + length; i < il; ++i) {\n      input[i] = this.decode(key, input[i]);\n    }\n  }\n\n  switch (localFileHeader.compression) {\n    case Zlib.Unzip.CompressionMethod.STORE:\n      buffer = USE_TYPEDARRAY ?\n          this.input.subarray(offset, offset + length) :\n          this.input.slice(offset, offset + length);\n      break;\n    case Zlib.Unzip.CompressionMethod.DEFLATE:\n      buffer = new Zlib.RawInflate(this.input, {\n        'index': offset,\n        'bufferSize': localFileHeader.plainSize\n      }).decompress();\n      break;\n    default:\n      throw new Error('unknown compression type');\n  }\n\n  if (this.verify) {\n    crc32 = Zlib.CRC32.calc(buffer);\n    if (localFileHeader.crc32 !== crc32) {\n      throw new Error(\n          'wrong crc: file=0x' + localFileHeader.crc32.toString(16) +\n          ', data=0x' + crc32.toString(16)\n      );\n    }\n  }\n\n  return buffer;\n};\n\n/**\n * @return {Array.<string>}\n */\nZlib.Unzip.prototype.getFilenames = function() {\n  /** @type {Array.<string>} */\n  var filenameList = [];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList;\n\n  if (!this.fileHeaderList) {\n    this.parseFileHeader();\n  }\n  fileHeaderList = this.fileHeaderList;\n\n  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n    filenameList[i] = fileHeaderList[i].filename;\n  }\n\n  return filenameList;\n};\n\n/**\n * @param {string} filename extract filename.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} decompressed data.\n */\nZlib.Unzip.prototype.decompress = function(filename, opt_params) {\n  /** @type {number} */\n  var index;\n\n  if (!this.filenameToIndex) {\n    this.parseFileHeader();\n  }\n  index = this.filenameToIndex[filename];\n\n  if (index === void 0) {\n    throw new Error(filename + ' not found');\n  }\n\n  return this.getFileData(index, opt_params);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Unzip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Unzip.prototype.decode = function(key, n) {\n  n ^= this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return n;\n};\n\n// common method\nZlib.Unzip.prototype.updateKeys = Zlib.Zip.prototype.updateKeys;\nZlib.Unzip.prototype.createDecryptionKey = Zlib.Zip.prototype.createEncryptionKey;\nZlib.Unzip.prototype.getByte = Zlib.Zip.prototype.getByte;\n\n/**\n * @fileoverview 雑多な関数群をまとめたモジュール実装.\n */\n\n\n/**\n * Byte String から Byte Array に変換.\n * @param {!string} str byte string.\n * @return {!Array.<number>} byte array.\n */\nZlib.Util.stringToByteArray = function(str) {\n  /** @type {!Array.<(string|number)>} */\n  var tmp = str.split('');\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  for (i = 0, il = tmp.length; i < il; i++) {\n    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n  }\n\n  return tmp;\n};\n\n\n/**\n * @fileoverview Adler32 checksum 実装.\n */\n\n\n/**\n * Adler32 ハッシュ値の作成\n * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32 = function(array) {\n  if (typeof(array) === 'string') {\n    array = Zlib.Util.stringToByteArray(array);\n  }\n  return Zlib.Adler32.update(1, array);\n};\n\n/**\n * Adler32 ハッシュ値の更新\n * @param {number} adler 現在のハッシュ値.\n * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32.update = function(adler, array) {\n  /** @type {number} */\n  var s1 = adler & 0xffff;\n  /** @type {number} */\n  var s2 = (adler >>> 16) & 0xffff;\n  /** @type {number} array length */\n  var len = array.length;\n  /** @type {number} loop length (don't overflow) */\n  var tlen;\n  /** @type {number} array index */\n  var i = 0;\n\n  while (len > 0) {\n    tlen = len > Zlib.Adler32.OptimizationParameter ?\n        Zlib.Adler32.OptimizationParameter : len;\n    len -= tlen;\n    do {\n      s1 += array[i++];\n      s2 += s1;\n    } while (--tlen);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return ((s2 << 16) | s1) >>> 0;\n};\n\n/**\n * Adler32 最適化パラメータ\n * 現状では 1024 程度が最適.\n * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n * @define {number}\n */\nZlib.Adler32.OptimizationParameter = 1024;\n\n\n\n\n/**\n * ビットストリーム\n * @constructor\n * @param {!(Array|Uint8Array)=} buffer output buffer.\n * @param {number=} bufferPosition start buffer pointer.\n */\nZlib.BitStream = function(buffer, bufferPosition) {\n  /** @type {number} buffer index. */\n  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n  /** @type {number} bit index. */\n  this.bitindex = 0;\n  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n  this.buffer = buffer instanceof (USE_TYPEDARRAY ? Uint8Array : Array) ?\n      buffer :\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.BitStream.DefaultBlockSize);\n\n  // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n  if (this.buffer.length * 2 <= this.index) {\n    throw new Error(\"invalid index\");\n  } else if (this.buffer.length <= this.index) {\n    this.expandBuffer();\n  }\n};\n\n/**\n * デフォルトブロックサイズ.\n * @const\n * @type {number}\n */\nZlib.BitStream.DefaultBlockSize = 0x8000;\n\n/**\n * expand buffer.\n * @return {!(Array|Uint8Array)} new buffer.\n */\nZlib.BitStream.prototype.expandBuffer = function() {\n  /** @type {!(Array|Uint8Array)} old buffer. */\n  var oldbuf = this.buffer;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il = oldbuf.length;\n  /** @type {!(Array|Uint8Array)} new buffer. */\n  var buffer =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(il << 1);\n\n  // copy buffer\n  if (USE_TYPEDARRAY) {\n    buffer.set(oldbuf);\n  } else {\n    // XXX: loop unrolling\n    for (i = 0; i < il; ++i) {\n      buffer[i] = oldbuf[i];\n    }\n  }\n\n  return (this.buffer = buffer);\n};\n\n\n/**\n * 数値をビットで指定した数だけ書き込む.\n * @param {number} number 書き込む数値.\n * @param {number} n 書き込むビット数.\n * @param {boolean=} reverse 逆順に書き込むならば true.\n */\nZlib.BitStream.prototype.writeBits = function(number, n, reverse) {\n  var buffer = this.buffer;\n  var index = this.index;\n  var bitindex = this.bitindex;\n\n  /** @type {number} current octet. */\n  var current = buffer[index];\n  /** @type {number} loop counter. */\n  var i;\n\n  /**\n   * 32-bit 整数のビット順を逆にする\n   * @param {number} n 32-bit integer.\n   * @return {number} reversed 32-bit integer.\n   * @private\n   */\n  function rev32_(n) {\n    return (Zlib.BitStream.ReverseTable[n & 0xFF] << 24) |\n        (Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |\n        (Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |\n        Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];\n  }\n\n  if (reverse && n > 1) {\n    number = n > 8 ?\n        rev32_(number) >> (32 - n) :\n        Zlib.BitStream.ReverseTable[number] >> (8 - n);\n  }\n\n  // Byte 境界を超えないとき\n  if (n + bitindex < 8) {\n    current = (current << n) | number;\n    bitindex += n;\n    // Byte 境界を超えるとき\n  } else {\n    for (i = 0; i < n; ++i) {\n      current = (current << 1) | ((number >> n - i - 1) & 1);\n\n      // next byte\n      if (++bitindex === 8) {\n        bitindex = 0;\n        buffer[index++] = Zlib.BitStream.ReverseTable[current];\n        current = 0;\n\n        // expand\n        if (index === buffer.length) {\n          buffer = this.expandBuffer();\n        }\n      }\n    }\n  }\n  buffer[index] = current;\n\n  this.buffer = buffer;\n  this.bitindex = bitindex;\n  this.index = index;\n};\n\n\n/**\n * ストリームの終端処理を行う\n * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n */\nZlib.BitStream.prototype.finish = function() {\n  var buffer = this.buffer;\n  var index = this.index;\n\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output;\n\n  // bitindex が 0 の時は余分に index が進んでいる状態\n  if (this.bitindex > 0) {\n    buffer[index] <<= 8 - this.bitindex;\n    buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];\n    index++;\n  }\n\n  // array truncation\n  if (USE_TYPEDARRAY) {\n    output = buffer.subarray(0, index);\n  } else {\n    buffer.length = index;\n    output = buffer;\n  }\n\n  return output;\n};\n\n/**\n * 0-255 のビット順を反転したテーブル\n * @const\n * @type {!(Uint8Array|Array.<number>)}\n */\nZlib.BitStream.ReverseTable = (function(table) {\n  return table;\n})((function() {\n  /** @type {!(Array|Uint8Array)} reverse table. */\n  var table = new (USE_TYPEDARRAY ? Uint8Array : Array)(256);\n  /** @type {number} loop counter. */\n  var i;\n\n  // generate\n  for (i = 0; i < 256; ++i) {\n    table[i] = (function(n) {\n      var r = n;\n      var s = 7;\n\n      for (n >>>= 1; n; n >>>= 1) {\n        r <<= 1;\n        r |= n & 1;\n        --s;\n      }\n\n      return (r << s & 0xff) >>> 0;\n    })(i);\n  }\n\n  return table;\n})());\n\n\n/**\n * @fileoverview CRC32 実装.\n */\n\n\n/** @define {boolean} */\nvar ZLIB_CRC32_COMPACT = false;\n\n/**\n * CRC32 ハッシュ値を取得\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.calc = function(data, pos, length) {\n  return Zlib.CRC32.update(data, 0, pos, length);\n};\n\n/**\n * CRC32ハッシュ値を更新\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number} crc CRC32.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.update = function(data, crc, pos, length) {\n  var table = Zlib.CRC32.Table;\n  var i = (typeof pos === 'number') ? pos : (pos = 0);\n  var il = (typeof length === 'number') ? length : data.length;\n\n  crc ^= 0xffffffff;\n\n  // loop unrolling for performance\n  for (i = il & 7; i--; ++pos) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos]) & 0xff];\n  }\n  for (i = il >> 3; i--; pos += 8) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos    ]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 1]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 2]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 3]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 4]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 5]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 6]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 7]) & 0xff];\n  }\n\n  return (crc ^ 0xffffffff) >>> 0;\n};\n\n/**\n * @param {number} num\n * @param {number} crc\n * @returns {number}\n */\nZlib.CRC32.single = function(num, crc) {\n  return (Zlib.CRC32.Table[(num ^ crc) & 0xff] ^ (num >>> 8)) >>> 0;\n};\n\n/**\n * @type {Array.<number>}\n * @const\n * @private\n */\nZlib.CRC32.Table_ = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n  0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n  0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n  0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n  0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n  0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n  0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n  0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n  0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n  0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n  0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n  0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\n/**\n * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n * @const\n */\nZlib.CRC32.Table = ZLIB_CRC32_COMPACT ? (function() {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var table = new (USE_TYPEDARRAY ? Uint32Array : Array)(256);\n  /** @type {number} */\n  var c;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n\n  for (i = 0; i < 256; ++i) {\n    c = i;\n    for (j = 0; j < 8; ++j) {\n      c = (c & 1) ? (0xedB88320 ^ (c >>> 1)) : (c >>> 1);\n    }\n    table[i] = c >>> 0;\n  }\n\n  return table;\n})() : USE_TYPEDARRAY ? new Uint32Array(Zlib.CRC32.Table_) : Zlib.CRC32.Table_;\n\n/**\n * @fileoverview Deflate (RFC1951) 実装.\n * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n */\n\n/**\n * Zlib Deflate\n * @constructor\n * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Deflate = function(input, opt_params) {\n  /** @type {!(Array|Uint8Array)} */\n  this.input = input;\n  /** @type {!(Array|Uint8Array)} */\n  this.output =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Deflate.DefaultBufferSize);\n  /** @type {Zlib.Deflate.CompressionType} */\n  this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;\n  /** @type {Zlib.RawDeflate} */\n  this.rawDeflate;\n  /** @type {Object} */\n  var rawDeflateOption = {};\n  /** @type {string} */\n  var prop;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n  }\n\n  // copy options\n  for (prop in opt_params) {\n    rawDeflateOption[prop] = opt_params[prop];\n  }\n\n  // set raw-deflate output buffer\n  rawDeflateOption['outputBuffer'] = this.output;\n\n  this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption);\n};\n\n/**\n * @const\n * @type {number} デフォルトバッファサイズ.\n */\nZlib.Deflate.DefaultBufferSize = 0x8000;\n\n/**\n * @enum {number}\n */\nZlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;\n\n/**\n * 直接圧縮に掛ける.\n * @param {!(Array|Uint8Array)} input target buffer.\n * @param {Object=} opt_params option parameters.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.compress = function(input, opt_params) {\n  return (new Zlib.Deflate(input, opt_params)).compress();\n};\n\n/**\n * Deflate Compression.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.prototype.compress = function() {\n  /** @type {Zlib.CompressionMethod} */\n  var cm;\n  /** @type {number} */\n  var cinfo;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n  /** @type {number} */\n  var fcheck;\n  /** @type {number} */\n  var fdict;\n  /** @type {number} */\n  var flevel;\n  /** @type {number} */\n  var clevel;\n  /** @type {number} */\n  var adler;\n  /** @type {boolean} */\n  var error = false;\n  /** @type {!(Array|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var pos = 0;\n\n  output = this.output;\n\n  // Compression Method and Flags\n  cm = Zlib.CompressionMethod.DEFLATE;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  cmf = (cinfo << 4) | cm;\n  output[pos++] = cmf;\n\n  // Flags\n  fdict = 0;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      switch (this.compressionType) {\n        case Zlib.Deflate.CompressionType.NONE: flevel = 0; break;\n        case Zlib.Deflate.CompressionType.FIXED: flevel = 1; break;\n        case Zlib.Deflate.CompressionType.DYNAMIC: flevel = 2; break;\n        default: throw new Error('unsupported compression type');\n      }\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  flg = (flevel << 6) | (fdict << 5);\n  fcheck = 31 - (cmf * 256 + flg) % 31;\n  flg |= fcheck;\n  output[pos++] = flg;\n\n  // Adler-32 checksum\n  adler = Zlib.Adler32(this.input);\n\n  this.rawDeflate.op = pos;\n  output = this.rawDeflate.compress();\n  pos = output.length;\n\n  if (USE_TYPEDARRAY) {\n    // subarray 分を元にもどす\n    output = new Uint8Array(output.buffer);\n    // expand buffer\n    if (output.length <= pos + 4) {\n      this.output = new Uint8Array(output.length + 4);\n      this.output.set(output);\n      output = this.output;\n    }\n    output = output.subarray(0, pos + 4);\n  }\n\n  // adler32\n  output[pos++] = (adler >> 24) & 0xff;\n  output[pos++] = (adler >> 16) & 0xff;\n  output[pos++] = (adler >>  8) & 0xff;\n  output[pos++] = (adler      ) & 0xff;\n\n  return output;\n};\n\n\nexport{Zlib};\n\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nimport {jszlib_inflate_buffer,arrayCopy} from \"./vendor/inflate.js\";\nimport {Zlib} from \"./vendor/zlib_and_gzip.js\";\n\nlet is_node=false;\ntry{\n    navigator;\n}catch(e){\n    is_node=true;\n}\n\n\n\nconst NONE = 0;\nconst GZIP = 1;\nconst BGZF = 2;\nclass igvxhr {\n   \n    // Compression types\n   \n\n    static load(url, options) {\n\n       \n\n        return new Promise(function (fulfill, reject) {\n            var xhr = new XMLHttpRequest(),\n                sendData = options.sendData,\n                method = options.method || (sendData ? \"POST\" : \"GET\"),\n                range = options.range,\n                responseType = options.responseType,\n                contentType = options.contentType,\n                mimeType = options.mimeType,\n                headers = options.headers,\n                isSafari = is_node?false:navigator.vendor.indexOf(\"Apple\") == 0 && /\\sSafari\\//.test(navigator.userAgent),\n                withCredentials = options.withCredentials,\n                header_keys, key, value, i;\n\n            // Support for GCS paths.\n           //url = url.startsWith(\"gs://\") ? igv.Google.translateGoogleCloudURL(url) : url;\n        \n\n           /* if (igv.Google.isGoogleURL(url)) {\n\n                url = igv.Google.addApiKey(url);\n\n                // Add google headers (e.g. oAuth)\n                headers = headers || {};\n                igv.Google.addGoogleHeaders(headers);\n\n                // Hack to prevent caching for google storage files.  Get weird net:err-cache errors otherwise\n                if (range) {\n                    url += url.includes(\"?\") ? \"&\" : \"?\";\n                    url += \"someRandomSeed=\" + Math.random().toString(36);\n                }\n            }\n            */\n    \n\n            xhr.open(method, url);\n\n            if (range) {\n                var rangeEnd = range.size ? range.start + range.size - 1 : \"\";\n                xhr.setRequestHeader(\"Range\", \"bytes=\" + range.start + \"-\" + rangeEnd);\n            }\n            if (contentType) {\n                xhr.setRequestHeader(\"Content-Type\", contentType);\n            }\n            if (mimeType) {\n                xhr.overrideMimeType(mimeType);\n            }\n            if (responseType) {\n                xhr.responseType = responseType;\n            }\n            if (headers) {\n                header_keys = Object.keys(headers);\n                for (i = 0; i < header_keys.length; i++) {\n                    key = header_keys[i];\n                    value = headers[key];\n                    // console.log(\"Adding to header: \" + key + \"=\" + value);\n                    xhr.setRequestHeader(key, value);\n                }\n            }\n\n            // NOTE: using withCredentials with servers that return \"*\" for access-allowed-origin will fail\n            if (withCredentials === true) {\n                xhr.withCredentials = true;\n            }\n            xhr.timeout=30000;\n\n            xhr.onload = function (event) {\n                // when the url points to a local file, the status is 0 but that is no error\n                if (xhr.status == 0 || (xhr.status >= 200 && xhr.status <= 300)) {\n\n                    if (range && xhr.status != 206) {\n                        handleError(\"ERROR: range-byte header was ignored for url: \" + url);\n                    }\n                    else {\n                      \n                        fulfill(xhr.response,xhr);\n                     \n                    }\n                }\n                else {\n\n                    //\n                    if (xhr.status === 416) {\n                        //  Tried to read off the end of the file.   This shouldn't happen, but if it does return an\n                        handleError(\"Unsatisfiable range\");\n                    }\n                    else {// TODO -- better error handling\n                        handleError(\"Error accessing resource: \" + xhr.status);\n                    }\n\n                }\n\n            };\n\n            xhr.onerror = function (event) {\n               handleError(\"Error accessing resource: \" + url + \" Status: \" + xhr.status);    \n            }\n\n\n            xhr.ontimeout = function (event) {\n                handleError(\"Timed out\");\n            };\n\n            xhr.onabort = function (event) {\n                console.log(\"Aborted\");\n                reject(new igv.AbortLoad());\n            };\n\n            try {\n               \n                xhr.send(sendData);\n                \n            } catch (e) {\n                reject(e);\n            }\n\n\n            function handleError(message) {\n                if (reject) {\n                    reject(message);\n                }\n                else {\n                    throw Error(message);\n                }\n            }\n        });\n    }\n\n    static loadArrayBuffer (url, options) {\n\n        if (options === undefined) options = {};\n        options.responseType = \"arraybuffer\";\n        return igvxhr.load(url, options);\n    };\n\n    static loadJson (url, options) {\n\n        var method = options.method || (options.sendData ? \"POST\" : \"GET\");\n\n        if (method == \"POST\") options.contentType = \"application/json\";\n\n        return new Promise(function (fulfill, reject) {\n\n            igvxhr.load(url, options).then(\n                function (result) {\n                    if (result) {\n                        fulfill(JSON.parse(result));\n                    }\n                    else {\n                        fulfill(result);\n                    }\n                }).catch(reject);\n        })\n    }\n\n    /**\n     * Load a \"raw\" string.\n     */\n    static loadString(url, options) {\n\n        var compression, fn, idx;\n\n        if (options === undefined) options = {};\n\n        // Strip parameters from url\n        // TODO -- handle local files with ?\n        idx = url.indexOf(\"?\");\n        fn = idx > 0 ? url.substring(0, idx) : url;\n\n        if (options.bgz) {\n            compression = BGZF;\n        }\n        else if (fn.endsWith(\".gz\")) {\n            compression = GZIP;\n        }\n        else {\n            compression = NONE;\n        }\n\n        if (compression === NONE) {\n            options.mimeType = 'text/plain; charset=x-user-defined';\n            return igvxhr.load(url, options);\n        }\n        else {\n            options.responseType = \"arraybuffer\";\n\n            return new Promise(function (fulfill, reject) {\n\n                igvxhr.load(url, options).then(\n                    function (data) {\n                        var result = igvxhr.arrayBufferToString(data, compression);\n                        fulfill(result);\n                    }).catch(reject)\n            })\n        }\n\n    };\n\n    static loadStringFromFile(localfile, options) {\n\n        return new Promise(function (fulfill, reject) {\n\n            var fileReader = new FileReader(),\n                range = options.range;\n\n\n            fileReader.onload = function (e) {\n\n                var compression, result;\n\n                if (options.bgz) {\n                    compression = BGZF;\n                }\n                else if (localfile.name.endsWith(\".gz\")) {\n\n                    compression = GZIP;\n                }\n                else {\n                    compression = NONE;\n                }\n\n                result = igvxhr.arrayBufferToString(fileReader.result, compression);\n\n                fulfill(result, localfile);\n\n            };\n\n            fileReader.onerror = function (e) {\n                console.log(\"reject uploading local file \" + localfile.name);\n                reject(null, fileReader);\n            };\n\n            fileReader.readAsArrayBuffer(localfile);\n\n        });\n    }\n\n    static isCrossDomain(url) {\n\n        var origin = window.location.origin;\n\n        return !url.startsWith(origin);\n\n    }\n\n    static arrayBufferToString (arraybuffer, compression) {\n\n        var plain, inflate;\n\n        if (compression === GZIP) {\n            inflate = new Zlib.Gunzip(new Uint8Array(arraybuffer));\n            plain = inflate.decompress();\n        }\n        else if (compression === BGZF) {\n            plain = new Uint8Array(unbgzf(arraybuffer));\n        }\n        else {\n            plain = new Uint8Array(arraybuffer);\n        }\n\n        var result = \"\";\n        for (var i = 0, len = plain.length; i < len; i++) {\n            result = result + String.fromCharCode(plain[i]);\n        }\n        return result;\n    }\n\n}\n\n\n//**********js/bam/bgzf.js***************************************\n\n\nconst BLOCK_HEADER_LENGTH = 18;\nconst BLOCK_LENGTH_OFFSET = 16;  // Location in the gzip block of the total block size (actually total block size - 1)\nconst BLOCK_FOOTER_LENGTH = 8; // Number of bytes that follow the deflated data\nconst MAX_COMPRESSED_BLOCK_SIZE = 64 * 1024; // We require that a compressed block (including header and footer, be <= this)\nconst GZIP_OVERHEAD = BLOCK_HEADER_LENGTH + BLOCK_FOOTER_LENGTH + 2; // Gzip overhead is the header, the footer, and the block size (encoded as a short).\nconst GZIP_ID1 = 31;   // Magic number\nconst GZIP_ID2 = 139;  // Magic number\nconst GZIP_FLG = 4; // FEXTRA flag means there are optional fields\n\n\n    // Uncompress data,  assumed to be series of bgzipped blocks\n    // Code is based heavily on bam.js, part of the Dalliance Genome Explorer,  (c) Thomas Down 2006-2001.\nlet unbgzf = function (data, lim) {\n\n        var oBlockList = [],\n            ptr = [0],\n            totalSize = 0;\n\n        lim = lim || data.byteLength - 18;\n        const blockLengths=[];\n\n        while (ptr[0] < lim) {\n\n            var ba = new Uint8Array(data, ptr[0], 18);\n\n            var xlen = (ba[11] << 8) | (ba[10]);\n            var si1 = ba[12];\n            var si2 = ba[13];\n            var slen = (ba[15] << 8) | (ba[14]);\n            var bsize = (ba[17] << 8) | (ba[16]) + 1;\n            blockLengths.push(bsize)\n\n            var start = 12 + xlen + ptr[0];    // Start of CDATA\n            var length = data.byteLength - start;\n\n            if (length < (bsize + 8)) break;\n\n            var unc = jszlib_inflate_buffer(data, start, length, ptr);\n\n            ptr[0] += 8;    // Skipping CRC-32 and size of uncompressed data\n\n            totalSize += unc.byteLength;\n            oBlockList.push(unc);\n        }\n\n        // Concatenate decompressed blocks\n        if (oBlockList.length == 1) {\n            oBlockList.blockLengths=blockLengths;\n            return oBlockList[0];\n        } else {\n            var out = new Uint8Array(totalSize);\n            var cursor = 0;\n            for (var i = 0; i < oBlockList.length; ++i) {\n                var b = new Uint8Array(oBlockList[i]);\n                arrayCopy(b, 0, out, cursor, b.length);\n                cursor += b.length;\n            }\n            out.buffer.blockLengths=blockLengths;\n            return out.buffer;\n        }\n}\n\n\n\n\nexport {igvxhr,unbgzf};\n\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {igvxhr} from \"./igvxhr.js\";\n//import {pako} from \"./vendor/pako_inflate.js\";\nimport {Zlib} from \"./vendor/zlib_and_gzip.js\";\n\n\n//***********js/bigwig/bufferedReader.js*****************\nclass BufferedReader{\n    constructor(config, contentLength, bufferSize) {\n        this.path = config.url;\n        this.contentLength = contentLength;\n        this.bufferSize = bufferSize ? bufferSize : 512000;\n        this.range = {start: -1, size: -1};\n        this.config = config;\n    }\n\n    /**\n     *\n     * @param requestedRange - byte rangeas {start, size}\n     * @param fulfill - function to receive result\n     * @param asUint8 - optional flag to return result as an UInt8Array\n     */\n    dataViewForRange(requestedRange, asUint8) {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n            var hasData = (self.data && (self.range.start <= requestedRange.start) &&\n                ((self.range.start + self.range.size) >= (requestedRange.start + requestedRange.size))),\n                bufferSize,\n                loadRange;\n\n            if (hasData) {\n                subbuffer(self, requestedRange, asUint8);\n            }\n            else {\n                // Expand buffer size if needed, but not beyond content length\n                bufferSize = Math.max(self.bufferSize, requestedRange.size);\n\n                if (self.contentLength > 0 && requestedRange.start + bufferSize > self.contentLength) {\n                    loadRange = {start: requestedRange.start};\n                }\n                else {\n                    loadRange = {start: requestedRange.start, size: bufferSize};\n                }\n\n                igvxhr.loadArrayBuffer(self.path, Object.assign(self.config, {range: loadRange}))\n                    .then(function (arrayBuffer) {\n                    self.data = arrayBuffer;\n                    self.range = loadRange;\n                    subbuffer(self, requestedRange, asUint8);\n                }).catch(reject);\n\n            }\n\n\n            function subbuffer(bufferedReader, requestedRange, asUint8) {\n\n                var len = bufferedReader.data.byteLength,\n                    bufferStart = requestedRange.start - bufferedReader.range.start,\n                    result = asUint8 ?\n                        new Uint8Array(bufferedReader.data, bufferStart, len - bufferStart) :\n                        new DataView(bufferedReader.data, bufferStart, len - bufferStart);\n                fulfill(result);\n            }\n        });\n\n    }\n\n}\n\n\n//**********js/bigwig/bwSource.js***************\nclass BWSource{\n\n    constructor(config,create_feature_function) {\n        this.reader = new BWReader(config);\n        this.bufferedReader = new BufferedReader(config);\n        if (!create_feature_function){\n            this.create_feature=BWSource.createFeature;\n        }\n        else{\n            this.create_feature=create_feature_function;\n        }\n    }\n    \n    /**\n\t* Creates a panel\n\t* @param {string} chr - The chromosome\n\t* @param {int} bpStart The starting postition \n\t* @param {int} bpEnd - The end of the region to show\n\t* @param {boolean} use_existing - If true then the cached feature will be used- only used\n\t* if the co-oridinates have not changed. Although, the BWreader has a cache, it is sometimes\n\t* ignored and features are re-fetched for the same region\n\t* @param {object} data - Should contain pixelWidth- the width of the entire canvas and \n\t* bpPerPixel.\n\t*/\n    async getFeatures(chr, bpStart, bpEnd,use_existing,data) {\n        this.st = new Date().getTime();\n        if (this.features && use_existing){\n            return this.features;\n        }\n        const zoomLevelHeaders = await this.reader.getZoomHeaders();\n\n        // Select a biwig \"zoom level\" appropriate for the current resolution\n        const bwReader = this.reader,\n            bufferedReader = this.bufferedReader,\n            bpp = data.bpPerPixel,\n            zoomLevelHeader = BWSource.zoomLevelForScale(bpp, zoomLevelHeaders);\n        let treeOffset;\n        \n        \n        if (zoomLevelHeader && bwReader.type===\"BigWig\") {\n            treeOffset = zoomLevelHeader.indexOffset;\n            this.decodeFunction = BWSource.decodeZoomData;\n        } else {\n            treeOffset = bwReader.header.fullIndexOffset;\n            if (bwReader.type === \"BigWig\") {\n                this.decodeFunction =BWSource.decodeWigData;\n            }\n            else {\n                this.decodeFunction =this.decodeBedData;\n            }\n        }\n\n        const rpTree = await bwReader.loadRPTree(treeOffset);\n        const chrIdx = this.reader.chromTree.dictionary[chr];\n        if (chrIdx === undefined) {\n            // PJT - this happens when e.g. chr is \"1\" but the corresponding key should be \"chr1\"\n            // maybe user error, but we should handle it more gracefully and display a message\n            // preferably at the point of building the project in the first place(?),\n            // but also in the track UI if we make it this far.\n            // May not always be an error (if the bw doesn't have data for the chromosome)\n            const keys = Object.keys(this.reader.chromTree.dictionary);\n            // show at most 3 keys in the error message\n            const keyString = keys.slice(0, 3).join(\", \") + (keys.length > 3 ? \", ...\" : \"\");\n            throw new Error(`Chromosome '${chr}' not found in BigWig file. Expected one of ${keyString}`);\n        }\n        else {\n            const leafItems = await rpTree.findLeafItemsOverlapping(chrIdx, bpStart, bpEnd);\n            if (!leafItems || leafItems.length == 0) return [];\n            const featureArrays = await Promise.all(leafItems.map(async (item) => {\n                const features = [];\n\n                const uint8Array = await bufferedReader.dataViewForRange({\n                    start: item.dataOffset,\n                    size: item.dataSize\n                }, true);                    \n                const inflate = new Zlib.Inflate(uint8Array);\n                const plain= inflate.decompress();            \n                \n                //var plain = pako.inflate(uint8Array);\n                this.decodeFunction(new DataView(plain.buffer), chr, chrIdx, bpStart, bpEnd, features);\n\n                return features;\n            }));\n            var en = new Date().getTime();\n            // var e = en-this.st;\n            // var a = bpp;\n            //console.log(e);\n            // const allFeatures = featureArrays.slice(0); //<< no\n            let allFeatures = featureArrays[0];\n            if(featureArrays.length > 1) {\n                for(let i = 1; i < featureArrays.length; i++) {\n                    allFeatures = allFeatures.concat(featureArrays[i]);\n                }\n            }  \n            allFeatures.sort(function (a, b) {\n                return a.start - b.start;\n            });\n            this.features=allFeatures;\n            return allFeatures;\n        }\n    }\n    \n    \n    getDefaultRange() {\n        \n        if(this.reader.totalSummary != undefined) {\n            return this.reader.totalSummary.defaultRange;\n        }\n        else {\n            return undefined;\n        }\n        \n    }\n\n\n    static zoomLevelForScale(bpPerPixel, zoomLevelHeaders) {\n\n        let level = null, i, zl;\n\n        for (i = 0; i < zoomLevelHeaders.length; i++) {\n\n            zl = zoomLevelHeaders[i];\n\n            if (zl.reductionLevel > bpPerPixel) {\n                level = zl;\n                break;\n            }\n        }\n\n        if (null == level) {\n            level = zoomLevelHeaders[zoomLevelHeaders.length - 1];\n        }\n\n        return (level && level.reductionLevel < 4 * bpPerPixel) ? level : null;\n    }\n\n\n    static decodeWigData(data, chr, chrIdx, bpStart, bpEnd, featureArray) {\n\n        let binaryParser = new BinaryParser(data),\n            chromId = binaryParser.getInt(),\n            chromStart = binaryParser.getInt(),\n            chromEnd = binaryParser.getInt(),\n            itemStep = binaryParser.getInt(),\n            itemSpan = binaryParser.getInt(),\n            type = binaryParser.getByte(),\n            reserved = binaryParser.getByte(),\n            itemCount = binaryParser.getUShort(),\n            value;\n\n        if (chromId === chrIdx) {\n\n            while (itemCount-- > 0) {\n\n                switch (type) {\n                    case 1:\n                        chromStart = binaryParser.getInt();\n                        chromEnd = binaryParser.getInt();\n                        value = binaryParser.getFloat();\n                        break;\n                    case 2:\n                        chromStart = binaryParser.getInt();\n                        value = binaryParser.getFloat();\n                        chromEnd = chromStart + itemSpan;\n                        break;\n                    case 3:  // Fixed step\n                        value = binaryParser.getFloat();\n                        chromEnd = chromStart + itemSpan;\n                        chromStart += itemStep;\n                        break;\n\n                }\n\n                if (chromStart >= bpEnd) {\n                    break; // Out of interval\n                } else if (chromEnd > bpStart && Number.isFinite(value)) {\n                    featureArray.push({chr: chr, start: chromStart, end: chromEnd, value: value});\n                }\n\n\n            }\n        }\n\n    }\n\n    static decodeZoomData(data, chr, chrIdx, bpStart, bpEnd, featureArray) {\n\n        let binaryParser = new BinaryParser(data),\n            minSize = 8 * 4;   // Minimum # of bytes required for a zoom record\n        while (binaryParser.remLength() >= minSize) {\n            const chromId = binaryParser.getInt();\n            if (chromId === chrIdx) {\n                const chromStart = binaryParser.getInt();\n                const chromEnd = binaryParser.getInt();\n                const validCount = binaryParser.getInt();\n                const minVal = binaryParser.getFloat();\n                const maxVal = binaryParser.getFloat();\n                const sumData = binaryParser.getFloat();\n                const sumSquares = binaryParser.getFloat();\n                // maybe we don't always want mean value... think about this...\n                const value = validCount == 0 ? 0 : sumData / validCount;\n\n                if (chromStart >= bpEnd && chromStart<1000000000) {\n                    //console.log(\"should have broken\")\n\n                    break; // Out of interval\n                \n                } else if (chromEnd > bpStart && Number.isFinite(value)) {\n                    featureArray.push({chr, start: chromStart, end: chromEnd, value, minVal, maxVal});\n                }\n            }\n        }\n\n    }\n\n\n\n\n    decodeBedData(data, chr, chrIdx, bpStart, bpEnd, featureArray) {\n\n        var binaryParser = new BinaryParser(data),\n            minSize = 3 * 4 + 1,   // Minimum # of bytes required for a bed record\n            chromId,\n            chromStart,\n            chromEnd,\n            rest,\n            tokens,\n            feature,\n            exonCount, exonSizes, exonStarts, exons, eStart, eEnd;\n\n\n        while (binaryParser.remLength() >= minSize) {\n\n            chromId = binaryParser.getInt();\n            if (chromId != chrIdx) continue;\n\n            chromStart = binaryParser.getInt();\n            chromEnd = binaryParser.getInt();\n            rest = binaryParser.getString();\n\n            feature = {chr: chr, start: chromStart, end: chromEnd};\n\n            if (chromStart < bpEnd && chromEnd >= bpStart) {\n                featureArray.push(feature);\n\n                tokens = rest.split(\"\\t\");\n                this.create_feature(tokens,feature);\n\n                \n            }\n        }\n\n    }\n    \n    static createFeature(tokens,feature){\n        if (tokens.length > 0) {\n                    feature.name = tokens[0];\n                }\n\n                if (tokens.length > 1) {\n                    feature.score = parseFloat(tokens[1]);\n                }\n                if (tokens.length > 2) {\n                    feature.strand = tokens[2];\n                }\n                if (tokens.length > 3) {\n                    feature.cdStart = parseInt(tokens[3]);\n                }\n                if (tokens.length > 4) {\n                    feature.cdEnd = parseInt(tokens[4]);\n                }\n                if (tokens.length > 5) {\n                    //if (tokens[5] !== \".\" && tokens[5] !== \"0\")\n                        //feature.color = igv.createColorString(tokens[5]);\n                }\n                if (tokens.length > 8) {\n                    exonCount = parseInt(tokens[6]);\n                    exonSizes = tokens[7].split(',');\n                    exonStarts = tokens[8].split(',');\n                    exons = [];\n\n                    for (var i = 0; i < exonCount; i++) {\n                        eStart = start + parseInt(exonStarts[i]);\n                        eEnd = eStart + parseInt(exonSizes[i]);\n                        exons.push({start: eStart, end: eEnd});\n                    }\n\n                    feature.exons = exons;\n                }\n\n    }\n}\n\n\n\n//************js/bigwig/bwReader.js*****************\n\n\nconst BIGWIG_MAGIC_LTH = 0x888FFC26; // BigWig Magic Low to High\nconst BIGWIG_MAGIC_HTL = 0x26FC8F66; // BigWig Magic High to Low\nconst BIGBED_MAGIC_LTH = 0x8789F2EB; // BigBed Magic Low to High\nconst BIGBED_MAGIC_HTL = 0xEBF28987; // BigBed Magic High to Low\nconst BBFILE_HEADER_SIZE = 64;\n\n\nclass BWReader{\n    constructor(config) {\n        this.path = config.url;\n        this.headPath = config.headURL || this.path;\n        this.rpTreeCache = {};\n        this.config = JSON.parse(JSON.stringify(config))\n    };\n\n    async getZoomHeaders() {\n        if (this.zoomLevelHeaders) {\n            return this.zoomLevelHeaders;\n        }\n        else {\n            await this.loadHeader();\n            return this.zoomLevelHeaders;\n        }\n    }\n\n    async loadHeader() {\n        // any exceptions that previously called reject will now be thrown implicitly\n        // may want to consider more specific error handling\n        const data = await igvxhr.loadArrayBuffer(this.path, Object.assign(this.config, {range: {start: 0, size: BBFILE_HEADER_SIZE}}));\n\n        if (!data) return;\n\n        // Assume low-to-high unless proven otherwise\n        this.littleEndian = true;\n        const binaryParser = new BinaryParser(new DataView(data));\n        const magic = binaryParser.getUInt();\n\n        if (magic === BIGWIG_MAGIC_LTH) {\n            this.type = \"BigWig\";\n        }\n        else if (magic == BIGBED_MAGIC_LTH) {\n            this.type = \"BigBed\";\n        }\n        else {\n            //Try big endian order\n            this.littleEndian = false;\n\n            binaryParser.littleEndian = false;\n            binaryParser.position = 0;\n            // var magic = binaryParser.getUInt();\n\n            if (magic === BIGWIG_MAGIC_HTL) {\n                this.type = \"BigWig\";\n            }\n            else if (magic == BIGBED_MAGIC_HTL) {\n                this.type = \"BigBed\";\n            }\n            else {\n                // TODO -- error, unknown file type  or BE\n            }\n        }\n        // Table 5  \"Common header for BigWig and BigBed files\"\n        this.header = {};\n        this.header.bwVersion = binaryParser.getUShort();\n        this.header.nZoomLevels = binaryParser.getUShort();\n        this.header.chromTreeOffset = binaryParser.getLong();\n        this.header.fullDataOffset = binaryParser.getLong();\n        this.header.fullIndexOffset = binaryParser.getLong();\n        this.header.fieldCount = binaryParser.getUShort();\n        this.header.definedFieldCount = binaryParser.getUShort();\n        this.header.autoSqlOffset = binaryParser.getLong();\n        this.header.totalSummaryOffset = binaryParser.getLong();\n        this.header.uncompressBuffSize = binaryParser.getInt();\n        this.header.reserved = binaryParser.getLong();\n\n        return await this.loadZoomHeadersAndChrTree();\n    }\n\n\n    async loadZoomHeadersAndChrTree() {\n        const startOffset = BBFILE_HEADER_SIZE;\n\n        const range = {start: startOffset, size: (this.header.fullDataOffset - startOffset + 5)};\n\n        const data = await igvxhr.loadArrayBuffer(this.path, Object.assign(this.config, {range: range}))\n\n        let nZooms = this.header.nZoomLevels,\n            binaryParser = new BinaryParser(new DataView(data)),\n            i,\n            len,\n            zoomNumber,\n            zlh;\n\n        this.zoomLevelHeaders = [];\n\n        this.firstZoomDataOffset = Number.MAX_VALUE;\n        for (i = 0; i < nZooms; i++) {\n            zoomNumber = nZooms - i;\n            zlh = new ZoomLevelHeader(zoomNumber, binaryParser);\n            this.firstZoomDataOffset = Math.min(zlh.dataOffset, this.firstZoomDataOffset);\n            this.zoomLevelHeaders.push(zlh);\n        }\n\n        // Autosql\n        if (this.header.autoSqlOffset > 0) {\n            binaryParser.position = this.header.autoSqlOffset - startOffset;\n            this.autoSql = binaryParser.getString();\n        }\n\n        // Total summary\n        if (this.header.totalSummaryOffset > 0) {\n            binaryParser.position = this.header.totalSummaryOffset - startOffset;\n            this.totalSummary = new BWTotalSummary(binaryParser);\n        }\n\n        // Chrom data index\n        if (this.header.chromTreeOffset > 0) {\n            binaryParser.position = this.header.chromTreeOffset - startOffset;\n            this.chromTree = new BPTree(binaryParser, startOffset);\n        }\n        else {\n            // TODO -- this is an error, not expected\n            console.error(\"No chrom tree found in BW header\", JSON.stringify(this.header));\n        }\n\n        //Finally total data count\n        binaryParser.position = this.header.fullDataOffset - startOffset;\n        this.dataCount = binaryParser.getInt();\n    }\n\n    async loadRPTree(offset) {\n        let rpTree = this.rpTreeCache[offset];\n        //sometimes the rptree loads but has no root node if there was a network error\n        if (!rpTree && rpTree.rootNode) {\n            rpTree = new RPTree(offset, this.contentLength, this.config, this.littleEndian);\n            this.rpTreeCache[offset] = rpTree;\n            await rpTree.load()\n        }\n        return rpTree;\n    }\n}\n\n class ZoomLevelHeader{\n     constructor(index, byteBuffer) {\n        this.index = index;\n        this.reductionLevel = byteBuffer.getInt();\n        this.reserved = byteBuffer.getInt();\n        this.dataOffset = byteBuffer.getLong();\n        this.indexOffset = byteBuffer.getLong();\n    }\n }\n\n\nconst RPTREE_MAGIC_LTH = 0x2468ACE0;\nconst RPTREE_MAGIC_HTL = 0xE0AC6824;\nconst RPTREE_HEADER_SIZE = 48;\nconst RPTREE_NODE_LEAF_ITEM_SIZE = 32;   // leaf item size\nconst RPTREE_NODE_CHILD_ITEM_SIZE = 24;  // child item size\nconst BUFFER_SIZE = 512000; \n\n//***********js/bigwig/RPTree*******************\n\n\n     //  buffer\n\nclass RPTree{\n\n    constructor (fileOffset, contentLength, config, littleEndian) {\n\n        this.config = config;\n        this.filesize = contentLength;\n        this.fileOffset = fileOffset; // File offset to beginning of tree\n        this.path = config.url;\n        this.littleEndian = littleEndian;\n    }\n\n\n    async load() {\n        const rootNodeOffset = this.fileOffset + RPTREE_HEADER_SIZE,\n            bufferedReader = new BufferedReader(this.config, this.filesize, BUFFER_SIZE);\n\n        const node = await this.readNode(rootNodeOffset, bufferedReader)\n        this.rootNode = node;\n        return this;\n    }\n\n\n    async readNode(filePosition, bufferedReader) {\n\n        const dataView = await bufferedReader.dataViewForRange({start: filePosition, size: 4}, false)\n        const binaryParser = new BinaryParser(dataView, this.littleEndian);\n\n        const type = binaryParser.getByte();\n        const isLeaf = (type === 1) ? true : false;\n        const reserved = binaryParser.getByte(); //'reserved' is unused but side-effect of getByte() matters.\n        const count = binaryParser.getUShort();\n\n        filePosition += 4;\n\n        const bytesRequired = count * (isLeaf ? RPTREE_NODE_LEAF_ITEM_SIZE : RPTREE_NODE_CHILD_ITEM_SIZE);\n        const range2 = {start: filePosition, size: bytesRequired};\n\n        const dataView2 = await bufferedReader.dataViewForRange(range2, false);\n\n        const items = new Array(count),\n            binaryParser2 = new BinaryParser(dataView2);\n\n        if (isLeaf) {\n            for (let i = 0; i < count; i++) {\n                const item = {\n                    isLeaf: true,\n                    startChrom: binaryParser2.getInt(),\n                    startBase: binaryParser2.getInt(),\n                    endChrom: binaryParser2.getInt(),\n                    endBase: binaryParser2.getInt(),\n                    dataOffset: binaryParser2.getLong(),\n                    dataSize: binaryParser2.getLong()\n                };\n                items[i] = item;\n            }\n            return new RPTreeNode(items);\n        }\n        else { // non-leaf\n            for (let i = 0; i < count; i++) {\n                const item = {\n                    isLeaf: false,\n                    startChrom: binaryParser2.getInt(),\n                    startBase: binaryParser2.getInt(),\n                    endChrom: binaryParser2.getInt(),\n                    endBase: binaryParser2.getInt(),\n                    childOffset: binaryParser2.getLong()\n                };\n                items[i] = item;\n            }\n\n            return new RPTreeNode(items);\n        }\n    }\n\n\n    async findLeafItemsOverlapping(chrIdx, startBase, endBase) {\n        const leafItems = [],\n            bufferedReader = new BufferedReader(this.config, this.filesize, BUFFER_SIZE);\n\n        const findLeafItems = async (node) => {\n            if (RPTree.overlaps(node, chrIdx, startBase, endBase)) {\n                await Promise.all(node.items.map(async (item) => {\n                    if (RPTree.overlaps(item, chrIdx, startBase, endBase)) {\n                        if (item.isLeaf) {\n                            leafItems.push(item);\n                        }\n                        else {\n                            if (item.childNode) {\n                                await findLeafItems(item.childNode);\n                            }\n                            else {\n                                //any exceptions that previously called reject will now be thrown implicitly\n                                //these will bubble-up and be shown in the UI\n                                const node = await this.readNode(item.childOffset, bufferedReader);\n                                item.childNode = node;\n                                await findLeafItems(node, item.childOffset);\n                            }\n                        }\n                    }\n                }));\n            }\n            return leafItems;\n        }\n        return await findLeafItems(this.rootNode, 0);\n    }\n\n\n\n\n    /**\n     * Return true if {chrIdx:startBase-endBase} overlaps item's interval\n     * @returns {boolean}\n     */\n    static overlaps(item, chrIdx, startBase, endBase) {\n\n        //  if (chrIdx > item.endChrom || chrIdx < item.startChrom) return false;\n\n        if (!item) {\n            console.log(\"null item\");\n            return false;\n        }\n        return ((chrIdx > item.startChrom) || (chrIdx == item.startChrom && endBase >= item.startBase)) &&\n            ((chrIdx < item.endChrom) || (chrIdx == item.endChrom && startBase < item.endBase));\n    }\n}\n\n\nclass RPTreeNode{\n    constructor(items) {\n        this.items = items;\n\n        let minChromId = Number.MAX_VALUE,\n            maxChromId = 0,\n            minStartBase = Number.MAX_VALUE,\n            maxEndBase = 0,\n            i,\n            item;\n\n        for (i = 0; i < items.length; i++) {\n            item = items[i];\n            minChromId = Math.min(minChromId, item.startChrom);\n            maxChromId = Math.max(maxChromId, item.endChrom);\n            minStartBase = Math.min(minStartBase, item.startBase);\n            maxEndBase = Math.max(maxEndBase, item.endBase);\n        }\n\n        this.startChrom = minChromId;\n        this.endChrom = maxChromId;\n        this.startBase = minStartBase;\n        this.endBase = maxEndBase;\n\n    }\n}\n\n//*******************js/binary.js******************\nclass BinaryParser{\n    constructor(dataView, littleEndian) {\n\n        this.littleEndian = (littleEndian ? littleEndian : true);\n        this.position = 0;\n        this.view = dataView;\n        this.length = dataView.byteLength;\n    }\n\n    available() {\n        return this.length - this.position;\n    }\n\n    remLength() {\n        return this.length - this.position;\n    }\n\n    hasNext() {\n        return this.position < this.length - 1;\n    }\n\n    getByte() {\n        var retValue = this.view.getUint8(this.position, this.littleEndian);\n        this.position++;\n        return retValue;\n    }\n\n    getShort() {\n\n        var retValue = this.view.getInt16(this.position, this.littleEndian);\n        this.position += 2\n        return retValue;\n    }\n\n    getUShort(){\n\n        // var byte1 = this.getByte(),\n        //     byte2 = this.getByte(),\n        //     retValue = ((byte2 << 24 >>> 16) + (byte1 << 24 >>> 24));\n        //     return retValue;\n\n       //\n        var retValue = this.view.getUint16 (this.position, this.littleEndian);\n        this.position += 2\n        return retValue;\n    }\n\n\n    getInt() {\n\n        var retValue = this.view.getInt32(this.position, this.littleEndian);\n        this.position += 4;\n        return retValue;\n    }\n\n\n    getUInt() {\n        var retValue = this.view.getUint32(this.position, this.littleEndian);\n        this.position += 4;\n        return retValue;\n    }\n\n    getLong() {\n\n        // DataView doesn't support long. So we'll try manually\n\n        var b = [];\n        b[0] = this.view.getUint8(this.position);\n        b[1] = this.view.getUint8(this.position + 1);\n        b[2] = this.view.getUint8(this.position + 2);\n        b[3] = this.view.getUint8(this.position + 3);\n        b[4] = this.view.getUint8(this.position + 4);\n        b[5] = this.view.getUint8(this.position + 5);\n        b[6] = this.view.getUint8(this.position + 6);\n        b[7] = this.view.getUint8(this.position + 7);\n\n        var value = 0;\n        if (this.littleEndian) {\n            for (var i = b.length - 1; i >= 0; i--) {\n                value = (value * 256) + b[i];\n            }\n        } else {\n            for (var i = 0; i < b.length; i++) {\n                value = (value * 256) + b[i];\n            }\n        }\n\n\n        this.position += 8;\n        return value;\n    }\n\n    getString(len) {\n\n        var s = \"\";\n        var c;\n        while ((c = this.view.getUint8(this.position++)) != 0) {\n            s += String.fromCharCode(c);\n            if (len && s.length == len) break;\n        }\n        return s;\n    }\n\n    getFixedLengthString(len) {\n\n        var s = \"\";\n        var i;\n        var c;\n        for (i = 0; i < len; i++) {\n            c = this.view.getUint8(this.position++);\n            if (c > 0) {\n                s += String.fromCharCode(c);\n            }\n        }\n        return s;\n    }\n\n    getFixedLengthTrimmedString(len) {\n\n        var s = \"\";\n        var i;\n        var c;\n        for (i = 0; i < len; i++) {\n            c = this.view.getUint8(this.position++);\n            if (c > 32) {\n                s += String.fromCharCode(c);\n            }\n        }\n        return s;\n    }\n\n    getFloat() {\n\n        var retValue = this.view.getFloat32(this.position, this.littleEndian);\n        this.position += 4;\n        return retValue;\n\n\n    }\n\n    getDouble() {\n\n        var retValue = this.view.getFloat64(this.position, this.littleEndian);\n        this.position += 8;\n        return retValue;\n    }\n\n    skip(n) {\n\n        this.position += n;\n        return this.position;\n    }\n\n\n    /**\n     * Return a bgzip (bam and tabix) virtual pointer\n     * TODO -- why isn't 8th byte used ?\n     * @returns {*}\n     */\n    getVPointer() {\n\n        var position = this.position,\n            offset = (this.view.getUint8(position + 1) << 8) | (this.view.getUint8(position)),\n            byte6 = ((this.view.getUint8(position + 6) & 0xff) * 0x100000000),\n            byte5 = ((this.view.getUint8(position + 5) & 0xff) * 0x1000000),\n            byte4 = ((this.view.getUint8(position + 4) & 0xff) * 0x10000),\n            byte3 = ((this.view.getUint8(position + 3) & 0xff) * 0x100),\n            byte2 = ((this.view.getUint8(position + 2) & 0xff)),\n            block = byte6 + byte5 + byte4 + byte3 + byte2;\n        this.position += 8;\n\n        //       if (block == 0 && offset == 0) {\n        //           return null;\n        //       } else {\n        return new VPointer(block, offset);\n        //       }\n    }\n}\n\nclass VPointer{\n    constructor(block, offset) {\n        this.block = block;\n        this.offset = offset;\n    }\n\n    isLessThan(vp) {\n        return this.block < vp.block ||\n            (this.block === vp.block && this.offset < vp.offset);\n    }\n\n    isGreaterThan(vp) {\n        return this.block > vp.block ||\n            (this.block === vp.block && this.offset > vp.offset);\n    }\n\n    print() {\n        return \"\" + this.block + \":\" + this.offset;\n    }\n}\n\n\n//*******js/bigwig/bwTotalSummary.js*************\n\n\n\nclass BWTotalSummary{\n    constructor(byteBuffer) {\n\n        if (byteBuffer) {\n\n            this.basesCovered = byteBuffer.getLong();\n            this.minVal = byteBuffer.getDouble();\n            this.maxVal = byteBuffer.getDouble();\n            this.sumData = byteBuffer.getDouble();\n            this.sumSquares = byteBuffer.getDouble();\n\n            this.computeStats();\n        }\n        else {\n            this.basesCovered = 0;\n            this.minVal = 0;\n            this.maxVal = 0;\n            this.sumData = 0;\n            this.sumSquares = 0;\n            this.mean = 0;\n            this.stddev = 0;\n        }\n    }\n\n\n    computeStats() {\n        var n = this.basesCovered;\n        if (n > 0) {\n            this.mean = this.sumData / n;\n            this.stddev = Math.sqrt(this.sumSquares / (n - 1));\n\n            var min = this.minVal < 0 ? this.mean - 2 * this.stddev : 0,\n                max = this.maxVal > 0 ? this.mean + 2 * this.stddev : 0;\n\n            this.defaultRange = {\n                min: 0,\n                max: this.mean + 3 * this.stddev\n            }\n        }\n    }\n\n    updateStats(stats) {\n\n        this.basesCovered += stats.count;\n        this.sumData += stats.sumData;\n        this.sumSquares += sumSquares;\n        this.minVal = MIN(_minVal, min);\n        this.maxVal = MAX(_maxVal, max);\n\n        computeStats.call(this);\n\n    }\n\n\n}\n\n\n//***************js/bigwig/bwBPTree.js**************\n\n\nconst BPTREE_MAGIC_LTH = 0x78CA8C91;\nconst BPTREE_MAGIC_HTL = 0x918CCA78;\nconst BPTREE_HEADER_SIZE = 32;\n\n\n class BPTree{\n     constructor(binaryParser, startOffset) {\n\n        var self = this,\n            genome =  null;\n\n        this.header = {};\n        this.header.magic = binaryParser.getInt();\n        this.header.blockSize = binaryParser.getInt();\n        this.header.keySize = binaryParser.getInt();\n        this.header.valSize = binaryParser.getInt();\n        this.header.itemCount = binaryParser.getLong();\n        this.header.reserved = binaryParser.getLong();\n\n        this.dictionary = {};\n\n        // Recursively walk tree to populate dictionary\n        readTreeNode(binaryParser, -1, this.header.keySize, this.dictionary);\n\n        var itemSize = 8 + this.header.keySize;\n        var minSize = 4 + itemSize;   // Bytes for a node with 1 item\n\n        function readTreeNode(byteBuffer, offset, keySize, dictionary) {\n\n            if (offset >= 0) byteBuffer.position = offset;\n\n            var type = byteBuffer.getByte(),\n                reserved = byteBuffer.getByte(),\n                count = byteBuffer.getUShort(),\n                i,\n                key,\n                chromId,\n                chromSize,\n                childOffset,\n                bufferOffset,\n                currOffset;\n\n\n            if (type == 1) {\n\n                for (i = 0; i < count; i++) {\n\n                    key = byteBuffer.getFixedLengthTrimmedString(keySize);\n                    chromId = byteBuffer.getInt();\n                    chromSize = byteBuffer.getInt();\n\n                    if(genome) key = genome.getChromosomeName(key);  // Translate to canonical chr name\n                    dictionary[key] = chromId;\n\n                }\n            }\n            else { // non-leaf\n\n                for (i = 0; i < count; i++) {\n\n                    key = byteBuffer.getFixedLengthTrimmedString(keySize);\n                    childOffset = byteBuffer.getLong();\n                    bufferOffset = childOffset - startOffset;\n                    currOffset = byteBuffer.position;\n                    readTreeNode(byteBuffer, bufferOffset, keySize, dictionary);\n                    byteBuffer.position = currOffset;\n                }\n            }\n\n        }\n    }\n\n\n}\n\n\nexport {BWSource,BinaryParser};\n\n\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nlet parseUri_options = {\n        strictMode: false,\n        key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n        q: {\n            name: \"queryKey\",\n            parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n        },\n        parser: {\n            strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n            loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n        }\n    };\n\n\n\nclass Utils{\n\n    \n    static addAlphaToRGB(rgbString, alpha) {\n\n        if (rgbString.startsWith(\"rgb\")) {\n            return rgbString.replace(\"rgb\", \"rgba\").replace(\")\", \", \" + alpha + \")\");\n        } else {\n            console.log(rgbString + \" is not an rgb style string\");\n            return rgbString;\n        }\n\n    }\n\n    static presentAlert(track_div,error){\n        let div= $(\"<div>\").css({\"position\":\"absolute\",\"background-color\":\"white\"}).attr(\"class\",\"mlv-alert\").appendTo(track_div);\n        let div1= $(\"<div>\").css({\"display\":\"flex\",\"justify-content\":\"center\"}).appendTo(div);\n        div1.append($('<i class=\"fas fa-exclamation-circle\"></i>').css({color:\"red\",\"font-size\":\"16px\",\"text-align\":\"center\",}));\n        div.append($(\"<div>\"+error+\"</div>\").css({color:\"red\",\"font-size\":\"14px\",\"text-align\":\"center\"}));\n        let left = Math.round((track_div.width()/2)-(div.width()/2));\n        let top =Math.round((track_div.height()/2)-(div.height()/2));\n        div.css({\"left\":left+\"px\",top:top+\"px\"});\n\n\n\n    }\n\n\n   \n\n    static spinner(size) {\n\n        // spinner\n        var $container,\n            $spinner;\n\n        $spinner = $('<i class=\"fa fa-lg fa-spinner fa-spin igv-spinner\">').css({position:\"absolute\",top:\"50%\",left:\"50%\"});\n        if (size) {\n            $spinner.css(\"font-size\", size);\n        }\n\n    \n\n        return $spinner[0];\n    }\n\n    /**\n     * Find spinner\n     */\n    static getSpinnerObjectWithParentElement(parentElement) {\n        return parentElement.find(\"div.igv-spinner-container\");\n    };\n\n    /**\n     * Start the spinner for the parent element, if it has one\n     */\n    static startSpinnerAtParentElement(parentElement) {\n       parentElement.children(\".fa-spinner\").show();  \n\n    };\n\n    /**\n     * Stop the spinner for the parent element, if it has one\n     * @param parentElement\n     */\n    static stopSpinnerAtParentElement (parentElement) {\n        parentElement.children(\".fa-spinner\").hide();\n       \n\n    }\n\n    static parseUri(str) {\n\n        var o = parseUri_options,\n            m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n            uri = {},\n            i = 14;\n\n        while (i--) uri[o.key[i]] = m[i] || \"\";\n\n        uri[o.q.name] = {};\n        uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n            if ($1) uri[o.q.name][$1] = $2;\n        });\n\n        return uri;\n    }\n    \n    \n    \n  \n    static domElementRectAsString(element) {\n        return \" x \" + element.clientLeft + \" y \" + element.clientTop + \" w \" + element.clientWidth + \" h \" + element.clientHeight;\n    };\n\n    static isNumber(n) {\n\n        if (\"\" === n) {\n\n            return false\n        } else if (undefined === n) {\n\n            return false;\n        } else {\n\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n    };\n\n    static guid  () {\n        return (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n    };\n\n    // Returns a random number between min (inclusive) and max (exclusive)\n    static random(min, max) {\n        return Math.random() * (max - min) + min;\n    };\n\n    // StackOverflow: http://stackoverflow.com/a/10810674/116169\n    static numberFormatter(rawNumber) {\n\n        var dec = String(rawNumber).split(/[.,]/),\n            sep = ',',\n            decsep = '.';\n\n        return dec[0].split('').reverse().reduce(function (prev, now, i) {\n                return i % 3 === 0 ? prev + sep + now : prev + now;\n            }).split('').reverse().join('') + (dec[1] ? decsep + dec[1] : '');\n    };\n\n    static numberUnFormatter (formatedNumber) {\n\n        return formatedNumber.split(\",\").join().replace(\",\", \"\", \"g\");\n    };\n\n    /**\n     * Translate the mouse coordinates for the event to the coordinates for the given target element\n     * @param e\n     * @param target\n     * @returns {{x: number, y: number}}\n     */\n    static translateMouseCoordinates(e, target) {\n\n        var eFixed = $.event.fix(e),   // Sets pageX and pageY for browsers that don't support them\n            posx = eFixed.pageX - $(target).offset().left,\n            posy = eFixed.pageY - $(target).offset().top;\n\n        return {x: posx, y: posy}\n\n    };\n\n    /**\n     * Format markup for popover text from an array of name value pairs [{name, value}]\n     */\n    static formatPopoverText (nameValueArray) {\n\n        var markup = \"<table class=\\\"igv-popover-table\\\">\";\n\n        nameValueArray.forEach(function (nameValue) {\n\n            if (nameValue.name) {\n                //markup += \"<tr><td class=\\\"igv-popover-td\\\">\" + \"<span class=\\\"igv-popoverName\\\">\" + nameValue.name + \"</span>\" + \"<span class=\\\"igv-popoverValue\\\">\" + nameValue.value + \"</span>\" + \"</td></tr>\";\n                markup += \"<tr><td class=\\\"igv-popover-td\\\">\" + \"<div class=\\\"igv-popoverNameValue\\\">\" + \"<span class=\\\"igv-popoverName\\\">\" + nameValue.name + \"</span>\" + \"<span class=\\\"igv-popoverValue\\\">\" + nameValue.value + \"</span>\" + \"</div>\" + \"</td></tr>\";\n            }\n            else {\n                // not a name/value pair\n                markup += \"<tr><td>\" + nameValue.toString() + \"</td></tr>\";\n            }\n        });\n\n        markup += \"</table>\";\n        return markup;\n\n\n    };\n\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 200);\n        var last, deferTimer;\n\n        return function () {\n            var context = scope || this;\n\n            var now = +new Date,\n                args = arguments;\n            if (last && now < last + threshhold) {\n                // hold on to it\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        }\n    };\n\n    static splitStringRespectingQuotes(string, delim) {\n\n        var tokens = [],\n            len = string.length,\n            i,\n            n = 0,\n            quote = false,\n            c;\n\n        if (len > 0) {\n\n            tokens[n] = string.charAt(0);\n            for (i = 1; i < len; i++) {\n                c = string.charAt(i);\n                if (c === '\"') {\n                    quote = !quote;\n                }\n                else if (!quote && c === delim) {\n                    n++;\n                    tokens[n] = \"\";\n                }\n                else {\n                    tokens[n] += c;\n                }\n            }\n        }\n        return tokens;\n    };\n\n    /**\n     * Extend jQuery's ajax function to handle binary requests.   Credit to Henry Algus:\n     *\n     * http://www.henryalgus.com/reading-binary-files-using-jquery-ajax/\n     */\n   static addAjaxExtensions () {\n\n        // use this transport for \"binary\" data type\n        $.ajaxTransport(\"+binary\", function (options, originalOptions, jqXHR) {\n\n            return {\n                // create new XMLHttpRequest\n                send: function (_, callback) {\n                    // setup all variables\n                    var xhr = new XMLHttpRequest(),\n                        url = options.url,\n                        type = options.type,\n                        responseType = \"arraybuffer\",\n                        data = options.data || null;\n\n                    xhr.addEventListener('load', function () {\n                        var data = {};\n                        data[options.dataType] = xhr.response;\n                        // make callback and send data\n                        callback(xhr.status, xhr.statusText, data, xhr.getAllResponseHeaders());\n                    });\n\n                    xhr.open(type, url);\n                    xhr.responseType = responseType;\n\n                    if (options.headers) {\n                        for (var prop in options.headers) {\n                            if (options.headers.hasOwnProperty(prop)) {\n                                xhr.setRequestHeader(prop, options.headers[prop]);\n                            }\n                        }\n                    }\n\n                    // TODO -- set any other options values\n                },\n                abort: function () {\n                    jqXHR.abort();\n                }\n            };\n\n        });\n    };\n\n    /**\n     * Test if the given value is a string or number.  Not using typeof as it fails on boxed primitives.\n     *\n     * @param value\n     * @returns boolean\n     */\n    static isStringOrNumber(value) {\n        return (value.substring || value.toFixed) ? true : false\n    };\n\n    static constrainBBox($child, $parent) {\n\n        var delta,\n            topLeft,\n            bboxChild = {},\n            bboxParent = {};\n\n        bboxParent.left = bboxParent.top = 0;\n        bboxParent.right = $parent.outerWidth();\n        bboxParent.bottom = $parent.outerHeight();\n\n        topLeft = $child.offset();\n\n        bboxChild.left = topLeft.left - $parent.offset().left;\n        bboxChild.top = topLeft.top - $parent.offset().top;\n        bboxChild.right = bboxChild.left + $child.outerWidth();\n        bboxChild.bottom = bboxChild.top + $child.outerHeight();\n\n        delta = bboxChild.bottom - bboxParent.bottom;\n        if (delta > 0) {\n\n            // clamp to trackContainer bottom\n            topLeft.top -= delta;\n\n            bboxChild.top -= delta;\n            bboxChild.bottom -= delta;\n\n            delta = bboxChild.top - bboxParent.top;\n            if (delta < 0) {\n                topLeft.top -= delta;\n            }\n\n        }\n\n        return topLeft;\n\n    };\n\n    static log(message) {\n        if (igv.enableLogging && console && console.log) {\n            console.log(message);\n        }\n    };\n\n\n}\n\nexport {Utils};","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nimport {igvxhr} from \"./igvxhr.js\";\nimport {BinaryParser} from \"./bigwig.js\";\nimport {jszlib_inflate_buffer,arrayCopy} from \"./vendor/inflate.js\";\nimport {FastaSequence} from \"./feature.js\";\nimport{Zlib} from \"./vendor/zlib_and_gzip.js\";\n\n\nconst BAI_MAGIC = 21578050;\nconst TABIX_MAGIC = 21578324;\nconst MAX_HEADER_SIZE = 100000000;   // IF the header is larger than this we can't read it !\nconst B_MAX_GZIP_BLOCK_SIZE = (1 << 16);\n\n\n    /**\n     * @param indexURL\n     * @param config\n     * @param tabix\n     *\n     * @returns a Promised for the bam or tabix index.  The fulfill function takes the index as an argument.\n     */\nlet loadBamIndex = function (indexURL, config, tabix) {\n\n        return new Promise(function (fulfill, reject) {\n\n            var genome = null;\n\n            igvxhr.loadArrayBuffer(indexURL,\n                {\n                    headers: config.headers,\n                    withCredentials: config.withCredentials\n                }).then(function (arrayBuffer) {\n\n                var indices = [],\n                    magic, nbin, nintv, nref, parser,\n                    blockMin = Number.MAX_VALUE,\n                    blockMax = 0,\n                    binIndex, linearIndex, binNumber, cs, ce, b, i, ref, sequenceIndexMap;\n\n                if (!arrayBuffer) {\n                    fulfill(null);\n                    return;\n                }\n\n                if (tabix) {\n                    var inflate = new Zlib.Gunzip(new Uint8Array(arrayBuffer));\n                    arrayBuffer = inflate.decompress().buffer;               \n                }\n\n                parser = new BinaryParser(new DataView(arrayBuffer));\n\n                magic = parser.getInt();\n\n                if (magic === BAI_MAGIC || (tabix && magic === TABIX_MAGIC)) {\n\n                    nref = parser.getInt();\n\n\n                    if (tabix) {\n                        // Tabix header parameters aren't used, but they must be read to advance the pointer\n                        var format = parser.getInt();\n                        var col_seq = parser.getInt();\n                        var col_beg = parser.getInt();\n                        var col_end = parser.getInt();\n                        var meta = parser.getInt();\n                        var skip = parser.getInt();\n                        var l_nm = parser.getInt();\n\n                        sequenceIndexMap = {};\n                        for (i = 0; i < nref; i++) {\n                            var seq_name = parser.getString();\n\n                            // Translate to \"official\" chr name.\n                            if (genome) seq_name = genome.getChromosomeName(seq_name);\n\n                            sequenceIndexMap[seq_name] = i;\n                        }\n                    }\n\n                    for (ref = 0; ref < nref; ++ref) {\n\n                        binIndex = {};\n                        linearIndex = [];\n\n                        nbin = parser.getInt();\n\n                        for (b = 0; b < nbin; ++b) {\n\n                            binNumber = parser.getInt();\n\n                            if (binNumber == 37450) {\n                                // This is a psuedo bin, not used but we have to consume the bytes\n                                nchnk = parser.getInt(); // # of chunks for this bin\n                                cs = parser.getVPointer();   // unmapped beg\n                                ce = parser.getVPointer();   // unmapped end\n                                var n_maped = parser.getLong();\n                                var nUnmapped = parser.getLong();\n\n                            }\n                            else {\n                                \n                                binIndex[binNumber] = [];\n                                var nchnk = parser.getInt(); // # of chunks for this bin\n\n                                for (i = 0; i < nchnk; i++) {\n                                    cs = parser.getVPointer();\n                                    ce = parser.getVPointer();\n                                    if (cs && ce) {\n                                        if (cs.block < blockMin) {\n                                            blockMin = cs.block;    // Block containing first alignment\n                                        }\n                                        if (ce.block > blockMax) {\n                                            blockMax = ce.block;\n                                        }\n                                        binIndex[binNumber].push([cs, ce]);\n                                    }\n                                }\n                            }\n                        }\n\n\n                        nintv = parser.getInt();\n                        for (i = 0; i < nintv; i++) {\n                            cs = parser.getVPointer();\n                            linearIndex.push(cs);   // Might be null\n                        }\n\n                        if (nbin > 0) {\n                            indices[ref] = {\n                                binIndex: binIndex,\n                                linearIndex: linearIndex\n                            }\n                        }\n                    }\n\n                } else {\n                    throw new Error(indexURL + \" is not a \" + (tabix ? \"tabix\" : \"bai\") + \" file\");\n                }\n                fulfill(new BamIndex(indices, blockMin, blockMax, sequenceIndexMap, tabix));\n            }).catch(reject);\n        })\n    }\n\n\nclass BamIndex{\n    constructor (indices, blockMin,blockMax, sequenceIndexMap, tabix) {\n        this.firstAlignmentBlock = blockMin;\n        this.indices = indices;\n        this.lastAlignmentBlock = blockMax;\n        this.sequenceIndexMap = sequenceIndexMap;\n        this.tabix = tabix;\n    }\n\n    //this seems to work just as well as  blocksForRange\n    //but has not been extensively tested\n    getBlocksForRange(refId,min,max){\n        const index = this.indices[refId];\n        if (!index){\n            return [];\n        }\n        const lIndex =index.linearIndex;\n        const nintv = lIndex.length;\n        const minLin = Math.min(min >> 14, nintv - 1);\n        const  maxLin = Math.min(max >> 14, nintv - 1);\n        return [\n            {\n                minv:lIndex[minLin],\n                maxv:lIndex[maxLin],\n                bin:1\n            }\n        ];\n    }\n\n    /**\n     * Fetch blocks for a particular genomic range.  This method is public so it can be unit-tested.\n     *\n     * @param refId  the sequence dictionary index of the chromosome\n     * @param min  genomic start position\n     * @param max  genomic end position\n     * @param return an array of {minv: {filePointer, offset}, {maxv: {filePointer, offset}}\n     */\n    blocksForRange(refId, min, max) {\n\n        var bam = this,\n            ba = bam.indices[refId],\n            overlappingBins,\n            chunks,\n            nintv,\n            lowest,\n            minLin,\n            maxLin,\n            vp,\n            i\n\n        if (!ba) {\n            return [];\n        }\n        else {\n            overlappingBins = BamIndex.reg2bins(min, max);\n            chunks=[]        // List of bin #s that might overlap min, max\n           \n\n\n            overlappingBins.forEach(function (bin) {\n\n                if (ba.binIndex[bin]) {\n                    var binChunks = ba.binIndex[bin],\n                        nchnk = binChunks.length;\n\n                    for (var c = 0; c < nchnk; ++c) {\n                        var cs = binChunks[c][0];\n                        var ce = binChunks[c][1];\n                        chunks.push({minv: cs, maxv: ce, bin: bin});\n                    }\n\n                }\n            });\n\n            // Use the linear index to find the lowest chunk that could contain alignments in the region\n            nintv = ba.linearIndex.length;\n            lowest = null;\n            minLin = Math.min(min >> 14, nintv - 1), maxLin = Math.min(max >> 14, nintv - 1);\n            for (i = minLin; i <= maxLin; ++i) {\n                vp = ba.linearIndex[i];\n                if (vp) {\n                \n                    if (!lowest || vp.isLessThan(lowest)) {\n                        lowest = vp;\n                    }\n                }\n            }\n            // Prune chunks that end before the lowest chunk\n            return optimizeChunks(chunks, lowest); \n        }\n    };\n\n\n    /**\n     * Calculate the list of bins that may overlap with region [beg, end]\n     *\n     */\n    static reg2bins(beg, end) {\n        var i = 0, k, list = [];\n        if (end >= 1 << 29) {\n            end = 1 << 29;\n        }\n        --end;\n        list.push(0);\n        for (k = 1 + (beg >> 26); k <= 1 + (end >> 26); ++k) list.push(k);\n        for (k = 9 + (beg >> 23); k <= 9 + (end >> 23); ++k) list.push(k);\n        for (k = 73 + (beg >> 20); k <= 73 + (end >> 20); ++k) list.push(k);\n        for (k = 585 + (beg >> 17); k <= 585 + (end >> 17); ++k) list.push(k);\n        for (k = 4681 + (beg >> 14); k <= 4681 + (end >> 14); ++k) list.push(k);\n        return list;\n    }\n\n\n}\n\nfunction optimizeChunks(chunks, lowest) {\n\n    var mergedChunks = [],\n        lastChunk = null;\n\n    if (chunks.length === 0) return chunks;\n\n    chunks.sort(function (c0, c1) {\n        var dif = c0.minv.block - c1.minv.block;\n        if (dif != 0) {\n            return dif;\n        } else {\n            return c0.minv.offset - c1.minv.offset;\n        }\n    });\n\n    chunks.forEach(function (chunk) {\n\n        if (!lowest || chunk.maxv.isGreaterThan(lowest)) {\n            if (lastChunk === null) {\n                mergedChunks.push(chunk);\n                lastChunk = chunk;\n            } else {\n                if ((chunk.minv.block - lastChunk.maxv.block) < 65000) { // Merge chunks that are withing 65k of each other\n                    if (chunk.maxv.isGreaterThan(lastChunk.maxv)) {\n                        lastChunk.maxv = chunk.maxv;\n                    }\n                } else {\n                    mergedChunks.push(chunk);\n                    lastChunk = chunk;\n                }\n            }\n        }\n    });\n\n    return mergedChunks;\n}\n\n\n\n\nclass BGZFile{\n\n    constructor (config) {\n        this.filePosition = 0;\n        this.config = config;\n    }\n\n    nextBlock() {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n            igvxhr.loadArrayBuffer(self.path,\n                {\n                    headers: self.config.headers,\n                    range: {start: self.filePosition, size: BLOCK_HEADER_LENGTH},\n                    withCredentials: self.config.withCredentials\n\n                }).then(function (arrayBuffer) {\n\n                var ba = new Uint8Array(arrayBuffer);\n                var xlen = (ba[11] << 8) | (ba[10]);\n                var si1 = ba[12];\n                var si2 = ba[13];\n                var slen = (ba[15] << 8) | (ba[14]);\n                var bsize = (ba[17] << 8) | (ba[16]) + 1;\n\n                self.filePosition += BLOCK_HEADER_LENGTH;\n\n                igvxhr.loadArrayBuffer(self.path, {\n                    headers: self.config.headers,\n                    range: {start: self.filePosition, size: bsize},\n                    withCredentials: self.config.withCredentials\n\n                }).then(function (arrayBuffer) {\n\n                    var unc = jszlib_inflate_buffer(arrayBuffer);\n\n                    self.filePosition += (bsize + 8);  // \"8\" for CRC-32 and size of uncompressed data\n\n                    fulfill(unc);\n\n                }).catch(reject)\n            }).catch(reject);\n        })\n\n    }\n}\n\n\n\n    var BAM_MAGIC = 21840194;\n    var SECRET_DECODER = ['=', 'A', 'C', 'x', 'G', 'x', 'x', 'x', 'T', 'x', 'x', 'x', 'x', 'x', 'x', 'N'];\n    var CIGAR_DECODER = ['M', 'I', 'D', 'N', 'S', 'H', 'P', '=', 'X', '?', '?', '?', '?', '?', '?', '?'];\n    var READ_STRAND_FLAG = 0x10;\n    var MATE_STRAND_FLAG = 0x20;\n    var FIRST_OF_PAIR_FLAG = 0x40;\n    var SECOND_OF_PAIR_FLAG = 0x80;\n    var READ_UNMAPPED_FLAG = 0x4;\n    var MATE_UNMAPPED_FLAG = 0x8;\n    var READ_PAIRED_FLAG = 0x1;\n    var PROPER_PAIR_FLAG = 0x2;\n    var SECONDARY_ALIGNMNET_FLAG = 0x100;\n    var SUPPLEMENTARY_ALIGNMENT_FLAG = 0x800;\n\n\n\n\n    var NOT_PRIMARY_ALIGNMENT_FLAG = 0x100;\n    var READ_FAILS_VENDOR_QUALITY_CHECK_FLAG = 0x200;\n    var DUPLICATE_READ_FLAG = 0x400;\n    var SUPPLEMENTARY_FLAG = 0x800;\n\n    const MAX_GZIP_BLOCK_SIZE = 65536;   //  APPARENTLY.  Where is this documented???\n    const DEFAULT_SAMPLING_WINDOW_SIZE = 100;\n    const DEFAULT_SAMPLING_DEPTH = 2500;//50;\n    const MAXIMUM_SAMPLING_DEPTH = 2500;\n\n\n\nclass BamFeatureReader{\n    constructor(config){\n        this.bamPath= config.url;\n        this.baiPath = config.indexURL || this.bamPath + \".bai\"; // If there is an indexURL provided, use it!\n        this.headPath = config.headURL || this.bamPath;\n        this.alignments=[];\n        this.features=[];\n        this.alignmentBuffer=new SharedArrayBuffer(20000000);\n        this.alignments=new Int32Array(this.alignmentBuffer);\n        this.pointer=0;\n        this.config=config;\n        this.fragmentThreshold=50;\n    }\n\n    async getAlignments(chr,bpStart,bpEnd){\n        if (this.store){\n            if (chr === this.store[0] && bpStart >= this.store[1] && bpEnd <= this.store[2]){\n                return this.features;\n            }\n        }\n        \n        if (!this.index){\n            await this.readHeader();\n        }\n        this.pointer=0;\n        const chrId = this.chrToIndex[chr];\n        const chunks = this.index.blocksForRange(chrId, bpStart, bpEnd);\n\n        if (!chunks) {\n            return [];       \n        }\n        if (chunks.length === 0) {     \n            return [];\n        }\n        \n\n        await Promise.all(chunks.map(async (c)=>{\n            var fetchMin = c.minv.block,\n            fetchMax = c.maxv.block + MAX_GZIP_BLOCK_SIZE,   // Make sure we get the whole block.\n            range = {start: fetchMin, size: fetchMax - fetchMin + 1};\n\n            const compressed= await igvxhr.loadArrayBuffer(this.bamPath,\n            {\n                headers: this.config.headers,\n                range: range,\n                withCredentials: this.config.withCredentials\n            })\n            var ba = new Uint8Array(new unbgzf(compressed));\n            this.addAlignments(ba, c.minv.offset,bpStart, bpEnd, chrId);\n\n        }));\n        this.store= [chr,bpStart,bpEnd];\n        //this.calculateFragmentSize();\n        this.calculateCategories();\n        \n       \n        return this.features;\n      \n    }\n\n    setCategories(data,names){\n        this.catData=data;\n        this.catNames=names;\n    }\n\n    setFilter(arr,arr2){\n        this.filter=arr;\n        this.localFilter=arr2;\n    }\n\n    calculateFragmentSize(){\n        const bpStart=this.store[1];\n        const al = this.store[2]-this.store[1];\n        this.features=[];\n        for (let i=0;i<3;i++){\n            this.features.push(new Uint16Array(al))\n        }\n        for (let i=0;i<this.pointer;i+=4){\n            let st =  this.alignments[i]-bpStart;\n            const en = st+ this.alignments[i+1];\n            if (st<0){\n                st=0;\n            }\n            let arr= this.features[0]\n\n            if (this.alignments[i+3]>this.fragmentThreshold){\n                arr=this.features[1];\n            }\n          \n            if (en>st){\n                for (let n = st;n<en;n++){\n                    arr[n]++;\n                    this.features[2][n]++;\n                }\n\n            }\n            else{\n                for (let n = en;n<st;n++){\n                    arr[n]++;\n                    this.features[2][n]++;\n                }\n            }\n          \n        }\n        this.features.store=this.store;\n\n        \n    }\n\n\n    calculateCategories(){\n        const len =this.catNames.length;\n        const bpStart=this.store[1];\n        const al = this.store[2]-this.store[1];\n        this.features=[];\n        for (let i=0;i<len;i++){\n            this.features.push(new Uint16Array(al))\n        }\n        this.cut_window=0;\n        const t= performance.now();\n        if (this.cut_window){\n            const win= this.cut_window;\n            for (let i=0;i<this.pointer;i+=4){\n              \n                let init =  this.alignments[i]-bpStart;\n                let st = init-win;\n                const en = init+win;\n                if (st<0){\n                    st=0;\n                }\n                const id = this.alignments[i+2];\n                if (this.filter && this.filter[id]!==0 && (this.filter[id] !==this.localFilter[id])){\n                   continue;\n                }\n                const arr = this.features[this.catData[id]];\n                for (let n = st;n<en;n++){\n                    arr[n]++;\n                }\n            \n        }\n\n        }\n        else{\n       \n            for (let i=0;i<this.pointer;i+=4){\n                if (this.size_filter_on && this.alignments[i+3]>this.size_filter){\n                    continue;\n                }\n                let st =  this.alignments[i]-bpStart;\n                const en = st+ this.alignments[i+1];\n                if (st<0){\n                    st=0;\n                }\n                const id = this.alignments[i+2];\n                if (this.filter && this.filter[id]!==0 && (this.filter[id] !==this.localFilter[id])){\n                continue;\n                }\n                const arr = this.features[this.catData[id]];\n                if (en>st){\n                    for (let n = st;n<en;n++){\n                        arr[n]++;\n                    }\n\n                }\n                else{\n                    for (let n = en;n<st;n++){\n                        arr[n]++;\n                    }\n                }\n              \n        }\n        \n    }\n    this.features.store=this.store;\n\n   \n   \n\n\n    }\n\n    getIdsInRange(range){\n        const st = Math.round(range.start);\n        const en = Math.round(range.end);\n        const a = this.alignments\n        const iset = new Set();\n        for (let i=0;i<this.alignments.length;i+=3){\n            if (a[i]<st){\n                continue\n            }\n            if(a[i]>en){\n                break;\n            }\n            iset.add(a[i+2])\n\n        }\n        return iset;\n        \n    }\n\n\n\n    //alignments is an int32 array with \n    // 1-start position 2-end position 3-id 4-length of PE fragment\n    addAlignments(ba,offset,min,max,chrId){\n    \n        var blockSize,\n            blockEnd,\n            tags,\n            refID,\n            pos,\n            bmn,\n            nl,\n            flag_nc,\n            c,\n            nc,\n            lseq,\n            lengthOnRef,\n            p,\n            seqBytes;\n        let unknown=0;\n        let num=0;\n        while (true) {\n            num++\n            blockSize = readInt(ba, offset);\n            blockEnd = offset + blockSize + 4;\n\n            if (blockEnd > ba.length) {\n                return ;\n            }\n\n            \n            refID = readInt(ba, offset + 4);\n            pos = readInt(ba, offset + 8);\n           \n            if(refID < 0) {\n                return ;   // unmapped reads\n            }\n            else if (refID > chrId || pos > max) {\n                return ;    // off right edge, we're done\n            }\n            else if (refID < chrId) {\n                continue;   // to left of start, not sure this is possible\n            }\n           \n           \n            bmn = readInt(ba, offset + 12);\n         \n            nl = bmn & 0xff;\n\n            flag_nc = readInt(ba, offset + 16);\n            const flag = (flag_nc & 0xffff0000) >> 16;\n            nc = flag_nc & 0xffff;\n\n          \n            const strand = !(flag & READ_STRAND_FLAG);\n\n            lseq = readInt(ba, offset + 20);\n\n            const  fragmentLength = Math.abs(readInt(ba, offset + 32));\n          \n\n            p = offset + 36 + nl;\n\n            lengthOnRef = 0;\n          \n            for (c = 0; c < nc; ++c) {\n                var cigop = readInt(ba, p);\n                var opLen = (cigop >> 4);\n                var opLtr = CIGAR_DECODER[cigop & 0xf];\n                if (opLtr == 'M' || opLtr == 'EQ' || opLtr == 'X' || opLtr == 'D' || opLtr == 'N' || opLtr == '=')\n                    lengthOnRef += opLen;\n                \n                p += 4;\n\n                \n            }\n           \n            if (pos + lengthOnRef < min) {\n                offset = blockEnd;\n                continue;  // Record out-of-range \"to the left\", skip to next one\n\n            }\n            if (!strand){\n                pos = pos+lengthOnRef;\n                lengthOnRef=-lengthOnRef\n            }\n            this.alignments[this.pointer++]=pos;\n            this.alignments[this.pointer++] = lengthOnRef;\n            \n\n            \n            \n            \n            seqBytes = (lseq + 1) >> 1;\n            \n            p += seqBytes;\n           \n            p += lseq;\n\n\n           \n            tags = decodeTags(new Uint8Array(ba.buffer.slice(p, blockEnd)));\n            if (this.catIndex[tags.CB]===undefined){\n                unknown++;\n            }\n            this.alignments[this.pointer++]=this.catIndex[tags.CB];  // decode these on demand\n            this.alignments[this.pointer++] = Math.abs(fragmentLength);\n\n            p += blockEnd;\n\n          \n            offset = blockEnd;\n          \n        }\n     \n\n    }\n\n \n\n    async readHeader() {\n\n        var self = this;\n   \n        const index = await getIndex(this);\n\n        var len = index.firstAlignmentBlock + MAX_GZIP_BLOCK_SIZE;   // Insure we get the complete compressed block containing the header\n\n        const compressedBuffer = await igvxhr.loadArrayBuffer(self.bamPath,\n                    {\n                        headers: self.config.headers,\n\n                        range: {start: 0, size: len},\n\n                        withCredentials: self.config.withCredentials\n        });\n\n        var unc = new unbgzf(compressedBuffer, len),\n            uncba = new Uint8Array(unc),\n            magic = readInt(uncba, 0),\n            samHeaderLen = readInt(uncba, 4),\n            samHeader = '',\n            genome = null;\n\n        for (var i = 0; i < samHeaderLen; ++i) {\n            samHeader += String.fromCharCode(uncba[i + 8]);\n        }\n\n        var nRef = readInt(uncba, samHeaderLen + 8);\n        var p = samHeaderLen + 12;\n\n        self.chrToIndex = {};\n        self.indexToChr = [];\n        for (var i = 0; i < nRef; ++i) {\n            var lName = readInt(uncba, p);\n            var name = '';\n            for (var j = 0; j < lName - 1; ++j) {\n                name += String.fromCharCode(uncba[p + 4 + j]);\n            }\n            var lRef = readInt(uncba, p + lName + 4);\n            //dlog(name + ': ' + lRef);\n\n            if (genome && genome.getChromosomeName) {\n                name = genome.getChromosomeName(name);\n            }\n\n            self.chrToIndex[name] = i;\n            self.indexToChr.push(name);\n\n            p = p + 8 + lName;\n        }\n\n                  \n    }\n}\n/**\n* Class for reading a bam file\n*\n* @param config\n* @constructor\n*/\nclass BamReader{\n     constructor(config,parent) {\n\n        this.config = config;\n        this.parent=parent;\n        this.ac_class=AlignmentContainer\n        if (parent.ac_class){\n            this.ac_class= parent_class;\n        }\n\n        this.filter = config.filter || new BamFilter();\n\n        this.bamPath = config.url;\n        // Todo - deal with Picard convention.  WHY DOES THERE HAVE TO BE 2?\n        this.baiPath = config.indexURL || this.bamPath + \".bai\"; // If there is an indexURL provided, use it!\n        this.headPath = config.headURL || this.bamPath;\n\n\n        this.samplingWindowSize = config.samplingWindowSize === undefined ? DEFAULT_SAMPLING_WINDOW_SIZE : config.samplingWindowSize;\n        this.samplingDepth = config.samplingDepth === undefined ? DEFAULT_SAMPLING_DEPTH : config.samplingDepth;\n        if(this.samplingDepth > MAXIMUM_SAMPLING_DEPTH) {\n            igv.log(\"Warning: attempt to set sampling depth > maximum value of 2500\");\n            this.samplingDepth = MAXIMUM_SAMPLING_DEPTH;\n        }\n\n        if (config.viewAsPairs) {\n            this.pairsSupported = true;\n        }\n        else {\n            this.pairsSupported = config.pairsSupported === undefined ? true : config.pairsSupported;\n        }\n\n    }\n\n    readAlignments(chr, bpStart, bpEnd) {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n\n            getChrIndex(self).then(function (chrToIndex) {\n\n                var chrId = chrToIndex[chr],\n\n                    alignmentContainer = new self.ac_class(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported,self.parent);\n                    \n                if (chrId === undefined) {\n                    fulfill(alignmentContainer);\n                } else {\n\n                    getIndex(self).then(function (bamIndex) {\n\n                        var chunks = bamIndex.blocksForRange(chrId, bpStart, bpEnd),\n                            promises = [];\n\n\n                        if (!chunks) {\n                            fulfill(null);\n                            reject(\"Error reading bam index\");\n                            return;\n                        }\n                        if (chunks.length === 0) {\n                            fulfill(alignmentContainer);\n                            return;\n                        }\n\n                        chunks.forEach(function (c) {\n\n                            promises.push(new Promise(function (fulfill, reject) {\n\n                                var fetchMin = c.minv.block,\n                                    fetchMax = c.maxv.block + MAX_GZIP_BLOCK_SIZE,   // Make sure we get the whole block.\n                                    range = {start: fetchMin, size: fetchMax - fetchMin + 1};\n\n                                igvxhr.loadArrayBuffer(self.bamPath,\n                                    {\n                                        headers: self.config.headers,\n                                        range: range,\n                                        withCredentials: self.config.withCredentials\n                                    }).then(function (compressed) {\n\n                                    var ba = new Uint8Array(new unbgzf(compressed)); //new Uint8Array(igv.unbgzf(compressed)); //, c.maxv.block - c.minv.block + 1));\n                                    decodeBamRecords(ba, c.minv.offset, alignmentContainer, bpStart, bpEnd, chrId, self.filter);\n\n                                    fulfill(alignmentContainer);\n\n                                }).catch(function (obj) {\n                                    reject(obj);\n                                });\n\n                            }))\n                        });\n\n\n                        Promise.all(promises).then(function (ignored) {\n                            alignmentContainer.finish();\n                            fulfill(alignmentContainer);\n                        }).catch(function (obj) {\n                            reject(obj);\n                        });\n                    }).catch(reject);\n                }\n            }).catch(reject);\n        });\n\n\n        function decodeBamRecords(ba, offset, alignmentContainer, min, max, chrId, filter) {\n\n            var blockSize,\n                blockEnd,\n                alignment,\n                blocks,\n                refID,\n                pos,\n                bmn,\n                bin,\n                mq,\n                nl,\n                flag_nc,\n                flag,\n                nc,\n                lseq,\n                mateRefID,\n                matePos,\n                readName,\n                j,\n                p,\n                lengthOnRef,\n                cigar,\n                c,\n                cigarArray,\n                seq,\n                seqBytes;\n            //let reads =0;\n            while (true) {\n                //reads++;\n                blockSize = readInt(ba, offset);\n                blockEnd = offset + blockSize + 4;\n\n                if (blockEnd > ba.length) {\n                    return;\n                }\n\n                alignment = new BamAlignment();\n\n                refID = readInt(ba, offset + 4);\n                pos = readInt(ba, offset + 8);\n\n                if(refID < 0) {\n                    return;   // unmapped reads\n                }\n                else if (refID > chrId || pos > max) {\n                    return;    // off right edge, we're done\n                }\n                else if (refID < chrId) {\n                    continue;   // to left of start, not sure this is possible\n                }\n               \n                bmn = readInt(ba, offset + 12);\n                bin = (bmn & 0xffff0000) >> 16;\n                mq = (bmn & 0xff00) >> 8;\n                nl = bmn & 0xff;\n\n                flag_nc = readInt(ba, offset + 16);\n                flag = (flag_nc & 0xffff0000) >> 16;\n                nc = flag_nc & 0xffff;\n\n                alignment.flags = flag;\n                alignment.strand = !(flag & READ_STRAND_FLAG);\n\n                lseq = readInt(ba, offset + 20);\n\n                mateRefID = readInt(ba, offset + 24);\n                matePos = readInt(ba, offset + 28);\n                alignment.fragmentLength = readInt(ba, offset + 32);\n\n                readName = '';\n                for (j = 0; j < nl - 1; ++j) {\n                    readName += String.fromCharCode(ba[offset + 36 + j]);\n                }\n                //console.log(reads+readName);\n\n                p = offset + 36 + nl;\n\n                lengthOnRef = 0;\n                cigar = '';\n\n\n                cigarArray = [];\n                for (c = 0; c < nc; ++c) {\n                    var cigop = readInt(ba, p);\n                    var opLen = (cigop >> 4);\n                    var opLtr = CIGAR_DECODER[cigop & 0xf];\n                    if (opLtr == 'M' || opLtr == 'EQ' || opLtr == 'X' || opLtr == 'D' || opLtr == 'N' || opLtr == '=')\n                        lengthOnRef += opLen;\n                    cigar = cigar + opLen + opLtr;\n                    p += 4;\n\n                    cigarArray.push({len: opLen, ltr: opLtr});\n                }\n                alignment.cigar = cigar;\n                alignment.lengthOnRef = lengthOnRef;\n\n                if (alignment.start + alignment.lengthOnRef < min) continue;  // Record out-of-range \"to the left\", skip to next one\n\n\n                seq = '';\n                seqBytes = (lseq + 1) >> 1;\n                for (j = 0; j < seqBytes; ++j) {\n                    var sb = ba[p + j];\n                    seq += SECRET_DECODER[(sb & 0xf0) >> 4];\n                    seq += SECRET_DECODER[(sb & 0x0f)];\n                }\n                seq = seq.substring(0, lseq);  // seq might have one extra character (if lseq is an odd number)\n\n                p += seqBytes;\n                alignment.seq = seq;\n\n\n                if (lseq === 1 && String.fromCharCode(ba[p + j] + 33) === \"*\") {\n                    // TODO == how to represent this?\n                }\n                else {\n                    alignment.qual = [];\n                    for (j = 0; j < lseq; ++j) {\n                        alignment.qual.push(ba[p + j]);\n                    }\n                }\n                p += lseq;\n\n\n                alignment.start = pos;\n                alignment.mq = mq;\n                alignment.readName = readName;\n                alignment.chr = self.indexToChr[refID];\n\n                if (mateRefID >= 0) {\n                    alignment.mate = {\n                        chr: self.indexToChr[mateRefID],\n                        position: matePos,\n                        strand: !(flag & MATE_STRAND_FLAG)\n                    };\n                }\n\n\n                alignment.tagBA = new Uint8Array(ba.buffer.slice(p, blockEnd));  // decode thiese on demand\n                p += blockEnd;\n\n                if (!min || alignment.start <= max &&\n                    alignment.start + alignment.lengthOnRef >= min &&\n                    filter.pass(alignment)) {\n                    if (chrId === undefined || refID == chrId) {\n                        blocks = makeBlocks(alignment, cigarArray);\n                        alignment.blocks = blocks.blocks;\n                        alignment.insertions = blocks.insertions;\n                        alignmentContainer.push(alignment);\n                    }\n                }\n                offset = blockEnd;\n            }\n            \n            // Exits via top of loop.\n        }\n\n        /**\n         * Split the alignment record into blocks as specified in the cigarArray.  Each aligned block contains\n         * its portion of the read sequence and base quality strings.  A read sequence or base quality string\n         * of \"*\" indicates the value is not recorded.  In all other cases the length of the block sequence (block.seq)\n         * and quality string (block.qual) must == the block length.\n         *\n         * NOTE: Insertions are not yet treated // TODO\n         *\n         * @param record\n         * @param cigarArray\n         * @returns array of blocks\n         */\n        function makeBlocks(record, cigarArray) {\n\n            var blocks = [],\n                insertions,\n                seqOffset = 0,\n                pos = record.start,\n                len = cigarArray.length,\n                blockSeq,\n                blockQuals,\n                gapType,\n                minQ = 5,  //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MIN)\n                maxQ = 20; //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MAX)\n\n            for (var i = 0; i < len; i++) {\n\n                var c = cigarArray[i];\n\n                switch (c.ltr) {\n                    case 'H' :\n                        break; // ignore hard clips\n                    case 'P' :\n                        break; // ignore pads\n                    case 'S' :\n                        seqOffset += c.len;\n                        gapType = 'S';\n                        break; // soft clip read bases\n                    case 'N' :\n                        pos += c.len;\n                        gapType = 'N';\n                        break;  // reference skip\n                    case 'D' :\n                        pos += c.len;\n                        gapType = 'D';\n                        break;\n                    case 'I' :\n                        blockSeq = record.seq === \"*\" ? \"*\" : record.seq.substr(seqOffset, c.len);\n                        blockQuals = record.qual ? record.qual.slice(seqOffset, c.len) : undefined;\n                        if (insertions === undefined) insertions = [];\n                        insertions.push({start: pos, len: c.len, seq: blockSeq, qual: blockQuals});\n                        seqOffset += c.len;\n                        break;\n                    case 'M' :\n                    case 'EQ' :\n                    case '=' :\n                    case 'X' :\n\n                        blockSeq = record.seq === \"*\" ? \"*\" : record.seq.substr(seqOffset, c.len);\n                        blockQuals = record.qual ? record.qual.slice(seqOffset, c.len) : undefined;\n                        blocks.push({start: pos, len: c.len, seq: blockSeq, qual: blockQuals, gapType: gapType});\n                        seqOffset += c.len;\n                        pos += c.len;\n\n                        break;\n\n                    default :\n                        console.log(\"Error processing cigar element: \" + c.len + c.ltr);\n                }\n            }\n\n            return {blocks: blocks, insertions: insertions};\n\n        }\n    }\n\n    readHeader() {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n            getIndex(self).then(function (index) {\n\n                var len = index.firstAlignmentBlock + MAX_GZIP_BLOCK_SIZE;   // Insure we get the complete compressed block containing the header\n\n                igvxhr.loadArrayBuffer(self.bamPath,\n                    {\n                        headers: self.config.headers,\n\n                        range: {start: 0, size: len},\n\n                        withCredentials: self.config.withCredentials\n                    }).then(function (compressedBuffer) {\n\n                    var unc = new unbgzf(compressedBuffer, len),\n                        uncba = new Uint8Array(unc),\n                        magic = readInt(uncba, 0),\n                        samHeaderLen = readInt(uncba, 4),\n                        samHeader = '',\n                        genome = null;\n\n                    for (var i = 0; i < samHeaderLen; ++i) {\n                        samHeader += String.fromCharCode(uncba[i + 8]);\n                    }\n\n                    var nRef = readInt(uncba, samHeaderLen + 8);\n                    var p = samHeaderLen + 12;\n\n                    self.chrToIndex = {};\n                    self.indexToChr = [];\n                    for (var i = 0; i < nRef; ++i) {\n                        var lName = readInt(uncba, p);\n                        var name = '';\n                        for (var j = 0; j < lName - 1; ++j) {\n                            name += String.fromCharCode(uncba[p + 4 + j]);\n                        }\n                        var lRef = readInt(uncba, p + lName + 4);\n                        //dlog(name + ': ' + lRef);\n\n                        if (genome && genome.getChromosomeName) {\n                            name = genome.getChromosomeName(name);\n                        }\n\n                        self.chrToIndex[name] = i;\n                        self.indexToChr.push(name);\n\n                        p = p + 8 + lName;\n                    }\n\n                    fulfill();\n\n                }).catch(reject);\n            }).catch(reject);\n        });\n    }\n\n}\n    function getIndex(bam) {\n\n        return new Promise(function (fulfill, reject) {\n\n            if (bam.index) {\n                fulfill(bam.index);\n            }\n            else {\n                loadBamIndex(bam.baiPath, bam.config).then(function (index) {\n                    bam.index = index;\n\n                    fulfill(bam.index);\n                }).catch(reject);\n            }\n        });\n    }\n\n\n    function getChrIndex(bam) {\n\n        return new Promise(function (fulfill, reject) {\n\n            if (bam.chrToIndex) {\n                fulfill(bam.chrToIndex);\n            }\n            else {\n                bam.readHeader().then(function () {\n                    fulfill(bam.chrToIndex);\n                }).catch(reject);\n            }\n        });\n    }\n\n    function readInt(ba, offset) {\n        return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    function readShort(ba, offset) {\n        return (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n\n\n\nclass BamSource{\n    constructor(config,parent) {\n\n        this.config = config;\n        this.alignmentContainer = undefined;\n        this.maxRows = config.maxRows || 1000;\n        if (config.seq_url){\n            this.sequence_source=new FastaSequence(config.seq_url);\n        }\n        this.parent=parent;\n\n        this.pack_alignments=true;\n       \n\n        if (config.sourceType === \"ga4gh\") {\n            this.bamReader = new igv.Ga4ghAlignmentReader(config);\n        }\n        else {\n            this.bamReader = new BamReader(config,parent);\n        }\n\n       this.viewAsPairs = true;\n    };\n\n    setViewAsPairs(bool) {\n        var self = this;\n\n        if (this.viewAsPairs !== bool) {\n            this.viewAsPairs = bool;\n            // TODO -- repair alignments\n            if (this.alignmentContainer) {\n                var alignmentContainer = this.alignmentContainer,\n                    alignments;\n\n                if (bool) {\n                    alignments = pairAlignments(alignmentContainer.packedAlignmentRows);\n                }\n                else {\n                    alignments = unpairAlignments(alignmentContainer.packedAlignmentRows);\n                }\n                alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end, self.maxRows);\n\n            }\n        }\n    }\n\n    getAlignments(chr, bpStart, bpEnd) {\n\n        var self = this;\n        return new Promise(function (fulfill, reject) {\n\n            if (self.alignmentContainer && self.alignmentContainer.contains(chr, bpStart, bpEnd)) {\n                fulfill(self.alignmentContainer);\n            } else {\n\n                self.bamReader.readAlignments(chr, bpStart, bpEnd).then(function (alignmentContainer) {\n\n                    var maxRows = self.config.maxRows || 500,\n                        alignments = alignmentContainer.alignments;\n\n                    if (!self.viewAsPairs) {\n                        alignments = unpairAlignments([{alignments: alignments}]);\n                    }\n                    if (self.parent.display_alignments){\n                         alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end, maxRows);\n                    }\n                   \n\n\n                    alignmentContainer.alignments = undefined;  // Don't need to hold onto these anymore\n                    self.alignmentContainer = alignmentContainer;\n                    if (self.sequence_source){\n                         self.sequence_source.getSequence(alignmentContainer.chr, alignmentContainer.start, alignmentContainer.end).then(\n                        function (sequence) {\n\n\n                            if (sequence) {\n\n                                alignmentContainer.coverageMap.refSeq = sequence;    // TODO -- fix this\n                                alignmentContainer.sequence = sequence;           // TODO -- fix this\n\n\n                                fulfill(alignmentContainer);\n                            }\n                        }).catch(reject);\n\n                    }\n                    else{\n                        fulfill(alignmentContainer);\n                    }\n                  \n\n                }).catch(reject);\n            }\n        });\n    }\n}\n\n    function pairAlignments(rows) {\n\n        var pairCache = {},\n            result = [];\n\n        rows.forEach(function (row) {\n\n            row.alignments.forEach(function (alignment) {\n\n                var pairedAlignment;\n\n                if (canBePaired(alignment)) {\n\n                    pairedAlignment = pairCache[alignment.readName];\n                    if (pairedAlignment) {\n                        pairedAlignment.setSecondAlignment(alignment);\n                        pairCache[alignment.readName] = undefined;   // Don't need to track this anymore.\n                    }\n                    else {\n                        pairedAlignment = new igv.PairedAlignment(alignment);\n                        pairCache[alignment.readName] = pairedAlignment;\n                        result.push(pairedAlignment);\n                    }\n                }\n\n                else {\n                    result.push(alignment);\n                }\n            });\n        });\n        return result;\n    }\n\n    function unpairAlignments(rows) {\n        var result = [];\n        rows.forEach(function (row) {\n            row.alignments.forEach(function (alignment) {\n                if (alignment instanceof PairedAlignment) {\n                    if (alignment.firstAlignment) result.push(alignment.firstAlignment);  // shouldn't need the null test\n                    if (alignment.secondAlignment) result.push(alignment.secondAlignment);\n\n                }\n                else {\n                    result.push(alignment);\n                }\n            });\n        });\n        return result;\n    }\n\n    function canBePaired(alignment) {\n        return alignment.isPaired() &&\n            alignment.isMateMapped() &&\n            alignment.chr === alignment.mate.chr &&\n            (alignment.isFirstOfPair() || alignment.isSecondOfPair()) && !(alignment.isSecondary() || alignment.isSupplementary());\n    }\n\n\n    function packAlignmentRows(alignments, start, end, maxRows) {\n\n        if (!alignments) return;\n\n        alignments.sort(function (a, b) {\n            return a.start - b.start;\n        });\n\n        if (alignments.length === 0) {\n\n            return [];\n\n        } else {\n\n            var bucketList = [],\n                allocatedCount = 0,\n                lastAllocatedCount = 0,\n                nextStart = start,\n                alignmentRow,\n                index,\n                bucket,\n                alignment,\n                alignmentSpace = 4 * 2,\n                packedAlignmentRows = [],\n                bucketStart = Math.max(start, alignments[0].start);\n\n            alignments.forEach(function (alignment) {\n\n                var buckListIndex = Math.max(0, alignment.start - bucketStart);\n                if (bucketList[buckListIndex] === undefined) {\n                    bucketList[buckListIndex] = [];\n                }\n                bucketList[buckListIndex].push(alignment);\n            });\n\n\n            while (allocatedCount < alignments.length && packedAlignmentRows.length < maxRows) {\n\n                alignmentRow = new BamAlignmentRow();\n\n                while (nextStart <= end) {\n\n                    bucket = undefined;\n\n                    while (!bucket && nextStart <= end) {\n\n                        index = nextStart - bucketStart;\n                        if (bucketList[index] === undefined) {\n                            ++nextStart;                     // No alignments at this index\n                        } else {\n                            bucket = bucketList[index];\n                        }\n\n                    } // while (bucket)\n\n                    if (!bucket) {\n                        break;\n                    }\n                    alignment = bucket.pop();\n                    if (0 === bucket.length) {\n                        bucketList[index] = undefined;\n                    }\n\n                    alignmentRow.alignments.push(alignment);\n                    nextStart = alignment.start + alignment.lengthOnRef + alignmentSpace;\n                    ++allocatedCount;\n\n                } // while (nextStart)\n\n                if (alignmentRow.alignments.length > 0) {\n                    packedAlignmentRows.push(alignmentRow);\n                }\n\n                nextStart = bucketStart;\n\n                if (allocatedCount === lastAllocatedCount) break;   // Protect from infinite loops\n\n                lastAllocatedCount = allocatedCount;\n\n            } // while (allocatedCount)\n\n            return packedAlignmentRows;\n        }\n    }\n\n\n\nclass BamAlignment{\n    constructor(){\n        this.hidden = false;\n    }\n\n    isMapped() {\n        return (this.flags & READ_UNMAPPED_FLAG) == 0;\n    }\n\n    isPaired () {\n        return (this.flags & READ_PAIRED_FLAG) != 0;\n    }\n\n    isProperPair () {\n        return (this.flags & PROPER_PAIR_FLAG) != 0;\n    }\n\n    isFirstOfPair() {\n        return (this.flags & FIRST_OF_PAIR_FLAG) != 0;\n    }\n\n    isSecondOfPair() {\n        return (this.flags & SECOND_OF_PAIR_FLAG) != 0;\n    }\n\n    isSecondary() {\n        return (this.flags & SECONDARY_ALIGNMNET_FLAG) != 0;\n    }\n\n    isSupplementary() {\n        return (this.flags & SUPPLEMENTARY_ALIGNMENT_FLAG) != 0;\n    }\n\n    isFailsVendorQualityCheck() {\n        return (this.flags & READ_FAILS_VENDOR_QUALITY_CHECK_FLAG) != 0;\n    }\n\n    isDuplicate() {\n        return (this.flags & DUPLICATE_READ_FLAG) != 0;\n    }\n\n    isMateMapped() {\n        return (this.flags & MATE_UNMAPPED_FLAG) == 0;\n    }\n\n    isNegativeStrand() {\n        return (this.flags & READ_STRAND_FLAG) != 0;\n    }\n\n    isMateNegativeStrand() {\n        return (this.flags & MATE_STRAND_FLAG) != 0;\n    }\n\n    tags() {\n\n        function decodeTags(ba) {\n\n            var p = 0,\n                len = ba.length,\n                tags = {};\n\n            while (p < len) {\n                var tag = String.fromCharCode(ba[p]) + String.fromCharCode(ba[p + 1]);\n                var type = String.fromCharCode(ba[p + 2]);\n                var value;\n\n                if (type == 'A') {\n                    value = String.fromCharCode(ba[p + 3]);\n                    p += 4;\n                } else if (type === 'i' || type === 'I') {\n                    value = readInt(ba, p + 3);\n                    p += 7;\n                } else if (type === 'c' || type === 'C') {\n                    value = ba[p + 3];\n                    p += 4;\n                } else if (type === 's' || type === 'S') {\n                    value = readShort(ba, p + 3);\n                    p += 5;\n                } else if (type === 'f') {\n                    // TODO 'FIXME need floats';\n                    value = readFloat(ba, p + 3);\n                    p += 7;\n                } else if (type === 'Z') {\n                    p += 3;\n                    value = '';\n                    for (; ;) {\n                        var cc = ba[p++];\n                        if (cc === 0) {\n                            break;\n                        } else {\n                            value += String.fromCharCode(cc);\n                        }\n                    }\n                } else {\n                    //'Unknown type ' + type;\n                    value = 'Error unknown type: ' + type;\n                    tags[tag] = value;\n                    break;\n                }\n                tags[tag] = value;\n            }\n            return tags;\n        }\n\n        if (!this.tagDict) {\n            if (this.tagBA) {\n                this.tagDict = decodeTags(this.tagBA);\n                this.tagBA = undefined;\n            } else {\n                this.tagDict = {};  // Mark so we don't try again.  The record has not tags\n            }\n        }\n        return this.tagDict;\n\n    }\n\n    popupData(genomicLocation) {\n\n        // if the user clicks on a base next to an insertion, show just the\n        // inserted bases in a popup (like in desktop IGV).\n        var nameValues = [], isFirst, tagDict;\n\n        if(this.insertions) {\n            for(var i = 0; i < this.insertions.length; i += 1) {\n                var ins_start = this.insertions[i].start;\n                if(genomicLocation == ins_start || genomicLocation == ins_start - 1) {\n                    nameValues.push({name: 'Insertion', value: this.insertions[i].seq });\n                    nameValues.push({name: 'Location', value: ins_start });\n                    return nameValues;\n                }\n            }\n        }\n\n        nameValues.push({ name: 'Read Name', value: this.readName });\n\n        // Sample\n        // Read group\n        nameValues.push(\"<hr>\");\n\n        // Add 1 to genomic location to map from 0-based computer units to user-based units\n        nameValues.push({ name: 'Alignment Start', value: igv.numberFormatter(1 + this.start), borderTop: true });\n\n        nameValues.push({ name: 'Read Strand', value: (true === this.strand ? '(+)' : '(-)'), borderTop: true });\n        nameValues.push({ name: 'Cigar', value: this.cigar });\n        nameValues.push({ name: 'Mapped', value: yesNo(this.isMapped()) });\n        nameValues.push({ name: 'Mapping Quality', value: this.mq });\n        nameValues.push({ name: 'Secondary', value: yesNo(this.isSecondary()) });\n        nameValues.push({ name: 'Supplementary', value: yesNo(this.isSupplementary()) });\n        nameValues.push({ name: 'Duplicate', value: yesNo(this.isDuplicate()) });\n        nameValues.push({ name: 'Failed QC', value: yesNo(this.isFailsVendorQualityCheck()) });\n\n        if (this.isPaired()) {\n            nameValues.push(\"<hr>\");\n            nameValues.push({ name: 'First in Pair', value: !this.isSecondOfPair(), borderTop: true });\n            nameValues.push({ name: 'Mate is Mapped', value: yesNo(this.isMateMapped()) });\n            if (this.isMateMapped()) {\n                nameValues.push({ name: 'Mate Chromosome', value: this.mate.chr });\n                nameValues.push({ name: 'Mate Start', value: (this.mate.position + 1)});\n                nameValues.push({ name: 'Mate Strand', value: (true === this.mate.strand ? '(+)' : '(-)')});\n                nameValues.push({ name: 'Insert Size', value: this.fragmentLength });\n                // Mate Start\n                // Mate Strand\n                // Insert Size\n            }\n            // First in Pair\n            // Pair Orientation\n\n        }\n\n        nameValues.push(\"<hr>\");\n        tagDict = this.tags();\n        isFirst = true;\n        for (var key in tagDict) {\n\n            if (tagDict.hasOwnProperty(key)) {\n\n                if (isFirst) {\n                    nameValues.push({ name: key, value: tagDict[key], borderTop: true });\n                    isFirst = false;\n                } else {\n                    nameValues.push({ name: key, value: tagDict[key] });\n                }\n\n            }\n        }\n\n        return nameValues;\n\n\n        function yesNo(bool) {\n            return bool ? 'Yes' : 'No';\n        }\n    }\n}\n\n\n   \n\n   \n\n    function readFloat(ba, offset) {\n\n        var dataView = new DataView(ba.buffer),\n            littleEndian = true;\n\n        return dataView.getFloat32(offset, littleEndian);\n\n    }\n\n\n\n\nclass BamFilter{\n\n  constructor (options) {\n        if (!options) options = {};\n        this.vendorFailed = options.vendorFailed === undefined ? true : options.vendorFailed;\n        this.duplicates = options.duplicates === undefined ? true : options.duplicates;\n        this.secondary = options.secondary || false;\n        this.supplementary = options.supplementary || false;\n        this.mqThreshold = options.mqThreshold === undefined ? 0 : options.mqThreshold;\n    }\n\n    pass(alignment) {\n\n        if (this.vendorFailed && alignment.isFailsVendorQualityCheck()) return false;\n        if (this.duplicates && alignment.isDuplicate()) return false;\n        if (this.secondary && alignment.isSecondary()) return false;\n        if (this.supplementary && alignment.isSupplementary()) return false;\n        if (alignment.mq < this.mqThreshold) return false;\n\n        return true;\n\n\n    }\n\n}\n\n\n\n    var BLOCK_HEADER_LENGTH = 18;\n    var BLOCK_LENGTH_OFFSET = 16;  // Location in the gzip block of the total block size (actually total block size - 1)\n    var BLOCK_FOOTER_LENGTH = 8; // Number of bytes that follow the deflated data\n    var MAX_COMPRESSED_BLOCK_SIZE = 64 * 1024; // We require that a compressed block (including header and footer, be <= this)\n    var GZIP_OVERHEAD = BLOCK_HEADER_LENGTH + BLOCK_FOOTER_LENGTH + 2; // Gzip overhead is the header, the footer, and the block size (encoded as a short).\n    var GZIP_ID1 = 31;   // Magic number\n    var GZIP_ID2 = 139;  // Magic number\n    var GZIP_FLG = 4; // FEXTRA flag means there are optional fields\n\n\n    // Uncompress data,  assumed to be series of bgzipped blocks\n    // Code is based heavily on bam.js, part of the Dalliance Genome Explorer,  (c) Thomas Down 2006-2001.\nclass unbgzf{\n    constructor(data, lim) {\n        for (let a in data){\n           console.log(a);\n         }\n        var oBlockList = [],\n            ptr = [0],\n            totalSize = 0;\n\n        lim = lim || data.byteLength - 18;\n\n        while (ptr[0] < lim) {\n\n            var ba = new Uint8Array(data, ptr[0], 18);\n\n            var xlen = (ba[11] << 8) | (ba[10]);\n            var si1 = ba[12];\n            var si2 = ba[13];\n            var slen = (ba[15] << 8) | (ba[14]);\n            var bsize = (ba[17] << 8) | (ba[16]) + 1;\n\n            var start = 12 + xlen + ptr[0];    // Start of CDATA\n            var length = data.byteLength - start;\n\n            if (length < (bsize + 8)) break;\n\n            var unc = jszlib_inflate_buffer(data, start, length, ptr);\n\n            ptr[0] += 8;    // Skipping CRC-32 and size of uncompressed data\n\n            totalSize += unc.byteLength;\n            oBlockList.push(unc);\n        }\n\n        // Concatenate decompressed blocks\n        if (oBlockList.length == 1) {\n            return oBlockList[0];\n        } else {\n            var out = new Uint8Array(totalSize);\n            var cursor = 0;\n            for (var i = 0; i < oBlockList.length; ++i) {\n                var b = new Uint8Array(oBlockList[i]);\n                arrayCopy(b, 0, out, cursor, b.length);\n                cursor += b.length;\n            }\n            return out.buffer;\n        }\n    }\n}\n\n\n\nclass AlignmentContainer{\n    constructor(chr, start, end, samplingWindowSize, samplingDepth, pairsSupported,parent) {\n        this.parent=parent;\n        this.chr = chr;\n        this.start = start;\n        this.end = end;\n        this.length = (end - start);\n        if (!this.parent.cm_class){\n            this.coverageMap= new CoverageMap(chr,start,end,parent)\n        }\n        else{\n            this.coverageMap= new this.parent.cm_class(chr,start,end,parent);\n        }\n\n       \n        this.alignments = [];\n        this.raw_alignments=[];\n        this.downsampledIntervals = [];\n\n        this.samplingWindowSize = samplingWindowSize === undefined ? 100 : samplingWindowSize;\n        this.samplingDepth = samplingDepth === undefined ? 50 : samplingDepth;\n\n        this.pairsSupported = pairsSupported;\n        this.paired = false;  // false until proven otherwise\n        this.pairsCache = {};  // working cache of paired alignments by read name\n\n        this.downsampledReads = new Set();\n\n        this.currentBucket = new DownsampleBucket(this.start, this.start + this.samplingWindowSize, this);\n\n        this.filter = function filter(alignment) {         // TODO -- pass this in\n            return alignment.isMapped() && !alignment.isFailsVendorQualityCheck();\n        }\n\n    }\n\n    push(alignment) {\n\n        if (this.filter(alignment) === false) return;\n        if (alignment.tagBA){\n            alignment.tagBA=decodeTags(alignment.tagBA);\n        }\n        if (this.parent.keep_raw_alignments){\n            this.raw_alignments.push(alignment);\n        }\n\n        this.coverageMap.incCounts(alignment);\n        if (!this.parent.display_alignments){\n            return;\n        }\n\n         // Count coverage before any downsampling\n\n        if (this.pairsSupported && this.downsampledReads.has(alignment.readName)) {\n            return;   // Mate already downsampled -- pairs are treated as a single alignment for downsampling\n        }\n\n        if (alignment.start >= this.currentBucket.end) {\n            finishBucket.call(this);\n            this.currentBucket = new DownsampleBucket(alignment.start, alignment.start + this.samplingWindowSize, this);\n        }\n\n        this.currentBucket.addAlignment(alignment);\n\n    }\n\n    forEach(callback) {\n        this.alignments.forEach(callback);\n    }\n\n    finish() {\n\n        if (this.currentBucket !== undefined) {\n            finishBucket.call(this);\n        }\n\n        // Need to remove partial pairs whose mate was downsampled\n        if(this.pairsSupported) {\n            var tmp = [], ds = this.downsampledReads;\n\n            this.alignments.forEach(function (a) {\n                if (!ds.has(a.readName)) {\n                    tmp.push(a);\n                }\n            })\n            this.alignments = tmp;\n        }\n\n        this.alignments.sort(function (a, b) {\n            return a.start - b.start\n        });\n\n        this.pairsCache = undefined;\n        this.downsampledReads = undefined;\n    }\n\n    contains(chr, start, end) {\n        return this.chr == chr &&\n            this.start <= start &&\n            this.end >= end;\n    }\n\n    hasDownsampledIntervals() {\n        return this.downsampledIntervals && this.downsampledIntervals.length > 0;\n    }\n}\n\n    function finishBucket() {\n        this.alignments = this.alignments.concat(this.currentBucket.alignments);\n        if (this.currentBucket.downsampledCount > 0) {\n            this.downsampledIntervals.push(new DownsampledInterval(\n                this.currentBucket.start,\n                this.currentBucket.end,\n                this.currentBucket.downsampledCount));\n        }\n        this.paired = this.paired || this.currentBucket.paired;\n    }\n\n\n   \n    \n\n\n\nclass DownsampleBucket{\n    constructor(start, end, alignmentContainer) {\n\n        this.start = start;\n        this.end = end;\n        this.alignments = [];\n        this.downsampledCount = 0;\n        this.samplingDepth = alignmentContainer.samplingDepth;\n        this.pairsSupported = alignmentContainer.pairsSupported;\n        this.downsampledReads = alignmentContainer.downsampledReads;\n        this.pairsCache = alignmentContainer.pairsCache;\n    }\n\n    addAlignment(alignment) {\n\n        var samplingProb, idx, replacedAlignment, pairedAlignment;\n\n        if (this.alignments.length < this.samplingDepth) {\n\n            if (this.pairsSupported && canBePaired(alignment)) {\n                pairedAlignment = this.pairsCache[alignment.readName];\n                if (pairedAlignment) {\n                    //Not subject to downsampling, just update the existing alignment\n                    pairedAlignment.setSecondAlignment(alignment);\n                    this.pairsCache[alignment.readName] = undefined;   // Don't need to track this anymore. NOTE: Don't \"delete\", causes runtime performance issues\n                }\n                else {\n                    // First alignment in a pair\n                    pairedAlignment = new PairedAlignment(alignment);\n                    this.paired = true;\n                    this.pairsCache[alignment.readName] = pairedAlignment;\n                    this.alignments.push(pairedAlignment);\n                }\n            }\n            else {\n                this.alignments.push(alignment);\n            }\n\n        } else {\n\n            samplingProb = this.samplingDepth / (this.samplingDepth + this.downsampledCount + 1);\n\n            if (Math.random() < samplingProb) {\n\n                idx = Math.floor(Math.random() * (this.alignments.length - 1));\n                replacedAlignment = this.alignments[idx];   // To be replaced\n\n                if (this.pairsSupported && canBePaired(alignment)) {\n\n                    if(this.pairsCache[replacedAlignment.readName] !== undefined) {\n                        this.pairsCache[replacedAlignment.readName] = undefined;\n                    }\n\n                    pairedAlignment = new PairedAlignment(alignment);\n                    this.paired = true;\n                    this.pairsCache[alignment.readName] = pairedAlignment;\n                    this.alignments[idx] = pairedAlignment;\n\n                }\n                else {\n                    this.alignments[idx] = alignment;\n                }\n                this.downsampledReads.add(replacedAlignment.readName);\n\n            }\n            else {\n                this.downsampledReads.add(alignment.readName);\n            }\n\n            this.downsampledCount++;\n        }\n\n    }\n}\n\n\n    // TODO -- refactor this to use an object, rather than an array,  if end-start is > some threshold\nclass CoverageMap{\n    constructor(chr, start, end,parent) {\n\n        this.chr = chr;\n        this.bpStart = start;\n        this.length = (end - start);\n        this.parent=parent;\n        this.coverage = new Array(this.length);\n\n        this.maximum = 0;\n\n       \n    }\n\n    incCounts(alignment) {\n\n        var self = this;\n\n        if (alignment.blocks === undefined) {\n\n            incBlockCount(alignment);\n        }\n        else {\n            alignment.blocks.forEach(function (block) {\n                incBlockCount(block);\n            });\n        }\n\n        function incBlockCount(block) {\n\n            var key,\n                base,\n                i,\n                j,\n                q;\n\n            for (i = block.start - self.bpStart, j = 0; j < block.len; i++, j++) {\n\n                if (!self.coverage[i]) {\n                    self.coverage[i] = new Coverage();\n                }\n\n                base = block.seq.charAt(j);\n                key = (alignment.strand) ? \"pos\" + base : \"neg\" + base;\n                q = block.qual[j];\n\n                self.coverage[i][key] += 1;\n                self.coverage[i][\"qual\" + base] += q;\n\n                self.coverage[i].total += 1;\n                self.coverage[i].qual += q;\n\n                self.maximum = Math.max(self.coverage[i].total, self.maximum);\n\n            }\n        }\n    }\n}\n\nCoverageMap.threshold = 0.2;\nCoverageMap.qualityWeight = true;\n\nclass Coverage{\n    constructor() {\n        this.posA = 0;\n        this.negA = 0;\n\n        this.posT = 0;\n        this.negT = 0;\n\n        this.posC = 0;\n        this.negC = 0;\n        this.posG = 0;\n\n        this.negG = 0;\n\n        this.posN = 0;\n        this.negN = 0;\n\n        this.pos = 0;\n        this.neg = 0;\n\n        this.qualA = 0;\n        this.qualT = 0;\n        this.qualC = 0;\n        this.qualG = 0;\n        this.qualN = 0;\n\n        this.qual = 0;\n\n        this.total = 0;\n    }\n\n    isMismatch(refBase) {\n\n        var myself = this,\n            mismatchQualitySum,\n            threshold = CoverageMap.threshold * ((CoverageMap.qualityWeight && this.qual) ? this.qual : this.total);\n\n        mismatchQualitySum = 0;\n        [\"A\", \"T\", \"C\", \"G\"].forEach(function (base) {\n\n            if (base !== refBase) {\n                mismatchQualitySum += ((CoverageMap.qualityWeight && myself.qual) ? myself[\"qual\" + base] : (myself[\"pos\" + base] + myself[\"neg\" + base]));\n            }\n        });\n\n        return mismatchQualitySum >= threshold;\n\n    }\n}\n\nclass DownsampledInterval{\n    constructor(start, end, counts) {\n        this.start = start;\n        this.end = end;\n        this.counts = counts;\n    }\n\n    popupData(genomicLocation) {\n        return [\n            {name: \"start\", value: this.start + 1},\n            {name: \"end\", value: this.end},\n            {name: \"# downsampled:\", value: this.counts}]\n    }\n}\n\n\nclass PairedAlignment{\n    constructor(firstAlignment) {\n\n        this.firstAlignment = firstAlignment;\n        this.chr = firstAlignment.chr;\n        this.readName = firstAlignment.readName;\n\n        if (firstAlignment.start < firstAlignment.mate.position) {\n            this.start = firstAlignment.start;\n            this.end = Math.max(firstAlignment.mate.position, firstAlignment.start + firstAlignment.lengthOnRef);  // Approximate\n            this.connectingStart = firstAlignment.start + firstAlignment.lengthOnRef;\n            this.connectingEnd = firstAlignment.mate.position;\n        }\n        else {\n            this.start = firstAlignment.mate.position;\n            this.end = firstAlignment.start + firstAlignment.lengthOnRef;\n            this.connectingStart = firstAlignment.mate.position;\n            this.connectingEnd = firstAlignment.start;\n        }\n        this.lengthOnRef = this.end - this.start;\n\n    }\n\n    setSecondAlignment(alignment) {\n\n        // TODO -- check the chrs are equal,  error otherwise\n        this.secondAlignment = alignment;\n\n        if (alignment.start > this.firstAlignment.start) {\n            this.end = alignment.start + alignment.lengthOnRef;\n            this.connectingEnd = alignment.start;\n        }\n        else {\n            this.start = alignment.start;\n            this.connectingStart = alignment.start + alignment.lengthOnRef;\n        }\n        this.lengthOnRef = this.end - this.start;\n\n\n    }\n\n    popupData(genomicLocation) {\n\n        var nameValues = [];\n\n        nameValues = nameValues.concat(this.firstAlignment.popupData(genomicLocation));\n\n        if (this.secondAlignment) {\n            nameValues.push(\"-------------------------------\");\n            nameValues = nameValues.concat(this.secondAlignment.popupData(genomicLocation));\n        }\n        return nameValues;\n    }\n\n    isPaired () {\n        return true; // By definition\n    }\n\n    firstOfPairStrand () {\n        if (this.firstAlignment.isFirstOfPair()) {\n            return this.firstAlignment.strand;\n        }\n        else if (this.secondAlignment) {\n            return this.secondAlignment.strand;\n        }\n        else {\n            return this.firstAlignment.strand;          // This assumes inward pointing pairs\n        }\n    }\n\n}\n\nclass BamAlignmentRow {\n    constructor(){\n        this.alignments = [];\n        this.score = undefined;\n    }\n\n    findCenterAlignment(bpStart, bpEnd) {\n\n        var centerAlignment = undefined;\n\n        // find single alignment that overlaps sort location\n        this.alignments.forEach(function(a){\n\n            if (undefined === centerAlignment) {\n\n                if ((a.start + a.lengthOnRef) < bpStart || a.start > bpEnd) {\n                    // do nothing\n                } else {\n                    centerAlignment = a;\n                }\n\n            }\n\n        });\n\n        return centerAlignment;\n    }\n\n    updateScore(genomicLocation, genomicInterval, sortOption) {\n\n        this.score = this.caculateScore(genomicLocation, (1 + genomicLocation), genomicInterval, sortOption);\n\n    };\n\n    caculateScore(bpStart, bpEnd, genomicInterval, sortOption) {\n\n        var baseScore,\n            alignment;\n\n        alignment = this.findCenterAlignment(bpStart, bpEnd);\n        if (undefined === alignment) {\n            return Number.MAX_VALUE;\n        }\n\n        if (\"NUCLEOTIDE\" === sortOption.sort) {\n\n            baseScore = undefined;\n\n            alignment.blocks.forEach(function (block) {\n\n                var sequence = genomicInterval.sequence,\n                    coverageMap = genomicInterval.coverageMap,\n                    reference,\n                    base,\n                    coverage,\n                    count,\n                    phred;\n\n                if (\"*\" !== block.seq) {\n\n                    for (var i = 0, indexReferenceSequence = block.start - genomicInterval.start, bpBlockSequence = block.start, lengthBlockSequence = block.seq.length;\n                         i < lengthBlockSequence;\n                         i++, indexReferenceSequence++, bpBlockSequence++) {\n\n                        if (bpStart === bpBlockSequence) {\n\n                            reference = sequence.charAt(indexReferenceSequence);\n                            base = block.seq.charAt(i);\n\n                            if (base === \"=\") {\n                                base = reference;\n                            }\n\n                            if (base === 'N') {\n                                baseScore = 2;\n                            }\n                            else if (base === reference) {\n                                baseScore = 3;\n                            }\n                            else if (base === \"X\" || base !== reference){\n\n                                coverage = coverageMap.coverage[ (bpBlockSequence - coverageMap.bpStart) ];\n                                count = coverage[ \"pos\" + base ] + coverage[ \"neg\" + base ];\n                                phred = (coverage.qual) ? coverage.qual : 0;\n                                baseScore = -(count + (phred / 1000.0));\n                            } else {\n                                console.log(\"BamAlignmentRow.caculateScore - huh?\");\n                            }\n\n                        } // bpStart === bpBlockSequence\n\n                    } // block.seq.length\n\n                }\n                else {\n                    baseScore = 3;\n                }\n\n            });\n\n            return (undefined === baseScore) ? Number.MAX_VALUE : baseScore;\n        }\n        else if (\"STRAND\" === sortOption.sort) {\n\n            return alignment.strand ? 1 : -1;\n        }\n        else if (\"START\" === sortOption.sort) {\n\n            return alignment.start;\n        }\n\n        return Number.MAX_VALUE;\n\n    }\n}\n\nlet bgzBlockSize =function(data) {\n    const ba = new Uint8Array(data);\n    const bsize = (ba[17] << 8) | (ba[16]) + 1;\n    return bsize;\n}\n\n\nfunction decodeTags(ba) {\n\n            var p = 0,\n                len = ba.length,\n                tags = {};\n\n            while (p < len) {\n                var tag = String.fromCharCode(ba[p]) + String.fromCharCode(ba[p + 1]);\n                var type = String.fromCharCode(ba[p + 2]);\n                var value;\n\n                if (type == 'A') {\n                    value = String.fromCharCode(ba[p + 3]);\n                    p += 4;\n                } else if (type === 'i' || type === 'I') {\n                    value = readInt(ba, p + 3);\n                    p += 7;\n                } else if (type === 'c' || type === 'C') {\n                    value = ba[p + 3];\n                    p += 4;\n                } else if (type === 's' || type === 'S') {\n                    value = readShort(ba, p + 3);\n                    p += 5;\n                } else if (type === 'f') {\n                    // TODO 'FIXME need floats';\n                    value = readFloat(ba, p + 3);\n                    p += 7;\n                } else if (type === 'Z') {\n                    p += 3;\n                    value = '';\n                    for (; ;) {\n                        var cc = ba[p++];\n                        if (cc === 0) {\n                            break;\n                        } else {\n                            value += String.fromCharCode(cc);\n                        }\n                    }\n                } else {\n                    //'Unknown type ' + type;\n                    value = 'Error unknown type: ' + type;\n                    tags[tag] = value;\n                    break;\n                }\n                tags[tag] = value;\n            }\n            return tags;\n        }\n\nexport {loadBamIndex,BamReader,BamSource,BamFilter,BamAlignment,AlignmentContainer,PairedAlignment,bgzBlockSize,CoverageMap,Coverage,BamFeatureReader};","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nimport {Utils} from \"./utils.js\";\nimport {igvxhr,unbgzf} from \"./igvxhr.js\";\nimport {loadBamIndex} from \"./bam.js\";\nimport {BWSource} from \"./bigwig.js\";\nimport { getProjectURL } from \"../dataloaders/DataLoaderUtil\";\n\nconst MAX_GZIP_BLOCK_SIZE = (1 << 16);\n\n    /**\n     * feature source for \"bed like\" files (tab delimited files with 1 feature per line: bed, gff, vcf, etc)\n     *\n     * @param config\n     * @constructor\n     */\nclass FeatureSource{\n    constructor(config) {\n        this.config = config || {};\n    }\n\n\n    getFileHeader() {\n        this.is_indexed=true;  \n        return new Promise(function (fulfill, reject) {\n            fulfill();        \n        });\n    }   \n\n\n    getFeatures(chr,start,end,force,data){\n      \n        //no need to get header\n        if (this.is_indexed){\n            return this._getFeatures(chr,start,end,force,data);\n        }\n        //get headers/index then get features\n        var self = this;\n        return new Promise(function(fulfill,reject){\n            self.getFileHeader().then(function(){\n                self._getFeatures(chr,start,end,force,data).then(function(features){\n                    fulfill(features);\n                }).catch(reject)\n            }).catch(reject);\n        });\n        \n    }\n\n    /**\n     * Required function fo all data source objects.  Fetches features for the\n     * range requested and passes them on to the success function.  Usually this is\n     * a function that renders the features on the canvas\n     *\n     * @param chr\n     * @param bpStart\n     * @param bpEnd\n     */\n    _getFeatures(chr, bpStart, bpEnd,force,data) {\n        if (bpStart===0){\n            bpStart=1;\n        }\n        var self = this;\n        self.time=Date.now();\n        return new Promise(function (fulfill, reject) {\n            if (self.featureCache && chr !== self.featureCache.range.chr){\n                self.featureCache=null;\n            }\n            var genomicInterval = new GenomicInterval(chr, bpStart, bpEnd),\n                featureCache = self.featureCache,\n                maxRows = self.config.maxRows || 500;\n            let ranges_to_get=false;\n            if (!featureCache){\n                ranges_to_get={all:[bpStart,bpEnd]};\n            }\n            else{\n                if (featureCache.range !== undefined){\n                    ranges_to_get=featureCache.range.rangesToGet(genomicInterval)\n                }\n            }\n            if (!ranges_to_get) {\n                fulfill(self.featureCache.queryFeatures(chr, bpStart, bpEnd));\n            }\n            else{\n                let promises=[];\n                let p_types=[];\n                for (let type in ranges_to_get){\n                    let range= ranges_to_get[type];\n                    promises.push(self.retrieveFeatures(chr, range[0], range[1],force,data));\n                    p_types.push([type,range]);\n                }\n                Promise.all(promises).then(\n                    function (all_features) {\n                        let existing_features=[];\n                        if (self.featureCache){\n                            existing_features=self.featureCache.allFeatures();//featureCache.allFeatures(chr,self.featureCache.range.start,self.featureCache.range.end);\n                        }\n                        let index=0;\n                        for (let featureList of all_features){\n                            if (featureList === null){\n                                featureList=[];\n                            }                        \n                            if (p_types[index][0]===\"left\"){\n                                let end = p_types[index][1][1]; \n                                //remove any already retrieved  \n                                let splice=0;\n                                for (let n=featureList.length-1;n>=0;n--){\n                                    if (featureList[n].end>= end){\n                                        featureList[n].remove=true;\n                                        splice++;\n                                    }\n                                    \n                                }\n                                if (splice!==0){\n                                    featureList = featureList.filter(x=>!x.remove)\n                                }\n\n                            }\n                            if (p_types[index][0]===\"right\"){\n                                let start=p_types[index][1][0];\n                                //remove any already retrieved\n                                let i=0\n                                for (i=0;i<featureList.length;i++){\n                                    if (featureList[i].start> start){\n                                        break;\n                                    }\n                                }\n                                if (i!==0){\n                                    featureList.splice(0,i)\n                                }\n                            }\n                            index++;\n                            existing_features=existing_features.concat(featureList);\n                        }\n                        let gi = self.featureCache?self.featureCache.range:genomicInterval;\n                        self.featureCache = new FeatureCache(existing_features, gi);\n                        FeatureSource.packFeatures(existing_features, maxRows); \n                        fulfill(self.featureCache.queryFeatures(chr, bpStart, bpEnd));\n                }).catch(function(error){\n                    reject(error);\n                });\n            }\n        });\n    }\n\n\n\n\n    static packFeatures(features, maxRows) {\n\n        if (features == null || features.length === 0) {\n            return;\n        }\n\n        // Segregate by chromosome\n\n        var chrFeatureMap = {},\n            chrs = [];\n        features.forEach(function (feature) {\n\n            var chr = feature.chr,\n                flist = chrFeatureMap[chr];\n\n            if (!flist) {\n                flist = [];\n                chrFeatureMap[chr] = flist;\n                chrs.push(chr);\n            }\n\n            flist.push(feature);\n        });\n\n        // Loop through chrosomosomes and pack features;\n\n        chrs.forEach(function (chr) {\n\n            pack(chrFeatureMap[chr], maxRows);\n        });\n\n\n        // Assigns a row # to each feature.  If the feature does not fit in any row and #rows == maxRows no\n        // row number is assigned.\n        function pack(featureList, maxRows) {\n\n            var rows = [];\n\n            featureList.sort(function (a, b) {\n                return a.start - b.start;\n            })\n\n\n            rows.push(-1000);\n            featureList.forEach(function (feature) {\n\n                var i,\n                    r,\n                    len = Math.min(rows.length, maxRows),\n                    start = feature.start;\n\n                for (r = 0; r < len; r++) {\n                    if (start >= rows[r]) {\n                        feature.row = r;\n                        rows[r] = feature.end;\n                        return;\n                    }\n                }\n                feature.row = r;\n                rows[r] = feature.end;\n\n\n            });\n        }\n    }\n\n}\n\nclass TabixBedFeatureSource extends FeatureSource{\n    constructor(config,decode_function){\n        super(config);\n        this.reader = new FeatureFileReader(config,decode_function);\n    }\n\n    retrieveFeatures(chr,start,end){\n        console.log(\"getting features\",chr,start,end);\n        return this.reader.readFeatures(chr,start,end);\n    }\n\n    getFileHeader() {\n        var self = this;\n        return new Promise(function (fulfill, reject) {\n            self.reader.readHeader().then(function () {\n                self.is_indexed=true;  \n                fulfill();\n             }).catch(reject);\n                \n        });\n    }   \n}\n\nclass BigBedFeatureSource extends FeatureSource{\n    constructor(config,decode_function){\n\t\tconfig.sourceType=\"gtex\";\n\t\tsuper(config);\n\t\tthis.header=true;\n\t\tthis.feature_source=new BWSource(config,decode_function);\n\t}\n\n\tretrieveFeatures(chr,bpStart,bpEnd,force,data){\n\t\treturn this.feature_source.getFeatures(chr,bpStart,bpEnd,false,data);     \t\n\t}\n}\n\n//********js/FeatureFileReader.js*****\n\n\n\nconst F_MAX_GZIP_BLOCK_SIZE = (1 << 16);\n\n    /**\n     * Reader for \"bed like\" files (tab delimited files with 1 feature per line: bed, gff, vcf, etc)\n     *\n     * @param config\n     * @constructor\n     */\nclass FeatureFileReader{\n    constructor(config,dec_function) {\n\n        this.config = config || {};\n\n        if (config.localFile) {\n            this.localFile = config.localFile;\n            this.filename = config.localFile.name;\n        }\n        else {\n            //this should be tested in any build configs not used by Peter...\n            //probably will change how we do this at some point\n            this.url = getProjectURL(config.url, false);\n            this.indexURL = config.indexURL;\n            this.headURL = config.headURL || this.filename;\n\n            var uriParts = Utils.parseUri(config.url);\n            this.filename = uriParts.file;\n            this.path = uriParts.path;\n        }\n\n        this.format = config.format;\n\n        this.parser = this.getParser(this.format, dec_function);\n    };\n\n\n    getParser(format, decode) {\n        switch (format) {\n            case \"vcf\":\n                return new VcfParser();\n            case \"seg\" :\n                return new SegParser();\n            default:\n                return new FeatureParser(format, decode, this.config);\n        }\n\n    }\n\n    // seg files don't have an index\n    isIndexable() {\n        var configIndexURL = this.config.indexURL,\n            type = this.type,\n            configIndexed = this.config.indexed;\n\n        return configIndexURL || (type != \"wig\" && configIndexed != false);\n    }\n\n\n    /**\n     * Return a Promise for the async loaded index\n     */\n    loadIndex() {\n        var idxFile = this.indexURL;\n        if (this.filename.endsWith(\".gz\")) {\n            if (!idxFile) idxFile = this.url + \".tbi\";\n            // idxFile = getProjectURL(idxFile);\n            return loadBamIndex(idxFile, this.config, true);\n        }\n        else {\n            if (!idxFile) idxFile = this.url + \".idx\";\n            return loadTribbleIndex(idxFile, this.config);\n        }\n    }\n\n    loadFeaturesNoIndex() {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n            var parser = self.parser,\n                options = {\n                    headers: self.config.headers,           // http headers, not file header\n                    withCredentials: self.config.withCredentials\n                };\n\n            if (self.localFile) {\n                igvxhr.loadStringFromFile(self.localFile, options).then(parseData).catch(reject);\n            }\n            else {\n                igvxhr.loadString(self.url, options).then(parseData).catch(reject);\n            }\n\n\n            function parseData(data) {\n                self.header = parser.parseHeader(data);\n                if (self.header instanceof String && self.header.startsWith(\"##gff-version 3\")) {\n                    self.format = 'gff3';\n                }\n                fulfill(parser.parseFeatures(data));   // <= PARSING DONE HERE\n            };\n        });\n    }\n\n \n\n    loadFeaturesWithIndex(chr, start, end) {\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n            var blocks,\n                index = self.index,\n                tabix = index && index.tabix,\n                refId = tabix ? index.sequenceIndexMap[chr] : chr,\n                promises = [];\n\n            //blocks = index.getBlocksForRange(refId, start, end);\n            blocks= index.blocksForRange(refId, start, end);\n\n            if (!blocks || blocks.length === 0) {\n                fulfill(null);       // TODO -- is this correct?  Should it return an empty array?\n            }\n            else {\n                blocks.forEach(function (block) {\n                    if (!block){\n                        return;\n                    }\n\n                    promises.push(new Promise(function (fulfill, reject) {\n                        var startPos = block.minv.block,\n                            startOffset = block.minv.offset,\n                            endPos = block.maxv.block + (index.tabix ? F_MAX_GZIP_BLOCK_SIZE : 0),\n                            options = {\n                                headers: self.config.headers,           // http headers, not file header\n                                range: {start: startPos, size: endPos - startPos + 1},\n                                withCredentials: self.config.withCredentials\n                            },\n                            success;\n\n                        success = function (data) {\n                           \n\n                            var inflated, slicedData;\n\n                            if (index.tabix) {\n\n                                inflated = igvxhr.arrayBufferToString(unbgzf(data));\n                                // need to decompress data\n                            }\n                            else {\n                                inflated = data;\n                            }\n                           \n\n                            slicedData = startOffset ? inflated.slice(startOffset) : inflated;\n                            var f = self.parser.parseFeatures(slicedData,chr,start,end);\n                            fulfill(f);\n                        };\n\n\n                        // Async load\n                        if (self.localFile) {\n                            igvxhr.loadStringFromFile(self.localFile, options).then(success).catch(reject);\n                        }\n                        else {\n                            if (index.tabix) {\n                            \n                                igvxhr.loadArrayBuffer(self.url, options).then(success).catch(reject);\n                            }\n                            else {\n                                igvxhr.loadString(self.url, options).then(success).catch(reject);\n                            }\n                        }\n                    }))\n                });\n\n                Promise.all(promises).then(function (featureArrays) {\n\n                    var i, allFeatures;\n\n                    if (featureArrays.length === 1) {\n                        allFeatures = featureArrays[0];\n                    } else {\n                        allFeatures = featureArrays[0];\n\n                        for (i = 1; i < featureArrays.length; i++) {\n                            allFeatures = allFeatures.concat(featureArrays[i]);\n                        }\n\n                        allFeatures.sort(function (a, b) {\n                            return a.start - b.start;\n                        });\n                    }\n\n                    fulfill(allFeatures)\n                }).catch((e)=>{\n                    console.log(e);\n                    reject(e)}\n                    );\n            }\n        });\n\n    }\n    \n\n\n    getIndex() {\n\n        var self = this,\n        isIndeedIndexible = this.isIndexable();\n        return new Promise(function (fulfill, reject) {\n\n            if (self.indexed === undefined && isIndeedIndexible) {\n                self.loadIndex().then(function (index) {\n                    if (index) {\n                        self.index = index;\n                        self.indexed = true;\n                    }\n                    else {\n                        self.indexed = false;\n                    }\n                    fulfill(self.index);\n                }).catch(reject);\n            }\n            else {\n                fulfill(self.index);   // Is either already loaded, or there isn't one\n            }\n\n        });\n    }\n\n    readHeader() {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n\n            if (self.header) {\n                fulfill(self.header);\n            }\n\n            else {\n\n                // We force a load of the index first\n\n               self. getIndex().then(function (index) {\n\n                    if (index) {\n                        // Load the file header (not HTTP header) for an indexed file.\n                        // TODO -- note this will fail if the file header is > 65kb in size\n                        var options = {\n                                headers: self.config.headers,           // http headers, not file header\n                                bgz: index.tabix,\n                                range: {start: 0, size: 65000},\n                                withCredentials: self.config.withCredentials\n                            },\n                            success = function (data) {\n                                self.header = self.parser.parseHeader(data);\n                                fulfill(self.header);\n                            };\n\n                        if (self.localFile) {\n                            igvxhr.loadStringFromFile(self.localFile, options).then(success);\n                        }\n                        else {\n                            const url = self.url; //getProjectURL(self.url);\n                            igvxhr.loadString(url, options).then(success).catch(reject);\n                        }\n                    }\n                    else {\n                        self.loadFeaturesNoIndex(undefined).then(function (features) {\n                            var header = self.header || {};\n                            header.features = features;\n                            fulfill(header);\n                        }).catch(error);\n                    }\n                }).catch(reject);\n            }\n        });\n\n    }\n\n    /**\n     *\n     * @param fulfill\n     * @param range -- genomic range to load.  For use with indexed source (optional)\n     */\n    readFeatures(chr, start, end) {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n            if (self.index) {\n                self.loadFeaturesWithIndex(chr, start, end).then(packFeatures).catch(reject);\n            }\n            else {\n                self.loadFeaturesNoIndex().then(packFeatures);\n            }\n\n            function packFeatures(features) {\n                // TODO pack\n                fulfill(features);\n            }\n\n        });\n    }\n\n\n}\n\n\n//***js/feature/FeatureParsers.js**************\n\n\nconst maxFeatureCount = Number.MAX_VALUE;    // For future use,  controls downsampling\n\nconst gffNameFields = [\"Name\", \"gene_name\", \"gene\", \"gene_id\", \"alias\", \"locus\"];\n\n    /**\n     * A factory function.  Return a parser for the given file format.\n     */\nclass FeatureParser{\n    constructor(format, decode_func, config) {\n\n        var customFormat;\n\n        this.format = format;\n        this.nameField = config ? config.nameField : undefined;\n        this.skipRows = 0;   // The number of fixed header rows to skip.  Override for specific types as neede\n\n        if (decode_func) {\n            this.delimiter = /\\s+/;\n\n            this.decode =function(tokens,ignore){\n                let feature={chr:tokens[0],start:parseInt(tokens[1]),end:parseInt(tokens[2])}\n                decode_func(tokens.slice(3),feature);\n                return feature;\n            } ;\n        }\n        else if (config.decode_function===\"generic\"){\n             this.decode =function(tokens,ignore){\n                let feature={chr:tokens[0],start:parseInt(tokens[1]),end:parseInt(tokens[2])}\n                feature.data=tokens.slice(3);\n                return feature;\n            } ;\n        }\n        else{\n            this.decode =config.decode_function === \"decodeRefflat\"?FeatureParser.decodeRefflat:FeatureParser.decodeBed;\n            this.delimiter = /\\s+/;\n\n        }\n\n                                       \n\n\n       /* switch (format) {\n            case \"narrowpeak\":\n            case \"broadpeak\":\n            case \"peaks\":\n                this.decode = this.decodePeak;\n                this.delimiter = /\\s+/;\n                break;\n            case \"bedgraph\":\n                this.decode = this.decodeBedGraph;\n                this.delimiter = /\\s+/;\n                break;\n            case \"wig\":\n                this.decode = this.decodeWig;\n                this.delimiter = /\\s+/;\n                break;\n            case \"gff3\" :\n            case \"gff\" :\n            case \"gtf\" :\n                this.decode = this.decodeGFF;\n                this.delimiter = \"\\t\";\n                break;\n            case \"aneu\":\n                this.decode = this.decodeAneu;\n                this.delimiter = \"\\t\";\n                break;\n            case \"fusionjuncspan\":\n                // bhaas, needed for FusionInspector view\n                this.decode = this.decodeFusionJuncSpan;\n                this.delimiter = /\\s+/;\n                break;\n            case \"gtexgwas\":\n                this.skipRows = 1;\n                this.decode = this.decodeGtexGWAS;\n                this.delimiter = \"\\t\";\n                break;\n            case \"refflat\":\n                this.decode = this.decodeRefflat;\n                this.delimiter = \"\\t\";\n                break;\n            default:\n\n               customFormat = igv.browser.getFormat(format);\n                if (customFormat !== undefined) {\n                    this.decode = decodeCustom;\n                    this.format = customFormat;\n                    this.delimiter = customFormat.delimiter || \"\\t\";\n                }\n\n                else {\n                \n               // }\n\n        }*/\n\n    };\n\n    parseHeader(data) {\n\n        var lines = data.split(\"\\n\"),\n            len = lines.length,\n            line,\n            i,\n            header;\n\n        for (i = 0; i < len; i++) {\n            line = lines[i];\n            if (line.startsWith(\"track\") || line.startsWith(\"#\") || line.startsWith(\"browser\")) {\n                if (line.startsWith(\"track\")) {\n                    header = this.parseTrackLine(line);\n                }\n                else if (line.startsWith(\"##gff-version 3\")) {\n                    this.format = \"gff3\";\n                    if (!header) header = {};\n                    header[\"format\"] = \"gff3\";\n                }\n            }\n            else {\n                header={};\n                break;\n            }\n        }\n        return header;\n    };\n\n    parseFeatures(data,chr,start,end) {\n\n        if (!data) return null;\n\n        var wig,\n            feature,\n            lines = data.split(\"\\n\"),\n            len = lines.length,\n            tokens,\n            allFeatures = [],\n            line,\n            i,\n            cnt = 0,\n            j,\n            decode = this.decode,\n            format = this.format,\n           delimiter = this.delimiter || \"\\t\";\n       \n\n        for (i = this.skipRows; i < len; i++) {\n            line = lines[i];\n            if (line.startsWith(\"track\") || line.startsWith(\"#\") || line.startsWith(\"browser\")) {\n                continue;\n            }\n            else if (format === \"wig\" && line.startsWith(\"fixedStep\")) {\n                wig = this.parseFixedStep(line);\n                continue;\n            }\n            else if (format === \"wig\" && line.startsWith(\"variableStep\")) {\n                wig = this.parseVariableStep(line);\n                continue;\n            }\n\n            tokens = lines[i].split(delimiter);\n            if (tokens.length < 1 || (format!==\"wig\" && tokens.length<3)) continue;\n\n            feature = this.decode(tokens, wig);\n\n\n            if (feature) {\n                if (feature.chr !==chr || feature.end<start || feature.start>end){\n                    continue;\n                }\n                if (allFeatures.length < maxFeatureCount) {\n                    allFeatures.push(feature);\n                }\n                else {\n                    // Reservoir sampling,  conditionally replace existing feature with new one.\n                    j = Math.floor(Math.random() * cnt);\n                    if (j < maxFeatureCount) {\n                        allFeatures[j] = feature;\n                    }\n                }\n                cnt++;\n            }   \n        }\n\n        return allFeatures;\n    };\n\n\n    static parseFixedStep(line) {\n\n        var tokens = line.split(/\\s+/),\n            cc = tokens[1].split(\"=\")[1],\n            ss = parseInt(tokens[2].split(\"=\")[1], 10),\n            step = parseInt(tokens[3].split(\"=\")[1], 10),\n            span = (tokens.length > 4) ? parseInt(tokens[4].split(\"=\")[1], 10) : 1;\n\n        return {format: \"fixedStep\", chrom: cc, start: ss, step: step, span: span, index: 0};\n\n    }\n\n    static parseVariableStep(line) {\n\n        var tokens = line.split(/\\s+/),\n            cc = tokens[1].split(\"=\")[1],\n            span = tokens.length > 2 ? parseInt(tokens[2].split(\"=\")[1], 10) : 1;\n        return {format: \"variableStep\", chrom: cc, span: span}\n\n    }\n\n    static parseTrackLine(line) {\n        var properties = {},\n            tokens = line.split(/(?:\")([^\"]+)(?:\")|([^\\s\"]+)(?=\\s+|$)/g),\n            tmp = [],\n            i, tk, curr;\n\n        // Clean up tokens array\n        for (i = 1; i < tokens.length; i++) {\n            if (!tokens[i] || tokens[i].trim().length === 0) continue;\n\n            tk = tokens[i].trim();\n\n            if (tk.endsWith(\"=\") > 0) {\n                curr = tk;\n            }\n            else if (curr) {\n                tmp.push(curr + tk);\n                curr = undefined;\n            }\n            else {\n                tmp.push(tk);\n            }\n\n        }\n\n\n        tmp.forEach(function (str) {\n            if (!str) return;\n            var kv = str.split('=', 2);\n            if (kv.length == 2) {\n                properties[kv[0]] = kv[1];\n            }\n\n        });\n\n        return properties;\n    }\n\n    /**\n     * Decode the \"standard\" UCSC bed format\n     * @param tokens\n     * @param ignore\n     * @returns decoded feature, or null if this is not a valid record\n     */\n    static decodeBed(tokens, ignore) {\n\n        var chr, start, end, id, name, tmp, idName, exonCount, exonSizes, exonStarts, exons, exon, feature,\n            eStart, eEnd;\n\n        if (tokens.length < 3) return null;\n\n        chr = tokens[0];\n        start = parseInt(tokens[1]);\n        end = tokens.length > 2 ? parseInt(tokens[2]) : start + 1;\n\n        feature = {chr: chr, start: start, end: end, score: 1000};\n\n        if (tokens.length > 3) {\n            // Note: these are very special rules for the gencode gene files.\n            tmp = tokens[3].replace(/\"/g, '');\n            idName = tmp.split(';');\n            for (var i = 0; i < idName.length; i++) {\n                var kv = idName[i].split('=');\n                if (kv[0] == \"gene_id\") {\n                    id = kv[1];\n                }\n                if (kv[0] == \"gene_name\") {\n                    name = kv[1];\n                }\n            }\n            feature.id = id ? id : tmp;\n            feature.name = name ? name : tmp;\n        }\n\n        if (tokens.length > 4) {\n            feature.score = parseFloat(tokens[4]);\n        }\n        if (tokens.length > 5) {\n            feature.strand = tokens[5];\n        }\n        if (tokens.length > 6) {\n            feature.cdStart = parseInt(tokens[6]);\n        }\n        if (tokens.length > 7) {\n            feature.cdEnd = parseInt(tokens[7]);\n        }\n        if (tokens.length > 8) {\n           // if (tokens[8] !== \".\" && tokens[8] !== \"0\")\n                //feature.color = igv.createColorString(tokens[8]);\n        }\n        if (tokens.length > 11) {\n            exonCount = parseInt(tokens[9]);\n            exonSizes = tokens[10].split(',');\n            exonStarts = tokens[11].split(',');\n            exons = [];\n\n            for (var i = 0; i < exonCount; i++) {\n                eStart = start + parseInt(exonStarts[i]);\n                eEnd = eStart + parseInt(exonSizes[i]);\n                var exon = {start: eStart, end: eEnd};\n\n                if (feature.cdStart > eEnd || feature.cdEnd < feature.cdStart) exon.utr = true;   // Entire exon is UTR\n                if (feature.cdStart >= eStart && feature.cdStart <= eEnd) exon.cdStart = feature.cdStart;\n                if (feature.cdEnd >= eStart && feature.cdEnd <= eEnd) exon.cdEnd = feature.cdEnd;\n\n                exons.push(exon);\n            }\n\n            feature.exons = exons;\n        }\n\n       /* feature.popupData = function () {\n            var data = [];\n            if (feature.name) data.push({name: \"Name\", value: feature.name});\n            if (\"+\" === feature.strand || \"-\" === feature.strand) data.push({name: \"Strand\", value: feature.strand});\n            return data;\n        };*/\n\n        return feature;\n\n    }\n\n    /**\n     * Decode a UCSC \"refflat\" record\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    static decodeRefflat(tokens, ignore) {\n\n        if (tokens.length < 10) return null;\n        if (tokens[10] === undefined){\n            console.log(tokens[1]);\n            return null;\n        }\n\n        var feature = {\n                chr: tokens[2],\n                start: parseInt(tokens[4]),\n                end: parseInt(tokens[5]),\n                id: tokens[1],\n                name: tokens[0],\n                strand: tokens[3],\n                cdStart: parseInt(tokens[6]),\n                cdEnd: parseInt(tokens[7])\n            },\n            exonCount = parseInt(tokens[8]),\n            exonStarts = tokens[9].split(','),\n            exonEnds = tokens[10].split(','),\n            exons = [];\n\n        for (var i = 0; i < exonCount; i++) {\n          \n            let exon =  {start:parseInt(exonStarts[i]), end: parseInt(exonEnds[i])}\n            if (feature.cdStart > exon.end || feature.cdEnd < feature.cdStart) exon.utr = true;   // Entire exon is UTR\n            if (feature.cdStart >= exon.start && feature.cdStart <= exon.end) exon.cdStart = feature.cdStart;\n            if (feature.cdEnd >= exon.start && feature.cdEnd <= exon.end) exon.cdEnd = feature.cdEnd;\n            exons.push(exon);\n        }\n\n        feature.exons = exons;\n\n        return feature;\n\n    }\n\n    static decodePeak(tokens, ignore) {\n\n        var tokenCount, chr, start, end, strand, name, score, qValue, signal, pValue;\n\n        tokenCount = tokens.length;\n        if (tokenCount < 9) {\n            return null;\n        }\n\n        chr = tokens[0];\n        start = parseInt(tokens[1]);\n        end = parseInt(tokens[2]);\n        name = tokens[3];\n        score = parseFloat(tokens[4]);\n        strand = tokens[5].trim();\n        signal = parseFloat(tokens[6]);\n        pValue = parseFloat(tokens[7]);\n        qValue = parseFloat(tokens[8]);\n\n        if (score === 0) score = signal;\n\n        return {\n            chr: chr, start: start, end: end, name: name, score: score, strand: strand, signal: signal,\n            pValue: pValue, qValue: qValue\n        };\n    }\n\n    static decodeBedGraph(tokens, ignore) {\n\n        var chr, start, end, value;\n\n        if (tokens.length < 3) return null;\n\n        chr = tokens[0];\n        start = parseInt(tokens[1]);\n        end = parseInt(tokens[2]);\n\n        value = parseFloat(tokens[3]);\n\n        return {chr: chr, start: start, end: end, value: value};\n    }\n\n    static decodeWig(tokens, wig) {\n\n        var ss,\n            ee,\n            value;\n\n        if (wig.format === \"fixedStep\") {\n\n            ss = (wig.index * wig.step) + wig.start;\n            ee = ss + wig.span;\n            value = parseFloat(tokens[0]);\n            ++(wig.index);\n            return isNaN(value) ? null : {chr: wig.chrom, start: ss, end: ee, value: value};\n        }\n        else if (wig.format === \"variableStep\") {\n\n            if (tokens.length < 2) return null;\n\n            ss = parseInt(tokens[0], 10);\n            ee = ss + wig.span;\n            value = parseFloat(tokens[1]);\n            return isNaN(value) ? null : {chr: wig.chrom, start: ss, end: ee, value: value};\n\n        }\n        else {\n            return decodeBedGraph(tokens);\n        }\n    }\n\n    static decodeAneu(tokens, ignore) {\n\n        var chr, start, end, feature;\n\n\n        if (tokens.length < 4) return null;\n\n        chr = tokens[1];\n        start = parseInt(tokens[2]);\n        end = tokens.length > 3 ? parseInt(tokens[3]) : start + 1;\n\n        feature = {chr: chr, start: start, end: end};\n\n        if (tokens.length > 4) {\n            feature.score = parseFloat(tokens[4]);\n            feature.value = feature.score;\n        }\n\n\n        feature.popupData = function () {\n            return [{name: \"Name\", value: feature.name}];\n        };\n\n        return feature;\n\n    }\n\n    static decodeFusionJuncSpan(tokens, ignore) {\n\n        /*\n         Format:\n\n         0       #scaffold\n         1       fusion_break_name\n         2       break_left\n         3       break_right\n         4       num_junction_reads\n         5       num_spanning_frags\n         6       spanning_frag_coords\n\n         0       B3GNT1--NPSR1\n         1       B3GNT1--NPSR1|2203-10182\n         2       2203\n         3       10182\n         4       189\n         5       1138\n         6       1860-13757,1798-13819,1391-18127,1443-17174,...\n\n         */\n\n\n       \n\n        var chr = tokens[0];\n        var fusion_name = tokens[1];\n        var junction_left = parseInt(tokens[2]);\n        var junction_right = parseInt(tokens[3]);\n        var num_junction_reads = parseInt(tokens[4]);\n        var num_spanning_frags = parseInt(tokens[5]);\n\n        var spanning_frag_coords_text = tokens[6];\n\n        var feature = {\n            chr: chr,\n            name: fusion_name,\n            junction_left: junction_left,\n            junction_right: junction_right,\n            num_junction_reads: num_junction_reads,\n            num_spanning_frags: num_spanning_frags,\n            spanning_frag_coords: [],\n\n            start: -1,\n            end: -1\n        }; // set start and end later based on min/max of span coords\n\n        var min_coord = junction_left;\n        var max_coord = junction_right;\n\n        if (num_spanning_frags > 0) {\n\n            var coord_pairs = spanning_frag_coords_text.split(',');\n\n            for (var i = 0; i < coord_pairs.length; i++) {\n                var split_coords = coord_pairs[i].split('-');\n\n                var span_left = split_coords[0];\n                var span_right = split_coords[1];\n\n                if (span_left < min_coord) {\n                    min_coord = span_left;\n                }\n                if (span_right > max_coord) {\n                    max_coord = span_right;\n                }\n                feature.spanning_frag_coords.push({left: span_left, right: span_right});\n\n            }\n        }\n\n        feature.start = min_coord;\n        feature.end = max_coord;\n\n\n        feature.popupData = function () {\n            return [{name: \"Name\", value: feature.name}];\n        };\n\n        return feature;\n\n    }\n\n    static decodeGtexGWAS(tokens, ignore) {\n\n\n        var tokenCount, chr, start, end, strand, name, score, qValue, signal, pValue;\n\n        tokenCount = tokens.length;\n        if (tokenCount < 8) {\n            return null;\n        }\n\n        chr = tokens[0];\n        start = parseInt(tokens[1]) - 1;\n        end = parseInt(tokens[3].split(':')[1]);\n        //name = tokens[3];\n        //score = parseFloat(tokens[4]);\n        //strand = tokens[5].trim();\n        //signal = parseFloat(tokens[6]);\n        pValue = parseFloat(tokens[5]);\n        //qValue = parseFloat(tokens[8]);\n\n        //return {chr: chr, start: start, end: end, name: name, score: score, strand: strand, signal: signal,\n        //    pValue: pValue, qValue: qValue};\n        return {chr: chr, start: start, end: end, pvalue: pValue};\n    }\n\n    /**\n     * Decode a single gff record (1 line in file).  Aggregations such as gene models are constructed at a higher level.\n     *      ctg123 . mRNA            1050  9000  .  +  .  ID=mRNA00001;Parent=gene00001\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    static decodeGFF(tokens, ignore) {\n\n        var tokenCount, chr, start, end, strand, type, score, phase, attributeString, id, parent, color, name,\n            transcript_id, i,\n            format = this.format;\n\n        tokenCount = tokens.length;\n        if (tokenCount < 9) {\n            return null;      // Not a valid gff record\n        }\n\n        chr = tokens[0];\n        type = tokens[2];\n        start = parseInt(tokens[3]) - 1;\n        end = parseInt(tokens[4]);\n        score = \".\" === tokens[5] ? 0 : parseFloat(tokens[5]);\n        strand = tokens[6];\n        phase = \".\" === tokens[7] ? 0 : parseInt(tokens[7]);\n        attributeString = tokens[8];\n\n        // Find ID and Parent, or transcript_id\n        var delim = ('gff3' === format) ? '=' : /\\s+/;\n        var attributes = {};\n        attributeString.split(';').forEach(function (kv) {\n            var t = kv.trim().split(delim, 2), key, value;\n            if (t.length == 2) {\n                key = t[0].trim();\n                value = t[1].trim();\n                //Strip off quotes, if any\n                if (value.startsWith('\"') && value.endsWith('\"')) {\n                    value = value.substr(1, value.length - 2);\n                }\n                if (\"ID\" === t[0]) id = t[1];\n                else if (\"Parent\" === t[0]) parent = t[1];\n                else if (\"color\" === t[0].toLowerCase()) color = igv.createColorString(t[1]);\n                else if (\"transcript_id\" === t[0]) id = t[1];     // gtf format\n                attributes[key] = value;\n            }\n        });\n\n        // Find name (label) property\n        if (this.nameField) {\n            name = attributes[this.nameField];\n        }\n        else {\n            for (i = 0; i < gffNameFields.length; i++) {\n                if (attributes.hasOwnProperty(gffNameFields[i])) {\n                    this.nameField = gffNameFields[i];\n                    name = attributes[this.nameField];\n\n\n                    break;\n                }\n            }\n        }\n\n\n        return {\n            id: id,\n            parent: parent,\n            name: name,\n            type: type,\n            chr: chr,\n            start: start,\n            end: end,\n            score: score,\n            strand: strand,\n            color: color,\n            attributeString: attributeString,\n            popupData: function () {\n                var kvs = this.attributeString.split(';'),\n                    pd = [],\n                    key, value;\n                kvs.forEach(function (kv) {\n                    var t = kv.trim().split(delim, 2);\n                    if (t.length === 2 && t[1] !== undefined) {\n                        key = t[0].trim();\n                        value = t[1].trim();\n                        //Strip off quotes, if any\n                        if (value.startsWith('\"') && value.endsWith('\"')) {\n                            value = value.substr(1, value.length - 2);\n                        }\n                        pd.push({name: key, value: value});\n                    }\n                });\n                return pd;\n            }\n\n        };\n    }\n\n    /**\n     * Decode the \"standard\" UCSC bed format\n     * @param tokens\n     * @param ignore\n     * @returns decoded feature, or null if this is not a valid record\n     */\n    decodeCustom(tokens, ignore) {\n\n        var feature,\n            chr, start, end,\n            format = this.format,         // \"this\" refers to FeatureParser instance\n            coords = format.coords || 0;\n\n        if (tokens.length < 3) return null;\n\n        chr = tokens[format.chr];\n        start = parseInt(tokens[format.start]) - coords;\n        end = format.end !== undefined ? parseInt(tokens[format.end]) : start + 1;\n\n        feature = {chr: chr, start: start, end: end};\n\n        if (format.fields) {\n            format.fields.forEach(function (field, index) {\n                if (index != format.chr && index != format.start && index != format.end) {\n                    feature[field] = tokens[index];\n                }\n            });\n        }\n\n        return feature;\n\n    }\n\n\n}\n\n\n//*******js/feature/featureCache.js**********************\n\n\n    /**\n     * Object for caching lists of features.  Supports effecient queries for sub-range  (chr, start, end)\n     *\n     * @param featureList\n     * @param The genomic range spanned by featureList (optional)\n     * @constructor\n     */\n\nclass FeatureCache{\n    constructor(featureList, range) {\n        this.treeMap = FeatureCache.buildTreeMap(featureList);\n        this.range = range;\n    }\n\n    queryFeatures(chr, start, end) {\n         \n\n        var featureList, intervalFeatures, feature, len, i, tree, intervals;\n\n        tree = this.treeMap[chr];\n\n        if (!tree) return [];\n\n        intervals = tree.findOverlapping(start, end);\n\n        if (intervals.length == 0) {\n            return [];\n        }\n        else {\n            // Trim the list of features in the intervals to those\n            // overlapping the requested range.\n            // Assumption: features are sorted by start position\n\n            featureList = [];\n\n            intervals.forEach(function (interval) {\n                intervalFeatures = interval.value;\n                len = intervalFeatures.length;\n                for (i = 0; i < len; i++) {\n                    feature = intervalFeatures[i];\n                    if (feature.start > end) break;\n                    else if (feature.end >= start) {\n                        featureList.push(feature)\n                    }\n                }\n            });\n            return featureList;\n        }\n\n    };\n\n    allFeatures() {\n\n        var allFeatures = [];\n        var treeMap = this.treeMap;\n        if (treeMap) {\n            for (var key in treeMap) {\n                if (treeMap.hasOwnProperty(key)) {\n\n                    var tree = treeMap[key];\n                    tree.mapIntervals(function (interval) {\n                        allFeatures = allFeatures.concat(interval.value);\n                    });\n                }\n            }\n        }\n        return allFeatures;\n\n    }\n\n    static buildTreeMap(featureList) {\n\n        var featureCache = {},\n            chromosomes = [],\n            treeMap = {},\n            genome = null;\n\n        if (featureList) {\n\n            featureList.forEach(function (feature) {\n\n                var chr = feature.chr,\n                    geneList;\n\n                // Translate to \"official\" name\n                if(genome) chr = genome.getChromosomeName(chr);\n\n                geneList = featureCache[chr];\n\n                if (!geneList) {\n                    chromosomes.push(chr);\n                    geneList = [];\n                    featureCache[chr] = geneList;\n                }\n\n                geneList.push(feature);\n\n            });\n\n\n            // Now build interval tree for each chromosome\n\n            for (let i = 0; i < chromosomes.length; i++) {\n                let chr = chromosomes[i];\n                treeMap[chr] =FeatureCache.buildIntervalTree(featureCache[chr]);\n            }\n        }\n\n        return treeMap;\n    };\n\n    /**\n     * Build an interval tree from the feature list for fast interval based queries.   We lump features in groups\n     * of 10, or total size / 100,   to reduce size of the tree.\n     *\n     * @param featureList\n     */\n    static buildIntervalTree(featureList) {\n\n        var i, e, iStart, iEnd, tree, chunkSize, len, subArray;\n\n        tree = new IntervalTree();\n        len = featureList.length;\n\n        chunkSize = Math.max(10, Math.round(len / 100));\n\n        featureList.sort(function (f1, f2) {\n            return (f1.start === f2.start ? 0 : (f1.start > f2.start ? 1 : -1));\n        });\n\n        for (i = 0; i < len; i += chunkSize) {\n            e = Math.min(len, i + chunkSize);\n            subArray = featureList.slice(i, e);\n            iStart = subArray[0].start;\n            //\n            iEnd = iStart;\n            subArray.forEach(function (feature) {\n                iEnd = Math.max(iEnd, feature.end);\n            });\n            tree.insert(iStart, iEnd, subArray);\n        }\n\n        return tree;\n    }\n\n\n}\n\n//*****js/intervalTree.js************\n\n\nconst BLACK = 1;\nconst RED = 2;\n\nlet NIL = {}\nNIL.color = BLACK;\nNIL.parent = NIL;\nNIL.left = NIL;\nNIL.right = NIL;\n\n  \nclass IntervalTree{\n    constructor() {    \n        this.root = NIL;\n    }\n\n\n    insert(start, end, value) {\n\n        var interval = new Interval(start, end, value);\n        var x = new Node(interval);\n        this.treeInsert(x);\n        x.color = RED;\n        while (x != this.root && x.parent.color == RED) {\n            if (x.parent == x.parent.parent.left) {\n                var y = x.parent.parent.right;\n                if (y.color == RED) {\n                    x.parent.color = BLACK;\n                    y.color = BLACK;\n                    x.parent.parent.color = RED;\n                    x = x.parent.parent;\n                } else {\n                    if (x == x.parent.right) {\n                        x = x.parent;\n                        this.leftRotate(x);\n                    }\n                    x.parent.color = BLACK;\n                    x.parent.parent.color = RED;\n                    this.rightRotate(x.parent.parent);\n                }\n            } else {\n                var y = x.parent.parent.left;\n                if (y.color == RED) {\n                    x.parent.color = BLACK;\n                    y.color = BLACK;\n                    x.parent.parent.color = RED;\n                    x = x.parent.parent;\n                } else {\n                    if (x == x.parent.left) {\n                        x = x.parent;\n                        this.rightRotate(x);\n                    }\n                    x.parent.color = BLACK;\n                    x.parent.parent.color = RED;\n                    this.leftRotate(x.parent.parent);\n                }\n            }\n        }\n        this.root.color = BLACK;\n    }\n\n\n    /**\n     *\n     * @param start - query interval\n     * @param end - query interval\n     * @returns Array of all intervals overlapping the query region\n     */\n    findOverlapping(start, end) {\n\n\n        var searchInterval = new Interval(start, end, 0);\n\n        if (this.root === NIL) return [];\n\n        var intervals = this.searchAll(searchInterval, this.root, []);\n\n        if(intervals.length > 1) {\n            intervals.sort(function(i1, i2) {\n                 return i1.low - i2.low;\n            });\n        }\n\n        return intervals;\n    }\n\n    /**\n     * Dump info on intervals to console.  For debugging.\n     */\n    logIntervals() {\n\n        logNode(this.root, 0);\n\n        function logNode(node, indent) {\n\n            var space = \"\";\n            for(var i=0; i<indent; i++) space += \" \";\n            console.log(space + node.interval.low + \" \" + node.interval.high); // + \" \" + (node.interval.value ? node.interval.value : \" null\"));\n\n            indent += 5;\n\n            if(node.left != NIL) logNode(node.left, indent);\n            if(node.right != NIL) logNode(node.right, indent);\n        }\n\n    }\n\n\n    mapIntervals(func) {\n\n        applyInterval(this.root);\n\n        function applyInterval(node) {\n\n            func(node.interval);\n\n            if(node.left != NIL) applyInterval(node.left);\n            if(node.right != NIL) applyInterval(node.right);\n        }\n    }\n\n    searchAll(interval, node, results) {\n\n        if (node.interval.overlaps(interval)) {\n            results.push(node.interval);\n        }\n\n        if (node.left != NIL && node.left.max >= interval.low) {\n            this.searchAll(interval, node.left, results);\n        }\n\n        if (node.right != NIL && node.right.min <= interval.high) {\n            this.searchAll(interval, node.right, results);\n        }\n\n        return results;\n    }\n\n    leftRotate(x) {\n        var y = x.right;\n        x.right = y.left;\n        if (y.left != NIL) {\n            y.left.parent = x;\n        }\n        y.parent = x.parent;\n        if (x.parent == NIL) {\n            this.root = y;\n        } else {\n            if (x.parent.left == x) {\n                x.parent.left = y;\n            } else {\n                x.parent.right = y;\n            }\n        }\n        y.left = x;\n        x.parent = y;\n\n        this.applyUpdate(x);\n        // no need to apply update on y, since it'll y is an ancestor\n        // of x, and will be touched by applyUpdate().\n    }\n\n\n    rightRotate(x) {\n        var y = x.left;\n        x.left = y.right;\n        if (y.right != NIL) {\n            y.right.parent = x;\n        }\n        y.parent = x.parent;\n        if (x.parent == NIL) {\n            this.root = y;\n        } else {\n            if (x.parent.right == x) {\n                x.parent.right = y;\n            } else {\n                x.parent.left = y;\n            }\n        }\n        y.right = x;\n        x.parent = y;\n\n\n        this.applyUpdate(x);\n        // no need to apply update on y, since it'll y is an ancestor\n        // of x, and will be touched by applyUpdate().\n    }\n\n\n    /**\n     * Note:  Does not maintain RB constraints,  this is done post insert\n     *\n     * @param x  a Node\n     */\n   treeInsert(x) {\n        var node = this.root;\n        var y = NIL;\n        while (node != NIL) {\n            y = node;\n            if (x.interval.low <= node.interval.low) {\n                node = node.left;\n            } else {\n                node = node.right;\n            }\n        }\n        x.parent = y;\n\n        if (y == NIL) {\n            this.root = x;\n            x.left = x.right = NIL;\n        } else {\n            if (x.interval.low <= y.interval.low) {\n                y.left = x;\n            } else {\n                y.right = x;\n            }\n        }\n\n        this.applyUpdate(x);\n    }\n\n\n    // Applies the statistic update on the node and its ancestors.\n    applyUpdate (node) {\n        while (node != NIL) {\n            var nodeMax = node.left.max > node.right.max ? node.left.max : node.right.max;\n            var intervalHigh = node.interval.high;\n            node.max = nodeMax > intervalHigh ? nodeMax : intervalHigh;\n\n            var nodeMin = node.left.min < node.right.min ? node.left.min : node.right.min;\n            var intervalLow = node.interval.low;\n            node.min = nodeMin < intervalLow ? nodeMin : intervalLow;\n\n            node = node.parent;\n        }\n    }\n\n}\n\n\nclass Interval {\n    constructor(low, high, value) {\n        this.low = low;\n        this.high = high;\n        this.value = value;\n    }\n\n\n    equals(other) {\n        if (!other) {\n            return false;\n        }\n        if (this == other) {\n            return true;\n        }\n        return (this.low == otherInterval.low &&\n            this.high == otherInterval.high);\n\n    }\n\n\n    compareTo(other) {\n        if (this.low < other.low)\n            return -1;\n        if (this.low > other.low)\n            return 1;\n\n        if (this.high < other.high)\n            return -1;\n        if (this.high > other.high)\n            return 1;\n\n        return 0;\n    }\n\n    /**\n     * Returns true if this interval overlaps the other.\n     */\n    overlaps(other) {\n        try {\n            return (this.low <= other.high && other.low <= this.high);\n        } catch (e) {\n            //alert(e);\n            igv.presentAlert(e);\n        }\n    }\n}\n\nclass Node{\n    constructor(interval) {\n        this.parent = NIL;\n        this.left = NIL;\n        this.right = NIL;\n        this.interval = interval;\n        this.color = RED;\n    }\n}\n\nclass GenomicInterval{\n\n\tconstructor(chr, start, end, features) {\n        this.chr = chr;\n        this.start = start;\n        this.end = end;\n        this.features = features;\n    }\n\n    contains (chr, start, end) {\n        return this.chr == chr &&\n            this.start <= start &&\n            this.end >= end;\n    }\n\n    containsRange(range) {\n        return this.chr === range.chr &&\n            this.start <= range.start &&\n            this.end >= range.end;\n    }\n    rangesToGet(range){\n        let needs_range=false;\n        let ranges={};\n        if (this.chr !== range.chr){\n            ranges.all=[range.start,range.end];\n            needs_range=true;\n            this.start=range.start;\n            this.end=range.end;\n\n        }\n        else{   \n            if (range.start<this.start){\n                ranges.left=[range.start,this.start];\n                needs_range=true;\n                this.start=range.start;\n              \n            }\n            if (range.end>this.end){\n                ranges.right=[this.end,range.end];\n                needs_range=true;\n                this.end=range.end;\n            }\n        }\n        if (!needs_range){\n            return false;\n        }\n        return ranges;\n    }\n}\n\n\n\nclass FastaSequence{\n\n    constructor(url) {\n\n        this.file = url;\n        this.indexed = true;\n        if (this.indexed) {\n            this.indexFile = this.file + \".fai\";\n        }\n    \n\n    }\n\n   init(){\n\n        var self = this;\n\n        if (self.indexed) {\n\n            return new Promise(function (fulfill, reject) {\n\n                self.getIndex().then(function (index) {\n                    var order = 0;\n                    self.chromosomes = {};\n                    self.chromosomeNames.forEach(function (chrName) {\n                        var bpLength = self.index[chrName].size;\n                        self.chromosomes[chrName] = new igv.Chromosome(chrName, order++, bpLength);\n                    });\n\n\n                    // Ignore index, getting chr names as a side effect.  Really bad practice\n                    fulfill();\n                }).catch(reject);\n            });\n        }\n        else {\n            return self.loadAll();\n        }\n\n    }\n\n    getSequence(chr, start, end) {\n\n        if (this.indexed) {\n            return this.getSequenceIndexed(chr, start, end);\n        }\n        else {\n            return getSequenceNonIndexed.this(chr, start, end);\n\n        }\n\n    }\n\n    getSequenceIndexed(chr, start, end) {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n            var interval = self.interval;\n\n            if (interval && interval.contains(chr, start, end)) {\n\n                fulfill(getSequenceFromInterval(interval, start, end));\n            }\n            else {\n\n                //console.log(\"Cache miss: \" + (interval === undefined ? \"nil\" : interval.chr + \":\" + interval.start + \"-\" + interval.end));\n\n                // Expand query, to minimum of 100kb\n                var qstart = start;\n                var qend = end;\n                if ((end - start) < 100000) {\n                    var w = (end - start);\n                    var center = Math.round(start + w / 2);\n                    qstart = Math.max(0, center - 50000);\n                    qend = center + 50000;\n                }\n\n\n                self.readSequence(chr, qstart, qend).then(function (seqBytes) {\n                    self.interval = new GenomicInterval(chr, qstart, qend, seqBytes);\n                    fulfill(getSequenceFromInterval(self.interval, start, end));\n                }).catch(reject);\n            }\n\n            function getSequenceFromInterval(interval, start, end) {\n                var offset = start - interval.start;\n                var n = end - start;\n                var seq = interval.features ? interval.features.substr(offset, n) : null;\n                return seq;\n            }\n        });\n    }\n\n\n    getSequenceNonIndexed(chr, start, end) {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n            var seq = self.sequences[chr];\n            if (seq && seq.length > end) {\n                fulfill(seq.substring(start, end));\n            }\n        });\n\n    }\n\n    getIndex() {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n            if (self.index) {\n                fulfill(self.index);\n            } else {\n                igvxhr.load(self.indexFile,{}).then(function (data) {\n                    var lines = data.split(\"\\n\");\n                    var len = lines.length;\n                    var lineNo = 0;\n\n                    self.chromosomeNames = [];     // TODO -- eliminate this side effect !!!!\n                    self.index = {};               // TODO -- ditto\n                    while (lineNo < len) {\n\n                        var tokens = lines[lineNo++].split(\"\\t\");\n                        var nTokens = tokens.length;\n                        if (nTokens == 5) {\n                            // Parse the index line.\n                            var chr = tokens[0];\n                            var size = parseInt(tokens[1]);\n                            var position = parseInt(tokens[2]);\n                            var basesPerLine = parseInt(tokens[3]);\n                            var bytesPerLine = parseInt(tokens[4]);\n\n                            var indexEntry = {\n                                size: size, position: position, basesPerLine: basesPerLine, bytesPerLine: bytesPerLine\n                            };\n\n                            self.chromosomeNames.push(chr);\n                            self.index[chr] = indexEntry;\n                        }\n                    }\n\n                    if (fulfill) {\n                        fulfill(self.index);\n                    }\n                }).catch(reject);\n            }\n        });\n    }\n\n    loadAll(){\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n            self.chromosomeNames = [];\n            self.chromosomes = {};\n            self.sequences = {};\n\n            igvxhr.load(self.file, {\n                withCredentials: self.withCredentials\n\n            }).then(function (data) {\n\n                var lines = data.splitLines(),\n                    len = lines.length,\n                    lineNo = 0,\n                    nextLine,\n                    currentSeq = \"\",\n                    currentChr,\n                    order = 0;\n\n\n                while (lineNo < len) {\n                    nextLine = lines[lineNo++].trim();\n                    if (nextLine.startsWith(\"#\") || nextLine.length === 0) {\n                        continue;\n                    }\n                    else if (nextLine.startsWith(\">\")) {\n                        if (currentSeq) {\n                            self.chromosomeNames.push(currentChr);\n                            self.sequences[currentChr] = currentSeq;\n                            self.chromosomes[currentChr] = new igv.Chromosome(currentChr, order++, currentSeq.length);\n                        }\n                        currentChr = nextLine.substr(1).split(\"\\\\s+\")[0];\n                        currentSeq = \"\";\n                    }\n                    else {\n                        currentSeq += nextLine;\n                    }\n                }\n\n                fulfill();\n\n            });\n        });\n    }\n\n    readSequence(chr, qstart, qend) {\n\n        //console.log(\"Read sequence \" + chr + \":\" + qstart + \"-\" + qend);\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n            self.getIndex().then(function () {\n\n                var idxEntry = self.index[chr];\n                if (!idxEntry) {\n                    console.log(\"No index entry for chr: \" + chr);\n\n                    // Tag interval with null so we don't try again\n                    self.interval = new GenomicInterval(chr, qstart, qend, null);\n                    fulfill(null);\n\n                } else {\n\n                    var start = Math.max(0, qstart);    // qstart should never be < 0\n                    var end = Math.min(idxEntry.size, qend);\n                    var bytesPerLine = idxEntry.bytesPerLine;\n                    var basesPerLine = idxEntry.basesPerLine;\n                    var position = idxEntry.position;\n                    var nEndBytes = bytesPerLine - basesPerLine;\n\n                    var startLine = Math.floor(start / basesPerLine);\n                    var endLine = Math.floor(end / basesPerLine);\n\n                    var base0 = startLine * basesPerLine;   // Base at beginning of start line\n\n                    var offset = start - base0;\n\n                    var startByte = position + startLine * bytesPerLine + offset;\n\n                    var base1 = endLine * basesPerLine;\n                    var offset1 = end - base1;\n                    var endByte = position + endLine * bytesPerLine + offset1 - 1;\n                    var byteCount = endByte - startByte + 1;\n                    if (byteCount <= 0) {\n                        fulfill(null);\n                    }\n\n                    igvxhr.load(self.file, {\n                        range: {start: startByte, size: byteCount}\n                    }).then(function (allBytes) {\n\n                        var nBases,\n                            seqBytes = \"\",\n                            srcPos = 0,\n                            desPos = 0,\n                            allBytesLength = allBytes.length;\n\n                        if (offset > 0) {\n                            nBases = Math.min(end - start, basesPerLine - offset);\n                            seqBytes += allBytes.substr(srcPos, nBases);\n                            srcPos += (nBases + nEndBytes);\n                            desPos += nBases;\n                        }\n\n                        while (srcPos < allBytesLength) {\n                            nBases = Math.min(basesPerLine, allBytesLength - srcPos);\n                            seqBytes += allBytes.substr(srcPos, nBases);\n                            srcPos += (nBases + nEndBytes);\n                            desPos += nBases;\n                        }\n\n                        fulfill(seqBytes);\n                    }).catch(reject)\n                }\n            }).catch(reject)\n        });\n    }\n}\n\n\nexport {FeatureSource,FastaSequence,BigBedFeatureSource,TabixBedFeatureSource}","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\nimport {BWSource} from \"./bigwig.js\";\nimport {FeatureSource,FastaSequence,BigBedFeatureSource,TabixBedFeatureSource} from \"./feature.js\";\n\n\nclass MLVTrack{\n\tconstructor(config){\n\t\tthis.config=config;\n\t}\n\n\t_setFeatureSource(){\n\t\t//overriden by tracks with feature sources\n\t}\n\n\tdrawScale(ctx){\n\t\t//overidden in tracks with scale\n\t}\n\n\tgetConfig(){\n\t\treturn JSON.parse(JSON.stringify(this.config));\n\t}\n\n\tsetConfigAttribute(attribute,value){\n        if (value == null){\n            delete this.config[attribute];\n            return;\n        }\n\t\tthis.config[attribute]=value;\n    \tif (attribute===\"url\"){\n    \t\tthis._setFeatureSource();\n    \t}\n    }\n\n    setColorFunction(func){\n\t\tthis.color_function=func;\n\t}\n    getFeatureAt(genomicLocation, chr,yOffset, bpPerPixel){\n    \treturn null;\n    }\n\n    setConfig(config){\n    \tif (this.config.url !== config.url){\n    \t\tthis.config=config;\n    \t\tthis._setFeatureSource();\n    \t}\n    \telse{\n    \t\tthis._setFeatureSource();\n    \t}\n    }\n\n     /**\n\t* Retrieves the features requested, the default is just to get the features\n\t* from the feature source \n\t* @param {string} chr - The chromosome \n\t* @param {integer} start - The start of the range from which to obtain features\n\t* @param {integer} end - The end of the range from which to obtain features \n\t* @param {boolean} force - If true then cached features should not be used\n\t* but fresh features retrieved\n\t* @param {Object} data - contains bp  ber pixel and width of the canvas \n\t*/\n\tgetFeatures (chr, bpStart, bpEnd,force,data) {\n\t\treturn this.feature_source.getFeatures(chr,bpStart,bpEnd,force,data);\n\t}\n\n\n    getSettings(panel){\n        return [\n            {\n                type:\"text\",\n                label:\"Label\",\n                current_value:this.config.short_label,\n                func:x=>{\n                    this.setConfigAttribute(\"short_label\",x);\n                    panel.update();\n                }\n\n            },\n            {\n                type:\"slider\",\n                min:10,\n                max:1000,\n                label:\"Height\",\n                current_value:this.config.height,\n                func:x=>{\n                    this.setConfigAttribute(\"height\",x);\n                    panel.update();\n\n                }\n            },\n            {\n                type:\"colorChooser\",\n                label:\"Color\",\n                current_value:this.config.color,\n                func:x=>{\n                    this.setConfigAttribute(\"color\",x);\n                    panel.update()\n    \n                }\n            },\n            {\n                type:\"button\",\n                label:\"Delete\",\n                func:()=>{\n                    panel.removeTrack(this.config.track_id);\n                }\n            }\n        ]\n    }\n\n\n\tstatic calculateLabel(url){\n\t\tif (typeof url !== \"string\"){\n\t\t\turl = url[0];\n\t\t}\n\t\tlet arr =url.split(\"/\");\n\t\tlet label= arr[arr.length-1];\n\t\tarr= label.split(\".\");\n\t\tlabel = arr[0];\n\t\treturn label;\n\t}\n\n\taddExtraControls(div,panel){\n\t}\n\n\tstatic getTypeFromURL(url){\n\t\tlet config={}\n\t\tif (typeof url !== \"string\"){\n\t\t\treturn config;\n\t\t}\n\t\t\tif (url.endsWith(\"bw\")){\n\t\t\t\tconfig.type=\"bigwig\";\n\t\t\t\tconfig.format=\"wig\";\n\t\t\t\t\n\t\t\t}\n\t\t\telse if (url.endsWith(\".bed.gz\")){\n\t\t\t\tconfig.type=\"bed\";\n\t\t\t\tconfig.format=\"feature\"\n\n\t\t\t}\n\t\t\telse if (url.endsWith(\".bb\") && !(config.type)){\n\t\t\t\tconfig.type=\"bigbed\";\n\t\t\t\tconfig.format=\"feature\"\n\n\t\t\t}\n\t\t\telse if (url.endsWith(\".fasta\")){\n\t\t\t\tconfig.type=\"fasta\";\n\t\t\t\tconfig.format=\"sequence\";\n\t\t\t}\n\t\t\telse if (url.endsWith(\".bam\")){\n\t\t\t\tconfig.type=\"bam\";\n\t\t\t\tconfig.format=\"alignment\";\n\t\t\t}\n\t\treturn config;\n\n\t}\n\n\tstatic parseConfig(con){\n\t\tlet config = JSON.parse(JSON.stringify(con));\n\t\t\n\t\tif (!(config.type) && config.url){\n\t\t\tlet info = MLVTrack.getTypeFromURL(config.url);\n\t\t\tif (info.type){\n\t\t\t\tconfig.type=info.type;\n\t\t\t\tconfig.format=info.format;\n\t\t\t}\n\t\t}\n\t\tif (config.type===\"bed\" || config.type===\"bigbed\"){\n\t\t\tconfig.format=\"feature\";\n\t\t}\n\t\tif (!config.short_label && config.url){\n\t\t\tconfig.short_label=MLVTrack.calculateLabel(config.url);\n\t\t}\n\t\t\n\t\tif (!config.track_id){\n\t\t\tconfig.track_id=config.url;\n\t\t}\n\n\t\tif (config.format===\"feature\"){\n\t\t\tconfig.displayMode = config.displayMode || \"COLLAPSED\";    // COLLAPSED | EXPANDED | SQUISHED\n        \tconfig.labelDisplayMode = \"SLANT\";\n        \tconfig.squishedCallHeight = config.squishedCallHeight || 30;\n        \tconfig.expandedCallHeight = config.expandedCallHeight || 15;\n        \tconfig.featureHeight=config.featureHeight || 12;\n\t\t\n\t\t}\n\n\t\tif (config.format===\"wig\" || config.type===\"bigwig\"){\n\t\t\tif (!config.scale){\n\t\t\t\tconfig.scale=\"dynamic\";\n\t\t\t}\n\t\t\tif (!config.min_y){\n\t\t\t\tconfig.min_y=0;\n\t\t\t}\n\t\t\tif (!config.max_y){\n\t\t\t\tconfig.max_y=100;\n\t\t\t}\n\t\t\tif (!config.height){\n\t\t\t\tconfig.height=100;\n\t\t\t}\n\t\t}\n\t\tif (config.type===\"bam\"){\n\t\t\tif (!config.featureHeight){\n\t\t\t\tconfig.featureHeight=12;\n\t\t\t}\n\t\t}\n\t\tif (!config.height){\n\t\t\tconfig.height=100;\n\t\t}\n\n\t\tif (!config.color){\n\t\t\tif (config.type===\"bam\"){\n\t\t\t\tconfig.color=\"#D3D3D3\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//config.color=\"black\";\n\t\t\t}\n\t\t}\n\t\tif (!config.opacity){\n\t\t\tconfig.opacity=1.0;\n\t\t}\n           \n\t\treturn config;\n\t}\n\n    drawMessage(options){\n        const ctx = options.context;\n        ctx.save();\n        ctx.font=\"15px Verdana\";\n        const dim = ctx.measureText(options.features);\n        const y= options.top+(options.height/2)+20;\n        ctx.fillStyle = options.textColor;\n        for (let x=0;x<options.pixelWidth;x+=dim.width+10){\n            ctx.fillText(options.features, x, y);\n        }\n        ctx.restore();\n    }\n\n\n\n\n\t\n\tstatic getTrack(config){\n\t\tconfig=MLVTrack.parseConfig(config);\n\t\tlet cl= MLVTrack.track_types[config.type];\n\t\tif (!cl){\n\t\t\tthrow new Error(\"Track type \"+ config.type+\" not recognised\")\n\t\t}\n        // pjt: nb, simple bed FeatureSource is not used anywhere and we have no way of loading simple bed files\n        // config.type = \"bed\" is used for tabix indexed bed files\n\t\treturn new cl[\"class\"](config);\n\n\t}\n\t\t\n}\n\nMLVTrack.custom_tracks={};\n\nMLVTrack.track_types={}\n\n\n\n\n\n//*******************js/rulerTrack.js**********************\n\n\nclass RulerTrack extends MLVTrack{\n\tconstructor(config){\n\t\tif (!config){\n\t\t\tconfig={\"track_id\":\"ruler\"+RulerTrack.count,format:\"ruler\",short_label:\"Ruler\",type:\"ruler\"};\n\t\t}\n\t\tsuper(config);\n        this.height = 30;\n        this.config.height=30;\n        this.name = \"\";\n       \n        this.disableButtons = true;\n        this.ignoreTrackMenu = true;\n        this.order = -Number.MAX_VALUE;\n      \n        RulerTrack.count++;\n    }\n\n    getFeatures(chr, bpStart, bpEnd) {\n\n        return new Promise(function (fulfill, reject) {\n            fulfill([]);\n        });\n    }\n\n    drawFeatures(options) {\n\n        const ctx = options.context;\n        const fontStyle = { textAlign: 'center', font: '10px PT Sans', fillStyle: options.textColor, strokeStyle: options.textColor };\n\n        const range = Math.floor(1100 * options.bpPerPixel);\n        const ts = RulerTrack.findSpacing(range);\n        const spacing = ts.majorTick;\n\n        // Find starting point closest to the current origin\n        let nTick = Math.floor(options.bpStart / spacing) - 1;\n        let x = 0;\n\t\tlet y_pos=options.top+this.height;\n        //canvas.setProperties({textAlign: 'center'});\n        Graphics.setProperties(ctx, fontStyle );\n        const shim = 2;\n        while (x < options.pixelWidth) {\n\n            const l = Math.floor(nTick * spacing);\n\n            x = Math.round(((l - 1) - options.bpStart + 0.5) / options.bpPerPixel);\n            const chrPosition = formatNumber(l / ts.unitMultiplier, 0) + \" \" + ts.majorUnit;\n\n            if (nTick % 1 == 0) {\n                Graphics.fillText(ctx, chrPosition, x, y_pos - 15);\n            }\n\n            Graphics.strokeLine(ctx, x, y_pos - 10, x, y_pos - shim);\n\n            nTick++;\n        }\n        Graphics.strokeLine(ctx, 0, y_pos - shim, options.pixelWidth, y_pos - shim);\n\n\n        function formatNumber(anynum, decimal) {\n            //decimal  - the number of decimals after the digit from 0 to 3\n            //-- Returns the passed number as a string in the xxx,xxx.xx format.\n            //anynum = eval(obj.value);\n            let divider = 10;\n            switch (decimal) {\n                case 0:\n                    divider = 1;\n                    break;\n                case 1:\n                    divider = 10;\n                    break;\n                case 2:\n                    divider = 100;\n                    break;\n                default:       //for 3 decimal places\n                    divider = 1000;\n            }\n\n            const workNum = Math.abs((Math.round(anynum * divider) / divider));\n\n            let workStr = \"\" + workNum\n\n            if (workStr.indexOf(\".\") == -1) {\n                workStr += \".\"\n            }\n\n            let dStr = workStr.substring(0, workStr.indexOf(\".\"));\n            const dNum = dStr - 0\n            let pStr = workStr.substring(workStr.indexOf(\".\"))\n\n            while (pStr.length - 1 < decimal) {\n                pStr += \"0\"\n            }\n\n            if (pStr == '.') pStr = '';\n\n            //--- Adds a comma in the thousands place.\n            if (dNum >= 1000) {\n                var dLen = dStr.length\n                dStr = parseInt(\"\" + (dNum / 1000)) + \",\" + dStr.substring(dLen - 3, dLen)\n            }\n\n            //-- Adds a comma in the millions place.\n            if (dNum >= 1000000) {\n                dLen = dStr.length\n                dStr = parseInt(\"\" + (dNum / 1000000)) + \",\" + dStr.substring(dLen - 7, dLen)\n            }\n            let retval = dStr + pStr\n            //-- Put numbers in parentheses if negative.\n            if (anynum < 0) {\n                retval = \"(\" + retval + \")\";\n            }\n\n            //You could include a dollar sign in the return value.\n            //retval =  \"$\"+retval\n            return retval;\n        }\n        return y_pos;\n\n\n    }\n    static findSpacing(maxValue) {\n\n        if (maxValue < 10) {\n            return new TickSpacing(1, \"\", 1);\n        }\n\n\n        // Now man zeroes?\n        var nZeroes = Math.floor(log10(maxValue));\n        var majorUnit = \"\";\n        var unitMultiplier = 1;\n        if (nZeroes > 9) {\n            majorUnit = \"gb\";\n            unitMultiplier = 1000000000;\n        }\n        if (nZeroes > 6) {\n            majorUnit = \"mb\";\n            unitMultiplier = 1000000;\n        } else if (nZeroes > 3) {\n            majorUnit = \"kb\";\n            unitMultiplier = 1000;\n        }\n\n        var nMajorTicks = maxValue / Math.pow(10, nZeroes - 1);\n        if (nMajorTicks < 25) {\n            return new TickSpacing(Math.pow(10, nZeroes - 1), majorUnit, unitMultiplier);\n        } else {\n            return new TickSpacing(Math.pow(10, nZeroes) / 2, majorUnit, unitMultiplier);\n        }\n\n        function log10(x) {\n            var dn = Math.log(10);\n            return Math.log(x) / dn;\n        }\n    }\n\n}\n\nRulerTrack.count=0;\n\nMLVTrack.track_types[\"ruler\"]={\n\t\"class\":RulerTrack,\n\tname:\"Ruler\"\n\n}\n\nclass TickSpacing{\n\tconstructor(majorTick, majorUnit, unitMultiplier) {\n        this.majorTick = majorTick;\n        this.majorUnit = majorUnit;\n        this.unitMultiplier = unitMultiplier;\n    }\n\n}\n\n \nclass MLVBedTrack extends MLVTrack{\n\tconstructor(config){\n\t\tsuper(config);\n\t\tthis._setFeatureSource();\n\t\tthis.filter_function=null;\n\t\tthis.color_function=null;\n\t\t\n\t}\n\n\t_setFeatureSource(){\n\t\tthis.feature_source= new TabixBedFeatureSource(this.config);\n\t}\n\n\tsetFilterFunction(func){\n\t\tthis.filter_function=func;\n\t}\n\t\n\n\tgetCurrentFeatures(chr,start,end){\n\t\treturn this.feature_source.featureCache.queryFeatures(chr,start,end);\n\t}\n\t\n\tdrawFeatures(options) {\n\t\tlet max_y_val=0;\n        var track = this,\n        \tpy,\n            featureList = options.features,\n            ctx = options.context,\n            bpPerPixel = options.bpPerPixel,\n            bpStart = options.bpStart,\n            pixelWidth = options.pixelWidth,\n            pixelHeight = options.pixelHeight,\n            offset=0,\n            bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\t \tlet top=0;\n       \tif(options.top){\n           top=options.top;\n       \t}\n       \tthis.top=top;\n        let conf = this.config;\n        let windowX = 0;\n        let windowX1 = windowX + pixelWidth;\n\n        this.config.squishedCallHeight = this.config.featureHeight+10;\n        this.config.expandedCallHeight = (this.config.featureHeight/2)+2;\n        let ki=null;\n        if (featureList.length>50000){\n        \tki=Math.round(featureList.length/50000)+1;\n        }\n\n\n\n        if (featureList) {\n        \tlet opacity = this.config.opacity?this.config.opacity:1;\n        \tctx.globalAlpha=opacity;\n\n            for (var gene, i = 0, len = featureList.length; i < len; i++) {\n            \tif (ki && i%ki!==0){\n            \t\tcontinue;\n            \t}\n                gene = featureList[i];\n                if (this.filter_function && !this.filter_function(gene)){\n                \tgene.display=false;\n                \tcontinue;\n                }\n                gene.display=true;\n                if (gene.end < bpStart) continue;\n                if (gene.start > bpEnd) break;\n                let coord = this.calculateFeatureCoordinates(gene, bpStart,bpPerPixel);\n                let h = conf.featureHeight\n                if (conf.displayMode === \"SQUISHED\" && gene.row != undefined) {\n            \t\th = conf.featureHeight / 2;\n            \t\tpy = conf.expandedCallHeight * gene.row + 2;\n        \t\t} else if (conf.displayMode === \"EXPANDED\" && gene.row != undefined) {\n            \t\tpy = conf.squishedCallHeight * gene.row + 5;\n        \t\t} else {\n             // collapsed\n           \t\t\t py = 5;\n        \t\t}\n        \t\tpy+=top;\n        \t\tif (py+h>max_y_val){\n        \t\t\tmax_y_val=py+h;\n        \t\t}\n        \t\tcoord.py=py;\n        \t\tcoord.h=h;\n        \t\tlet info={bpPerPixel:bpPerPixel,bpStart:bpStart,pixelWidth:pixelWidth}\n        \t\tif (this.color_function){\n        \t\t\tgene.color=this.color_function(gene);\n        \t\t}\n        \t\t\n                this.renderFeature(gene,coord,ctx,info,options.textColor);\n                this.renderFeatureLabel(ctx, gene, coord.px, coord.px1, py, windowX, windowX1,options.textColor);\n            }\n            ctx.globalAlpha=1;\n        }\n        else {\n            console.log(\"No feature list\");\n        }\n        this.bottom=max_y_val;\n        if (this.config.displayMode===\"COLLAPSED\"){\n        \tmax_y_val+=25;\n        }\t\n    \treturn max_y_val;\n    }\n        \n           \n\n    \n  \n\t /**\n     * @param ctx       the canvas 2d context\n     * @param feature\n     * @param featureX  feature start x-coordinate\n     * @param featureX1 feature end x-coordinate\n     * @param featureY  feature y-coordinate\n     * @param windowX   visible window start x-coordinate\n     * @param windowX1  visible window end x-coordinate\n     */\n  \n\n\n\n\trenderFeatureLabel(ctx, feature, featureX, featureX1, featureY, windowX, windowX1,defaultColor) {\n\t\tlet info = this.config;\n        var geneFontStyle, transform,\n            boxX, boxX1,    // label should be centered between these two x-coordinates\n            labelX, labelY,\n            textFitsInBox;\n\n        // feature outside of viewable window\n        if (featureX1 < windowX || featureX > windowX1) {\n            boxX = featureX;\n            boxX1 = featureX1;\n        } else {\n            // center label within visible portion of the feature\n            boxX = Math.max(featureX, windowX);\n            boxX1 = Math.min(featureX1, windowX1);\n        }\n\n        let text= feature.name;\n        if (this.label_function){\n        \ttext=this.label_function(feature);\n        }\n       \n\n        //if (igv.browser.selection && \"genes\" === this.config.type && feature.name !== undefined) {\n            // TODO -- for gtex, figure out a better way to do this\n            //geneColor = igv.browser.selection.colorForGene(feature.name);\n      //  }\n\n        textFitsInBox = (boxX1 - boxX) > ctx.measureText(text).width;\n        //geneColor=\"black\";\n\n        if ((textFitsInBox) && info.displayMode != \"SQUISHED\" && text) {\n            geneFontStyle = {\n                font: '10px PT Sans',\n                textAlign: 'center',\n                fillStyle: info.color || defaultColor,\n                strokeStyle: info.color || defaultColor\n            };\n\n            if (info.displayMode === \"COLLAPSED\" && info.labelDisplayMode === \"SLANT\") {\n                transform = {rotate: {angle: 45}};\n                delete geneFontStyle.textAlign;\n            }\n\n            labelX = boxX + ((boxX1 - boxX) / 2);\n            labelY = getFeatureLabelY(featureY, transform);\n\n            Graphics.fillText(ctx, text, labelX, labelY, geneFontStyle, transform);\n        }\n        function getFeatureLabelY(featureY, transform) {\n        \treturn transform ? featureY + info.featureHeight+14 : featureY + info.featureHeight+7;\n    \t}\n    }\n\n\n\n\tcalculateFeatureCoordinates(feature, bpStart, xScale) {\n    \tvar px = Math.round((feature.start-1 - bpStart) / xScale),\n        px1 = Math.round((feature.end - bpStart) / xScale),\n        pw = px1 - px;\n\n        if (pw < 3) {\n        \tpw = 3;\n            px -= 1;\n        }\n\n        return {\n        \tpx: px,\n            px1: px1,\n            pw: pw\n        };\n\t}\n\n\t/**\n     * Renders the feature to the canvas\n     * @param feature - The feature itself\n     * @param coord An object containing information on where to draw the feature\n     * px1,px2 the left and right pixels - pw - the width\n     * py the top, h - the height\n     * @param ctx - The context to draw the feature\n     * @param info - An object containing information about the genomic location\n     * bpStart.bpPerPixel and pixelWidth\n     * \n     */\n\t\n\trenderFeature(feature, coord,ctx,info,defaultColor){\n\t\tvar e,x, cy, direction, exon, ePx, ePx1, ePxU, ePw, py2, h2, \n            step = 20,\n            color = this.config.color || defaultColor;\n        if (feature.color) {\n            color = feature.color;\n        }\n  \n        ctx.fillStyle = color;\n        ctx.strokeStyle = color;\n\n\n        cy = coord.py + coord.h / 2;\n        h2 = coord.h / 2;\n        py2 = cy - h2 / 2;\n\n\t\tlet exonCount = feature.exons ? feature.exons.length : 0;\n\t\t\tif (exonCount == 0) {\n            \t// single-exon transcript\n            \tctx.fillRect(coord.px, coord.py, coord.pw, coord.h);\n        \t}\n        else{\n            // multi-exon transcript\n            coord.px=Math.max(coord.px,0);\n            coord.px1=Math.min(coord.px1,info.pixelWidth);\n            Graphics.strokeLine(ctx, coord.px + 1, cy, coord.px1 - 1, cy); // center line for introns\n            direction = feature.strand == '+' ? 1 : -1;\n            \n           \n          \n            for ( x=coord.px + step / 2; x <  coord.px1; x += step) {\n\n                // draw arrowheads along central line indicating transcribed orientation\n                Graphics.strokeLine(ctx, x - direction * 2, cy - 2, x, cy);\n                Graphics.strokeLine(ctx, x - direction * 2, cy + 2, x, cy);\n            }\n            for (e = 0; e < exonCount; e++) {\n                // draw the exons\n                exon = feature.exons[e];\n                ePx = Math.round((exon.start - info.bpStart) / info.bpPerPixel);\n                ePx1 = Math.round((exon.end - info.bpStart) / info.bpPerPixel);\n                ePw = Math.max(1, ePx1 - ePx);\n\n                if (exon.utr) {\n                    ctx.fillRect(ePx, py2, ePw, h2); // Entire exon is UTR\n                }\n                else {\n                    if (exon.cdStart) {\n                        ePxU = Math.round((exon.cdStart - info.bpStart) / info.bpPerPixel);\n                        ctx.fillRect(ePx, py2, ePxU - ePx, h2); // start is UTR\n                        ePw -= (ePxU - ePx);\n                        ePx = ePxU;\n\n                    }\n                    if (exon.cdEnd) {\n                        ePxU = Math.round((exon.cdEnd - info.bpStart) / info.bpPerPixel);\n                        ctx.fillRect(ePxU, py2, ePx1 - ePxU, h2); // start is UTR\n                        ePw -= (ePx1 - ePxU);\n                        ePx1 = ePxU;\n                    }\n\n                    ctx.fillRect(ePx, coord.py, ePw, coord.h);\n\n                    // Arrows\n                    if (ePw > step + 5) {\n                        ctx.fillStyle = \"white\";\n                        ctx.strokeStyle = \"white\";\n                        for (x = ePx + step / 2; x < ePx1; x += step) {\n                            // draw arrowheads along central line indicating transcribed orientation\n                            Graphics.strokeLine(ctx, x - direction * 2, cy - 2, x, cy);\n                            Graphics.strokeLine(ctx, x - direction * 2, cy + 2, x, cy);\n                        }\n                        ctx.fillStyle = color;\n                        ctx.strokeStyle = color;\n\n                    }\n                }\n            }\n        }\n\n\t}\n\n\tgetFeatureAt(genomicLocation, chr, coord, bpPerPixel) {\n\t\tlet yOffset=coord.y-this.top;\n        // We use the featureCache property rather than method to avoid async load.  If the\n        // feature is not already loaded this won't work,  but the user wouldn't be mousing over it either.\n        if (this.feature_source.featureCache) {\n\n          \n               var tolerance = 2 * bpPerPixel,  // We need some tolerance around genomicLocation, start with +/- 2 pixels\n                featureList = this.feature_source.featureCache.queryFeatures(chr, genomicLocation - tolerance, genomicLocation + tolerance),\n                row;\n\n            if (this.config.displayMode != \"COLLAPSED\") {\n                row = (Math.floor)(this.config.displayMode === \"SQUISHED\" ? yOffset / this.config.expandedCallHeight : yOffset / this.config.squishedCallHeight);\n            }\n            else{\n                if (yOffset<5 || yOffset>5+this.config.featureHeight){\n                    return;\n                }\n            }\n\n\n            if (featureList && featureList.length > 0) {\n\n\n                var popupData = [];\n                for (let feature of featureList){\n                    if (feature.end >= genomicLocation - tolerance &&\n                        feature.start <= genomicLocation + tolerance) {\n\n                        // If row number is specified use it\n                        if ((row === undefined || feature.row === undefined || row === feature.row)&&  feature.display) {\n                           return feature;\n\n                        }\n                    }\n                }\n\n               \n            }\n\n        }\n\n        return null;\n    };\n\n}\n\nMLVTrack.track_types[\"bed\"]={\n\t\"class\":MLVBedTrack,\n\tname:\"bed(tabix)\"\n}\n\n\nclass MLVBigBedTrack extends MLVBedTrack{\n\tconstructor(config){\n\t\tsuper(config);\n\t\t\n\t}\n\t_setFeatureSource(){\n\t\tthis.feature_source=new BigBedFeatureSource(this.config);\n\t}\n\n}\n\nMLVTrack.track_types[\"bigbed\"]={\n\t\"class\":MLVBigBedTrack,\n\t\"name\":\"BigBed\"\n\t\n}\n\n\n\n\n\nclass MLVWigTrack extends MLVTrack{\n\tconstructor(config){\n\t\tconfig.format=\"wig\";\n\t\tsuper(config);\n\t\tthis._setFeatureSource();\n\t}\n\n\t_setFeatureSource(){\n\t\tthis.feature_source=new BWSource(this.config);\t\n\t}\n    getSettings(panel) {\n        return [\n            ...super.getSettings(panel),\n            {\n                type: \"check\",\n                label: \"Show data range\",\n                value: this.config.showDataRange,\n                func: v => {\n                    this.setConfigAttribute(\"showDataRange\", v);\n                    panel.update();\n                }\n            }\n        ]\n    }\n\n\tdrawScale(pixel_height,ctx,defaultColor){\n\t\tif (this.config.scale_link_to && this.config.group){\n\t\t\treturn;\n\t\t}\n\t\n\t\tlet\ttop=this.top;\n\t\tlet\tbot = this.bottom;\n\t\t\n\t\tctx.fillStyle=defaultColor;\n        ctx.strokeStyle=defaultColor;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(0,top);\n\t\tctx.lineTo(0,bot);\n\t\tctx.moveTo(0,top);\n\t\tctx.lineTo(20,top);\n\t\tctx.moveTo(0,bot);\n\t\tctx.lineTo(20,bot);\n\t\tctx.font=\"12px Arial\";\n\t\tctx.stroke();\n\t\tctx.textBaseline=\"top\";\n\t\t\n\t\tif (this.max_y != null){\n\t\t    ctx.fillText(this.max_y.toFixed(2),20,top);\n\t\t    ctx.textBaseline=\"alphabetic\";\n\t\t    ctx.fillText(this.min_y,20,bot);\n\t\t}\n\n\t}\n\n\n\n\t\n\t\n\t\n\t\n\tdrawFeatures(options) {\n\t\tlet self = this,\n\t    features = options.features,\n\t    color=this.config.color,\n\t    ctx = options.context,\n\t    bpPerPixel = options.bpPerPixel,\n\t    bpStart = options.bpStart,\n\t    pixelWidth = options.pixelWidth,\n\t    pixelHeight =options.pixelHeight,\n\t    y_offset=options.top,\n\t    bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n\t    featureValueRange;\n\t    if (this.config.group){\n            pixelHeight=options.height;\n\t    }\n\t    else {\n\t    \tpixelHeight=this.config.height;\t\n\t    }\n\t    if (!color){\n\t    \tcolor=\"black\";       \n\t    }\n\t    this.prev_coords={x:0,y:0};\n\t\t\n        if (features) {\n            if (this.scale_link_to) {\n                let t = this.scale_link_to.config;\n                if (t) {\n                    this.config.scale = t.scale;\n                    this.max_y = this.scale_link_to.max_y;\n                    this.min_y = this.scale_link_to.min_y;\n                }\n            }\n            else if (this.set_scale) {\n                this.min_y = this.set_scale.min;\n                this.max_y = this.set_scale.max;\n            }\n            else if ((this.max_y === undefined && this.config.scale === \"automatic\") || this.config.scale === \"dynamic\") {\n                var s = autoscale(features);\n                this.min_y = s.min;\n                this.max_y = s.max;\n            }\n            else if (this.config.scale === \"fixed\") {\n                this.min_y = this.config.min_y;\n                this.max_y = this.config.max_y;\n            }\n\n            featureValueRange = this.max_y - this.min_y;\n\n            //$dataRangeTrackLabel = $(this.trackView.trackDiv).find('.igv-data-range-track-label');\n            //\n            //min = (Math.floor(track.dataRange.min) === track.dataRange.min) ? track.dataRange.min : track.dataRange.min.toFixed(2);\n            //max = (Math.floor(track.dataRange.max) === track.dataRange.max) ? track.dataRange.max : track.dataRange.max.toFixed(2);\n            //str = '[' + min + ' - ' + max + ']';\n            //\n            //$dataRangeTrackLabel.text(str);\n            let prev_x = 0;\n            let prev_y = 0;\n            ctx.globalAlpha = this.config.opacity ? this.config.opacity : 1;\n\n            if (this.is_line) {\n                let y = (1.0 - this.config.value / featureValueRange) * pixelHeight;\n                Graphics.strokeLine(ctx, 0, y, pixelWidth, y, { \"strokeStyle\": this.config.color, \"lineWidth\": this.config.width ? this.config.width : 1 });\n            }\n\n            else {\n                // pass on any error message from feature source...\n                if (!Array.isArray(features)) {\n                    throw features;\n                }\n                features.forEach(renderFeature);\n                if (this.config.showDataRange) {\n                    ctx.save();\n                    features.forEach(f => {\n                        f.valueBak = f.value;\n                        f.value = f.minVal;\n                    });\n                    ctx.globalAlpha *= 0.4;\n                    features.forEach(renderFeature);\n                    features.forEach(f => f.value = f.maxVal);\n                    features.forEach(renderFeature);\n                    features.forEach(f => f.value = f.valueBak);\n                    ctx.restore();\n                }\n            }\n\n            ctx.globalAlpha = 1\n            if (this.config.threshold) {\n                let y = y_offset + (1.0 - this.config.threshold / featureValueRange) * pixelHeight;\n                Graphics.strokeLine(ctx, 0, y, pixelWidth, y, { \"strokeStyle\": \"black\", \"lineWidth\": 1 });\n            }\n        }\n        function renderFeature(feature) {\n\n            let yUnitless,\n                heightUnitLess,\n                x,\n                y,\n                width,\n                height,\n                rectEnd;\n\n            if (feature.end < bpStart) return;\n            if (feature.start > bpEnd) return;\n                if (feature.end===feature.start){\n                feature.start-=1;\n            }\n            \n            \n            x = Math.floor((feature.start - bpStart) / bpPerPixel);\n            \n            rectEnd = Math.floor((feature.end - bpStart) / bpPerPixel);\n            width = Math.max(0, rectEnd - x);\n\n            //height = ((feature.value - featureValueMinimum) / featureValueRange) * pixelHeight;\n            //rectBaseline = pixelHeight - height;\n            //canvas.fillRect(rectOrigin, rectBaseline, rectWidth, rectHeight, {fillStyle: track.color});\n            // feature.value = .... think about doing something to anti-alias.\n            if (signsDiffer(self.min_y, self.max_y)) {\n\n                if (feature.value < 0) {\n                    yUnitless = self.max_y/ featureValueRange;\n                    heightUnitLess = -feature.value / featureValueRange;\n                } else {\n                    yUnitless = ((self.max_y - feature.value) / featureValueRange);\n                    heightUnitLess = feature.value / featureValueRange;\n                }\n\n            }\n            else if (self.min_y < 0) {\n                yUnitless = 0;\n                heightUnitLess = -feature.value / featureValueRange;\n            }\n            else {\n                yUnitless = 1.0 - ((feature.value-self.min_y) / featureValueRange);\n                heightUnitLess = (feature.value+self.min_y) / featureValueRange;\n            }\n\n            y = (yUnitless*pixelHeight)+y_offset;\n            y=y<y_offset?y_offset:y;\n            height=heightUnitLess * pixelHeight;\n            height=height>pixelHeight?pixelHeight:height\n\n            //canvas.fillRect(x, yUnitless * pixelHeight, width, heightUnitLess * pixelHeight, { fillStyle: igv.randomRGB(64, 255) });\n            if (self.config.display==='line'){\n                if (self.prev_coords.x) {\n                    Graphics.strokeLine(ctx,x,y,self.prev_coords.x,self.prev_coords.y,{\"strokeStyle\":color,\"lineWidth\":3});\n                }\n                self.prev_coords.x = x;\n                self.prev_coords.y = y;\n            }\n            else{\n                //phase data\n                const ph = self.config.phase_data;\n                if(ph){\n                    const pos = (bpPerPixel*x)+bpStart;\n                    if (pos >ph.st && pos <ph.en){\n                        const pro = ph.ratio*height;\n                        Graphics.fillRect(ctx, x, y, width, pro, {fillStyle: \"blue\"});\n                        Graphics.fillRect(ctx, x, y+pro, width, height-pro, {fillStyle: \"red\"});\n                    }\n                    else{\n                        Graphics.fillRect(ctx, x, y, width, height, {fillStyle: color});\n                    }\n                }\n                else{\n                    Graphics.fillRect(ctx, x, y, width, height, {fillStyle: color});\n                }\n            }           \n        }\n        function autoscale(features) {\n            let min = Number.MAX_VALUE, max = -Number.MAX_VALUE;\n            if (!Array.isArray(features)) {\n                console.warn('features is not an array');\n                return {min: 0, max: 100};\n            }\n            features.forEach(function (f) {\n                min = Math.min(min, f.value);\n                max = Math.max(max, f.value);\n            });\n            return {min: min, max: max};\n        }\n\n        function signsDiffer(a, b) {\n            return (a > 0 && b < 0 || a < 0 && b > 0);\n        }\n        this.top=y_offset;\n        this.bottom=y_offset+pixelHeight;\n        \n        return this.bottom;\n\t}\n}\n\n\n\nMLVTrack.track_types[\"bigwig\"]={\n\t\"class\":MLVWigTrack,\n\tname:\"BigWig\"\n}\n\n\n class LineTrack extends MLVWigTrack{\n\t constructor(config){\n\t\t super(config);\n\t\t this.is_line=true;\n\t }\n\t \n\t getFeatures(chr, bpStart, bpEnd) {\n\t\t return new Promise(function (fulfill, reject) {\n\t\t\t fulfill([]);\n\t     });\n\t }\n\t \n\t \n }\n\nMLVTrack.track_types[\"line\"]={\n\t\"class\":LineTrack,\n\tname:\"Line Track\"\n}\n\n\n\n\nclass SequenceTrack extends MLVTrack{\n    constructor(config){\n\t\tsuper(config) \n        this._setFeatureSource(config);\n        this.sequenceType = config.sequenceType || \"dna\";  \n        this.height = 15;\n    }\n\n    _setFeatureSource(config){\n    \tthis.feature_source = new FastaSequence(config.url);\n    }\n\n\n\n    getFeatures(chr, bpStart, bpEnd,force,data) {\n\t\tlet self = this;\n        return new Promise(function (fulfill, reject) {\n            if (data.bpPerPixel > 1/*igv.browser.trackViewportWidthBP() > 30000*/) {\n                fulfill(null);\n            }\n            else {\n                self.feature_source.getSequence(chr, bpStart, bpEnd).then(fulfill).catch(reject);\n            }\n        });\n    }\n\n\n    drawFeatures(options) {\n        var sequence = options.features,\n            ctx = options.context,\n            bpPerPixel = options.bpPerPixel,\n            bpStart = options.bpStart,\n            pixelWidth = options.pixelWidth,\n            bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n            len, w, y, pos, offset, b, p0, p1, pc, c;\n\n        let y_pos1=options.top;\n        let y_pos2=y_pos1+5;\n\n        if (sequence) {\n            len = sequence.length;\n            w = 1 / bpPerPixel;\n\n            y = y_pos1+this.height / 2;\n            for (pos = bpStart; pos <= bpEnd; pos++) {\n                offset = pos - bpStart;\n                if (offset < len) {\n                    // var b = sequence.charAt(offset);\n                    b = sequence[offset];\n                    p0 = Math.floor(offset * w);\n                    p1 = Math.floor((offset + 1) * w);\n                    pc = Math.round((p0 + p1) / 2);\n\n                    if (this.color) {\n                        c = this.color;\n                    }\n                    else if (\"dna\" === this.sequenceType) {\n                        c = Graphics.nucleotideColors[b];\n                    }\n                    else {\n                        c = \"rgb(0, 0, 150)\";\n                    }\n\n                    if (!c) c = \"gray\";\n\n                    if (bpPerPixel >0.18) {\n                        Graphics.fillRect(ctx, p0, y_pos1, p1 - p0, 10, {fillStyle: c});\n                    }\n                    else {\n                        Graphics.strokeText(ctx, b, pc, y, {\n                            strokeStyle: c,\n                            font: 'normal 10px Arial',\n                            textAlign: 'center'\n                        });\n                    }\n                }\n            }\n        }\n        return y_pos1+10;\n    }\n\n}\n\n\nMLVTrack.track_types[\"fasta\"]={\n\t\"class\":SequenceTrack,\n\tname:\"Fasta\"\n}\n\n\n\n//*******js/ifv-canvas.js***********************\n\n\nclass Graphics{\n\n\n       static setProperties(ctx, properties) {\n\n            for (var key in properties) {\n                if (properties.hasOwnProperty(key)) {\n                    var value = properties[key];\n                    ctx[key] = value;\n                }\n            }\n        }\n\n        static strokeLine (ctx, x1, y1, x2, y2, properties) {\n\n            x1 = Math.floor(x1) + 0.5;\n            y1 = Math.floor(y1) + 0.5;\n            x2 = Math.floor(x2) + 0.5;\n            y2 = Math.floor(y2) + 0.5;\n\n            //log(\"stroke line, prop: \" + properties);\n\n            ctx.save();\n            if (properties) Graphics.setProperties(ctx, properties);\n\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n            ctx.restore();\n        }\n\n        static fillRect(ctx, x, y, w, h, properties) {\n\n            var c;\n            x = Math.round(x);\n            y = Math.round(y);\n\n            if (properties) {\n                ctx.save();\n                Graphics.setProperties(ctx, properties);\n            }\n            \n            ctx.fillRect(x, y, w, h);\n\n            if (properties) ctx.restore();\n        }\n\n        static fillPolygon(ctx, x, y, properties) {\n            ctx.save();\n            if (properties)   Graphics.setProperties(ctx, properties);\n            Graphics.doPath(ctx, x, y);\n            ctx.fill();\n            ctx.restore();\n        }\n\n        static strokePolygon(ctx, x, y, properties) {\n            ctx.save();\n            if (properties)   Graphics.setProperties(ctx, properties);\n            Graphics.doPath(ctx, x, y);\n            ctx.stroke();\n            ctx.restore();\n        }\n\n        static fillText(ctx, text, x, y, properties, transforms) {\n\n            if (properties) {\n                ctx.save();\n                Graphics.setProperties(ctx, properties);\n            }\n\n\n            ctx.save();\n\n            ctx.translate(x, y);\n            if (transforms) {\n\n                for (var transform in transforms) {\n                    var value = transforms[transform];\n\n                    // TODO: Add error checking for robustness\n                    if (transform == 'translate') {\n                        ctx.translate(value['x'], value['y']);\n                    }\n                    if (transform == 'rotate') {\n                        ctx.rotate(value['angle'] * Math.PI / 180);\n                    }\n                }\n\n            }\n\n            ctx.fillText(text, 0, 0);\n            ctx.restore();\n\n            if (properties) ctx.restore();\n\n        }\n\n        static strokeText(ctx, text, x, y, properties, transforms) {\n\n\n            ctx.save();\n            if (properties) {\n                Graphics.setProperties(ctx, properties);\n            }\n\n\n            ctx.translate(x, y);\n            if (transforms) {\n\n                for (var transform in transforms) {\n                    var value = transforms[transform];\n\n                    // TODO: Add error checking for robustness\n                    if (transform == 'translate') {\n                        ctx.translate(value['x'], value['y']);\n                    }\n                    if (transform == 'rotate') {\n                        ctx.rotate(value['angle'] * Math.PI / 180);\n                    }\n                }\n            }\n\n\n            ctx.strokeText(text, 0, 0);\n            ctx.restore();\n\n        }\n\n        static strokeCircle(ctx, x, y, radius) {\n\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, 2 * Math.PI);\n            ctx.stroke();\n        }\n\n        static fillCircle (ctx, x, y, radius) {\n\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        static drawArrowhead(ctx, x, y, size, lineWidth) {\n\n            ctx.save();\n            if (!size) {\n                size = 5;\n            }\n            if (lineWidth) {\n                ctx.lineWidth = lineWidth;\n            }\n            ctx.beginPath();\n            ctx.moveTo(x, y - size / 2);\n            ctx.lineTo(x, y + size / 2);\n            ctx.lineTo(x + size, y);\n            ctx.lineTo(x, y - size / 2);\n            ctx.closePath();\n            ctx.fill();\n            ctx.restore();\n        }\n\n        static dashedLine(ctx, x1, y1, x2, y2, dashLen, properties) {\n            ctx.save();\n            x1 = Math.round(x1);\n            y1 = Math.round(y1);\n            x2 = Math.round(x2);\n            y2 = Math.round(y2);\n            dashLen = Math.round(dashLen);\n            log(\"dashedLine\");\n            if (properties) Graphics.setProperties(ctx, properties);\n\n            if (dashLen == undefined) dashLen = 2;\n            ctx.moveTo(x1, y1);\n\n            var dX = x2 - x1;\n            var dY = y2 - y1;\n            var dashes = Math.floor(Math.sqrt(dX * dX + dY * dY) / dashLen);\n            var dashX = dX / dashes;\n            var dashY = dY / dashes;\n\n            var q = 0;\n            while (q++ < dashes) {\n                x1 += dashX;\n                y1 += dashY;\n                ctx[q % 2 == 0 ? 'moveTo' : 'lineTo'](x1, y1);\n            }\n            ctx[q % 2 == 0 ? 'moveTo' : 'lineTo'](x2, y2);\n\n            ctx.restore();\n        }\n\n\n    \n\n        static doPath(ctx, x, y) {\n\n\n        \tvar i, len = x.length;\n        \tfor (i = 0; i < len; i++) {\n        \t\tx[i] = Math.round(x[i]);\n        \t\ty[i] = Math.round(y[i]);\n        \t}\n\n        \tctx.beginPath();\n        \tctx.moveTo(x[0], y[0]);\n        \tfor (i = 1; i < len; i++) {\n        \t\tctx.lineTo(x[i], y[i]);\n        \t}\n        \tctx.closePath();\n        }\n\n}\n\nGraphics.nucleotideColors={\n\t\"A\":\"green\",\n\t\"T\":\"red\",\n\t\"G\":\"gray\",\n\t\"C\":\"blue\",\n\t\"a\":\"green\",\n\t\"t\":\"red\",\n\t\"c\":\"blue\",\n\t\"g\":\"gray\"\n\n}\n\n\n\nexport {MLVTrack,MLVWigTrack,MLVBedTrack,RulerTrack,MLVBigBedTrack,Graphics}","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MLVTrack,Graphics,MLVWigTrack} from \"./tracks.js\";\nimport {BamSource,PairedAlignment} from \"./bam.js\";\nimport {Utils} from \"./utils.js\";\n\nvar alignmentRowYInset = 0;\nvar alignmentStartGap = 5;\nvar downsampleRowHeight = 5;\nconst DEFAULT_COVERAGE_TRACK_HEIGHT = 50;\n\n\n\n\n\n\n\nclass ATACBamTrack extends MLVTrack{\n    constructor(config) {\n        if (!config.color){\n            config.color=\"#D3D3D3\";\n        }\n        super(config);\n        this._setFeatureSource();\n        if (this.config.bigwig){\n            this.bigwig_track = new MLVWigTrack({\n                url:this.config.bigwig,\n                type:\"bigwig\",\n                discrete:true,\n                color:\"#D3D3D3\",\n                scale:\"dynamic\",\n                height:100\n            })\n        }\n    }\n\n\n    _setFeatureSource(){\n        this.feature_source=new BamSource(this.config,this);\n        //this.feature_source.setViewAsPairs(true);\n\t    //this.coverageTrack = new CoverageTrack(this.config, this);\n        //this.alignmentTrack = new AlignmentTrack(this.config, this);\n    }\n\n    getFeatures(chr, bpStart, bpEnd,force,data) {\n        /*if (bpEnd- bpStart>500000 && this.bigwig_track){\n            this.draw_bigwig=true;\n            return this.bigwig_track.getFeatures(chr, bpStart, bpEnd,force,data);\n        }\n        this.draw_bigwig=false;*/\n        return this.feature_source.getAlignments(chr, bpStart, bpEnd);\n    }\n\n\n}\n\nclass BAMTrack extends MLVTrack{\n\n    constructor(config) {\n        if (!config.color){\n            config.color=\"#D3D3D3\";\n        }\n        super(config);\n        this._setFeatureSource();\n        if (this.config.bigwig){\n            this.bigwig_track = new MLVWigTrack({\n                url:this.config.bigwig,\n                type:\"bigwig\",\n                discrete:true,\n                color:\"#D3D3D3\",\n                scale:\"dynamic\",\n                height:100\n            })\n        }\n\n        \n\n        this.config=config;\n\n        if(config.coverageTrackHeight === undefined) {\n            config.coverageTrackHeight = DEFAULT_COVERAGE_TRACK_HEIGHT;\n        }\n\n        \n\n        this.visibilityWindow = config.visibilityWindow || 30000;     // 30kb default\n\n        this.viewAsPairs = true;//config.viewAsPairs;\n\n        this.pairsSupported = config.pairsSupported === undefined ? true : false;\n\n        this.color = config.color || \"rgb(185, 185, 185)\";\n\n        // sort alignment rows\n        this.sortOption = config.sortOption || {sort: \"NUCLEOTIDE\"};\n        this.sortDirection = true;\n\n        // filter alignments\n        this.filterOption = config.filterOption || {name: \"mappingQuality\", params: [30, undefined]};\n        this.display_alignments=true;\n\n    }\n\n    _setFeatureSource(){\n        this.feature_source=new BamSource(this.config,this);\n        this.feature_source.setViewAsPairs(true);\n\n\t   this.coverageTrack = new CoverageTrack(this.config, this);\n        this.alignmentTrack = new AlignmentTrack(this.config, this);\n    }\n\n    getFeatures(chr, bpStart, bpEnd,force,data) {\n        if (bpEnd- bpStart>500000 && this.bigwig_track){\n            this.draw_bigwig=true;\n            return this.bigwig_track.getFeatures(chr, bpStart, bpEnd,force,data);\n        }\n        this.draw_bigwig=false;\n        return this.feature_source.getAlignments(chr, bpStart, bpEnd);\n    }\n\n    // Alt - Click to Sort alignment rows\n    altClick(genomicLocation, event) {\n\n        this.alignmentTrack.sortAlignmentRows(genomicLocation, this.sortOption);\n\n        this.trackView.redrawTile(this.featureSource.alignmentContainer);\n        $(this.trackView.viewportDiv).scrollTop(0);\n\n        this.sortDirection = !this.sortDirection;\n    };\n\n\n    /**\n     * Optional method to compute pixel height to accomodate the list of features.  The implementation below\n     * has side effects (modifiying the samples hash).  This is unfortunate, but harmless.\n     *\n     * @param features\n     * @returns {number}\n     */\n    computePixelHeight(alignmentContainer) {\n\n        return this.coverageTrack.computePixelHeight(alignmentContainer) +\n            this.alignmentTrack.computePixelHeight(alignmentContainer);\n\n    };\n\n    drawFeatures(options) {\n        this.top=options.top;\n        if (this.draw_zoom_in){\n            this.bottom=this.top+this.config.height;\n            return this.bottom;\n        }\n        if (this.draw_bigwig){\n            this.bottom=this.bigwig_track.drawFeatures(options);\n            return;\n        }\n        if(this.coverageTrack.height > 0) {\n            this.coverageTrack.draw(options);\n\n        }\n\n         this.bottom = this.alignmentTrack.draw(options);\n         return this.bottom;\n    };\n\n    paintAxis(ctx, pixelWidth, pixelHeight) {\n\n        this.coverageTrack.paintAxis(ctx, pixelWidth, this.coverageTrackHeight);\n\n    }\n    getFeatureAt(genomicLocation,chr,offset,bpPerPixel){\n        if (!this.feature_source.alignmentContainer){\n            return null;\n        }\n    \tvar packedAlignmentRows = this.feature_source.alignmentContainer.packedAlignmentRows,\n            downsampledIntervals = this.feature_source.alignmentContainer.downsampledIntervals,\n            packedAlignmentsIndex,\n            alignmentRow,\n            clickedObject,\n            i, len, tmp;\n        if (!packedAlignmentRows){\n            return null;\n        }\n        packedAlignmentsIndex = Math.floor(((offset.y -this.top-this.coverageTrack.height) - (alignmentRowYInset)) / this.config.featureHeight);\n\n        if (packedAlignmentsIndex < 0) {\n\n            for (i = 0, len = downsampledIntervals.length; i < len; i++) {\n\n\n                if (downsampledIntervals[i].start <= genomicLocation && (downsampledIntervals[i].end >= genomicLocation)) {\n                    clickedObject = downsampledIntervals[i];\n                    break;\n                }\n\n            }\n        }\n        else if (packedAlignmentsIndex < packedAlignmentRows.length) {\n\n            alignmentRow = packedAlignmentRows[packedAlignmentsIndex];\n\n            clickedObject = undefined;\n\n            for (i = 0, len = alignmentRow.alignments.length, tmp; i < len; i++) {\n\n                tmp = alignmentRow.alignments[i];\n\n                if (tmp.start <= genomicLocation && (tmp.start + tmp.lengthOnRef >= genomicLocation)) {\n                    clickedObject = tmp;\n                    break;\n                }\n\n            }\n        }\n\n        return clickedObject;\n\n    }\n\n\n    popupData(genomicLocation, xOffset, yOffset) {\n\n        if (yOffset >= this.coverageTrack.top && yOffset < this.coverageTrack.height) {\n            return this.coverageTrack.popupData(genomicLocation, xOffset, this.coverageTrack.top);\n        }\n        else {\n            return this.alignmentTrack.popupData(genomicLocation, xOffset, yOffset - this.alignmentTrack.top);\n        }\n\n    }\n\n    popupMenuItems(popover) {\n\n        var self = this,\n            html,\n            menuItems = [],\n            colorByMenuItems = [],\n            tagLabel = 'tag' + (self.alignmentTrack.colorByTag ? ' (' + self.alignmentTrack.colorByTag + ')' : ''),\n            selected;\n\n\n        colorByMenuItems.push({key: 'none', label: 'track color'});\n\n        if(!self.viewAsPairs) {\n            colorByMenuItems.push({key: 'strand', label: 'read strand'});\n        }\n        if (self.pairsSupported && self.alignmentTrack.hasPairs) {\n            colorByMenuItems.push({key: 'firstOfPairStrand', label: 'first-of-pair strand'});\n        }\n        colorByMenuItems.push({key: 'tag', label: tagLabel});\n\n        menuItems.push(igv.colorPickerMenuItem(popover, this.trackView));\n\n        menuItems.push('<div class=\"igv-track-menu-category igv-track-menu-border-top\">Color by</div>');\n\n        colorByMenuItems.forEach(function (item) {\n            selected = self.alignmentTrack.colorBy === item.key;\n            menuItems.push(colorByMarkup(item, selected));\n        });\n\n\n        html = [];\n        if (self.pairsSupported && self.alignmentTrack.hasPairs) {\n            html.push('<div class=\"igv-track-menu-item igv-track-menu-border-top\">');\n            html.push(true === self.viewAsPairs ? '<i class=\"fa fa-check fa-check-shim\">' : '<i class=\"fa fa-check fa-check-shim fa-check-hidden\">');\n            html.push('</i>');\n            html.push('View as pairs');\n            html.push('</div>');\n            menuItems.push({\n                object: $(html.join('')),\n                click: function () {\n                    var $fa = $(this).find('i');\n\n                    popover.hide();\n\n                    self.viewAsPairs = !self.viewAsPairs;\n\n                    if (true === self.viewAsPairs) {\n                        $fa.removeClass('fa-check-hidden');\n                    } else {\n                        $fa.addClass('fa-check-hidden');\n                    }\n\n                    self.featureSource.setViewAsPairs(self.viewAsPairs);\n                    self.trackView.update();\n                }\n            });\n        }\n\n        return menuItems;\n\n        function colorByMarkup(menuItem, showCheck, index) {\n\n            var parts = [],\n                item = {};\n\n\n            //parts.push((0 === index) ? '<div class=\\\"igv-track-menu-item igv-track-menu-border-top\\\">' : '<div class=\"igv-track-menu-item\">');\n            parts.push('<div class=\"igv-track-menu-item\">');\n\n            parts.push(showCheck ? '<i class=\"fa fa-check fa-check-shim\"></i>' : '<i class=\"fa fa-check fa-check-shim fa-check-hidden\"></i>');\n\n            //parts.push('<span>');\n            //parts.push('Color by: ');\n            //parts.push('</span>');\n\n            if (menuItem.key === 'tag') {\n                parts.push('<span id=\"color-by-tag\">');\n            } else {\n                parts.push('<span>');\n            }\n            parts.push(menuItem.label);\n            parts.push('</span>');\n\n            parts.push('</div>');\n\n            item.object = $(parts.join(''));\n\n            item.click = function () {\n\n                igv.popover.hide();\n\n                if ('tag' === menuItem.key) {\n\n                    igv.dialog.configure(function () {\n                            return \"Tag Name\"\n                        },\n\n                        self.alignmentTrack.colorByTag ? self.alignmentTrack.colorByTag : '',\n\n                        function () {\n                            var tag = igv.dialog.$dialogInput.val().trim();\n                            self.alignmentTrack.colorBy = 'tag';\n\n                            if(tag !== self.alignmentTrack.colorByTag) {\n                                self.alignmentTrack.colorByTag = igv.dialog.$dialogInput.val().trim();\n                                self.alignmentTrack.tagColors = new igv.PaletteColorTable(\"Set1\");\n                                $('#color-by-tag').text(self.alignmentTrack.colorByTag);\n                            }\n\n                            self.trackView.update();\n                        });\n\n                    igv.dialog.show($(self.trackView.trackDiv));\n\n                } else {\n                    self.alignmentTrack.colorBy = menuItem.key;\n                    self.trackView.update();\n                }\n            };\n\n            return item;\n        }\n    }\n\n\n   \n}\n\n function shadedBaseColor(qual, nucleotide, genomicLocation) {\n\n        var color,\n            alpha,\n            minQ = 5,   //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MIN),\n            maxQ = 20,  //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MAX);\n            foregroundColor =[0,255,255], //nucleotideColorComponents[nucleotide],\n            backgroundColor = [255, 255, 255];   // White\n\n\n        //if (171167156 === genomicLocation) {\n        //    // NOTE: Add 1 when presenting genomic location\n        //    console.log(\"shadedBaseColor - locus \" + igv.numberFormatter(1 + genomicLocation) + \" qual \" + qual);\n        //}\n\n        if (!foregroundColor) return;\n\n        if (qual < minQ) {\n            alpha = 0.1;\n        } else {\n            alpha = Math.max(0.1, Math.min(1.0, 0.1 + 0.9 * (qual - minQ) / (maxQ - minQ)));\n        }\n        // Round alpha to nearest 0.1\n        alpha = Math.round(alpha * 10) / 10.0;\n\n        if (alpha >= 1) {\n            color = Graphics.nucleotideColors[nucleotide];\n        }\n        else {\n            color = \"rgba(\" + foregroundColor[0] + \",\" + foregroundColor[1] + \",\" + foregroundColor[2] + \",\" + alpha + \")\";    //igv.getCompositeColor(backgroundColor, foregroundColor, alpha);\n        }\n        return color;\n    }\n\n\nclass CoverageTrack{\n\tconstructor(config, parent) {\n\n        this.parent = parent;\n        this.featureSource = parent.featureSource;\n       \n\n\n        this.height = 20;//config.coverageTrackHeight;\n        this.dataRange = {min: 0};   // Leav max undefined\n        \n    }\n\n    computePixelHeight(alignmentContainer) {\n        return this.height;\n    }\n\n    draw(options) {\n\n        var self = this,\n            alignmentContainer = options.features,\n            ctx = options.context,\n            bpPerPixel = options.bpPerPixel,\n            bpStart = options.bpStart,\n            pixelWidth = options.pixelWidth,\n            bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n            coverageMap = alignmentContainer.coverageMap,\n            bp,\n            x,\n            y,\n            w,\n            h,\n            refBase,\n            i,\n            len,\n            item,\n            accumulatedHeight,\n            sequence;\n\n        \n\n        if (coverageMap.refSeq) sequence = coverageMap.refSeq.toUpperCase();\n\n        this.dataRange.max = coverageMap.maximum;\n        var top =options.top;\n        options.top+=this.height;\n        // paint backdrop color for all coverage buckets\n        w = Math.max(1, Math.ceil(1.0 / bpPerPixel));\n        for (i = 0, len = coverageMap.coverage.length; i < len; i++) {\n\n            bp = (coverageMap.bpStart + i);\n            if (bp < bpStart) continue;\n            if (bp > bpEnd) break;\n\n            item = coverageMap.coverage[i];\n            if (!item) continue;\n\n            h = Math.round((item.total / this.dataRange.max) * this.height);\n            y = this.height - h;\n            x = Math.floor((bp - bpStart) / bpPerPixel);\n\n            Graphics.setProperties(ctx, {fillStyle: this.parent.config.color, strokeStyle: this.color});\n            Graphics.fillRect(ctx, x, y+top, w, h);\n        }\n\n        // coverage mismatch coloring -- don't try to do this in above loop, color bar will be overwritten when w<1\n        if (sequence) {\n            for (i = 0, len = coverageMap.coverage.length; i < len; i++) {\n\n                bp = (coverageMap.bpStart + i);\n                if (bp < bpStart) continue;\n                if (bp > bpEnd) break;\n\n                item = coverageMap.coverage[i];\n                if (!item) continue;\n\n                h = (item.total / this.dataRange.max) * this.height;\n                y = this.height - h;\n                x = Math.floor((bp - bpStart) / bpPerPixel);\n\n                refBase = sequence[i];\n                if (item.isMismatch(refBase)) {\n\n                    Graphics.setProperties(ctx, {fillStyle: Graphics.nucleotideColors[refBase]});\n                    Graphics.fillRect(ctx, x, y+top, w, h);\n\n                    accumulatedHeight = 0.0;\n                    [\"A\", \"C\", \"T\", \"G\"].forEach(function (nucleotide) {\n\n                        var count,\n                            hh;\n\n                        count = item[\"pos\" + nucleotide] + item[\"neg\" + nucleotide];\n\n\n                        // non-logoritmic\n                        hh = (count / self.dataRange.max) * self.height;\n\n                        y = (self.height - hh) - accumulatedHeight;\n                        accumulatedHeight += hh;\n\n                        Graphics.setProperties(ctx, {fillStyle: Graphics.nucleotideColors[nucleotide]});\n                        Graphics.fillRect(ctx, x, y+top, w, hh);\n                    });\n                }\n            }\n        }\n\n    }\n\n\n    popupData(genomicLocation, xOffset, yOffset) {\n\n        var coverageMap = this.featureSource.alignmentContainer.coverageMap,\n            coverageMapIndex,\n            coverage,\n            nameValues = [];\n\n\n        coverageMapIndex = genomicLocation - coverageMap.bpStart;\n        coverage = coverageMap.coverage[coverageMapIndex];\n\n        if (coverage) {\n\n\n            nameValues.push(igv.browser.referenceFrame.chr + \":\" + igv.numberFormatter(1 + genomicLocation));\n\n            nameValues.push({name: 'Total Count', value: coverage.total});\n\n            // A\n            tmp = coverage.posA + coverage.negA;\n            if (tmp > 0)  tmp = tmp.toString() + \" (\" + Math.floor(((coverage.posA + coverage.negA) / coverage.total) * 100.0) + \"%)\";\n            nameValues.push({name: 'A', value: tmp});\n\n\n            // C\n            tmp = coverage.posC + coverage.negC;\n            if (tmp > 0)  tmp = tmp.toString() + \" (\" + Math.floor((tmp / coverage.total) * 100.0) + \"%)\";\n            nameValues.push({name: 'C', value: tmp});\n\n            // G\n            tmp = coverage.posG + coverage.negG;\n            if (tmp > 0)  tmp = tmp.toString() + \" (\" + Math.floor((tmp / coverage.total) * 100.0) + \"%)\";\n            nameValues.push({name: 'G', value: tmp});\n\n            // T\n            tmp = coverage.posT + coverage.negT;\n            if (tmp > 0)  tmp = tmp.toString() + \" (\" + Math.floor((tmp / coverage.total) * 100.0) + \"%)\";\n            nameValues.push({name: 'T', value: tmp});\n\n            // N\n            tmp = coverage.posN + coverage.negN;\n            if (tmp > 0)  tmp = tmp.toString() + \" (\" + Math.floor((tmp / coverage.total) * 100.0) + \"%)\";\n            nameValues.push({name: 'N', value: tmp});\n\n        }\n\n\n        return nameValues;\n\n    }\n}\n\nclass AlignmentTrack{\n\tconstructor(config, parent) {\n\t    this.config=config;\n\n        this.parent = parent;\n        this.featureSource = parent.feature_source;\n     \n        this.alignmentRowHeight = config.alignmentRowHeight || 6;\n\n        this.negStrandColor = config.negStrandColor || \"rgba(150, 150, 230, 0.75)\";\n        this.posStrandColor = config.posStrandColor || \"rgba(230, 150, 150, 0.75)\";\n        this.insertionColor = config.insertionColor || \"rgb(138, 94, 161)\";\n        this.deletionColor = config.deletionColor || \"black\";\n        this.skippedColor = config.skippedColor || \"rgb(150, 170, 170)\";\n\n        this.colorBy = config.colorBy || \"none\";\n        this.colorByTag = config.colorByTag;\n        this.bamColorTag = config.bamColorTag === undefined ? \"YC\" : config.bamColorTag;\n\n        // sort alignment rows\n        this.sortOption = config.sortOption || {sort: \"NUCLEOTIDE\"};\n\n        this.sortDirection = true;\n\n        this.hasPairs = false;   // Until proven otherwise\n\n    }\n\n    computePixelHeight(alignmentContainer) {\n\n        if (alignmentContainer.packedAlignmentRows) {\n            var h = 0;\n            if (alignmentContainer.hasDownsampledIntervals()) {\n                h += downsampleRowHeight + alignmentStartGap;\n            }\n            return h + (this.config.featureHeight * alignmentContainer.packedAlignmentRows.length) + 5;\n        }\n        else {\n            return this.height;\n        }\n\n    }\n\n    draw(options) {\n\n        var self = this,\n            alignmentContainer = options.features,\n            ctx = options.context,\n            bpPerPixel = options.bpPerPixel,\n            bpStart = options.bpStart,\n            pixelWidth = options.pixelWidth,\n            bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n            packedAlignmentRows = alignmentContainer.packedAlignmentRows,\n            sequence = alignmentContainer.sequence,\n            base_text=\"normal \"+(this.config.featureHeight-2)+\"px Arial\";\n        if (!packedAlignmentRows){\n            return;\n        }\n        let top = options.top;\n        if (sequence) {\n            sequence = sequence.toUpperCase();\n        }\n\n        if (alignmentContainer.hasDownsampledIntervals()) {\n            alignmentRowYInset = downsampleRowHeight + alignmentStartGap;\n\n            alignmentContainer.downsampledIntervals.forEach(function (interval) {\n                var xBlockStart = (interval.start - bpStart) / bpPerPixel,\n                    xBlockEnd = (interval.end - bpStart) / bpPerPixel;\n\n                if (xBlockEnd - xBlockStart > 5) {\n                    xBlockStart += 1;\n                    xBlockEnd -= 1;\n                }\n                Graphics.fillRect(ctx, xBlockStart, 2, (xBlockEnd - xBlockStart), downsampleRowHeight - 2, {fillStyle: \"black\"});\n            })\n\n        }\n        else {\n            alignmentRowYInset = 3;\n        }\n\n        if (packedAlignmentRows) {\n\n            packedAlignmentRows.forEach(function renderAlignmentRow(alignmentRow, i) {\n\n                var yRect = alignmentRowYInset + (self.config.featureHeight * i)+top,\n                    alignmentHeight = self.config.featureHeight - 2,\n                    i,\n                    b,\n                    alignment;\n\n                for (i = 0; i < alignmentRow.alignments.length; i++) {\n\n                    alignment = alignmentRow.alignments[i];\n\n                    self.hasPairs = self.hasPairs || alignment.isPaired();\n\n                    if ((alignment.start + alignment.lengthOnRef) < bpStart) continue;\n                    if (alignment.start > bpEnd) break;\n\n\n                    if (true === alignment.hidden) {\n                        continue;\n                    }\n\n                    if (alignment instanceof PairedAlignment) {\n\n                        drawPairConnector(alignment, yRect, alignmentHeight);\n\n                        drawSingleAlignment(alignment.firstAlignment, yRect, alignmentHeight);\n\n                        if (alignment.secondAlignment) {\n                            drawSingleAlignment(alignment.secondAlignment, yRect, alignmentHeight);\n                        }\n\n                    }\n                    else {\n                        drawSingleAlignment(alignment, yRect, alignmentHeight);\n                    }\n\n                }\n            });\n        }\n\n\n        // alignment is a PairedAlignment\n        function drawPairConnector(alignment, yRect, alignmentHeight) {\n\n\n            var alignmentColor = self.getAlignmentColor(alignment.firstAlignment),\n                outlineColor = alignmentColor,\n                xBlockStart = (alignment.connectingStart - bpStart) / bpPerPixel,\n                xBlockEnd = (alignment.connectingEnd - bpStart) / bpPerPixel,\n                yStrokedLine = yRect + alignmentHeight / 2;\n            \n            if ((alignment.connectingEnd) < bpStart || alignment.connectingStart > bpEnd) return;\n\n            if (alignment.mq <= 0) {\n                alignmentColor = Utils.addAlphaToRGB(alignmentColor, \"0.15\");\n            }\n\n            Graphics.setProperties(ctx, {fillStyle: alignmentColor, strokeStyle: outlineColor});\n\n            Graphics.strokeLine(ctx, xBlockStart, yStrokedLine, xBlockEnd, yStrokedLine);\n\n        }\n\n\n        function drawSingleAlignment(alignment, yRect, alignmentHeight) {\n        \n\n            var alignmentColor = self.getAlignmentColor(alignment),\n                outlineColor = alignmentColor,\n                lastBlockEnd,\n                blocks = alignment.blocks,\n                block,\n                b;\n\n                 \n           if (!alignmentColor){\n            alignmentColor=\"gray\";\n        }\n      \n            if ((alignment.start + alignment.lengthOnRef) < bpStart || alignment.start > bpEnd) return;\n\n            if (alignment.mq <= 0) {\n                alignmentColor = Utils.addAlphaToRGB(alignmentColor, \"0.15\");\n            }\n\n            Graphics.setProperties(ctx, {fillStyle: alignmentColor, strokeStyle: outlineColor});\n\n            for (b = 0; b < blocks.length; b++) {   // Can't use forEach here -- we need ability to break\n\n                block = blocks[b];\n\n                if ((block.start + block.len) < bpStart) continue;\n\n                drawBlock(block);\n\n                if ((block.start + block.len) > bpEnd) break;  // Do this after drawBlock to insure gaps are drawn\n\n\n                if (alignment.insertions) {\n                    alignment.insertions.forEach(function (block) {\n                        var refOffset = block.start - bpStart,\n                            xBlockStart = refOffset / bpPerPixel - 1,\n                            widthBlock = 3;\n                        Graphics.fillRect(ctx, xBlockStart, yRect - 1, widthBlock, alignmentHeight + 2, {fillStyle: self.insertionColor});\n                    });\n                }\n\n            }\n\n            function drawBlock(block) {\n                var seqOffset = block.start - alignmentContainer.start,\n                    xBlockStart = (block.start - bpStart) / bpPerPixel,\n                    xBlockEnd = ((block.start + block.len) - bpStart) / bpPerPixel,\n                    widthBlock = Math.max(1, xBlockEnd - xBlockStart),\n                    widthArrowHead = self.config.featureHeight / 2.0,\n                    blockSeq = block.seq.toUpperCase(),\n                    skippedColor = self.skippedColor,\n                    deletionColor = self.deletionColor,\n                    refChar,\n                    readChar,\n                    readQual,\n                    xBase,\n                    widthBase,\n                    colorBase,\n                    x,\n                    y,\n                    i,\n                    yStrokedLine = yRect + alignmentHeight / 2;\n\n                if (block.gapType !== undefined && xBlockEnd !== undefined && lastBlockEnd !== undefined) {\n                    if (\"D\" === block.gapType) {\n                        Graphics.strokeLine(ctx, lastBlockEnd, yStrokedLine, xBlockStart, yStrokedLine, {strokeStyle: deletionColor});\n                    }\n                    else {\n                        Graphics.strokeLine(ctx, lastBlockEnd, yStrokedLine, xBlockStart, yStrokedLine, {strokeStyle: skippedColor});\n                    }\n                }\n                lastBlockEnd = xBlockEnd;\n\n                if (true === alignment.strand && b === blocks.length - 1) {\n                    // Last block on + strand\n                    x = [\n                        xBlockStart,\n                        xBlockEnd,\n                        xBlockEnd + widthArrowHead,\n                        xBlockEnd,\n                        xBlockStart,\n                        xBlockStart];\n                    y = [\n                        yRect,\n                        yRect,\n                        yRect + (alignmentHeight / 2.0),\n                        yRect + alignmentHeight,\n                        yRect + alignmentHeight,\n                        yRect];\n                    Graphics.fillPolygon(ctx, x, y, {fillStyle: alignmentColor});\n                    if (alignment.mq <= 0) {\n                        Graphics.strokePolygon(ctx, x, y, {strokeStyle: outlineColor});\n                    }\n                }\n                else if (false === alignment.strand && b === 0) {\n                    // First block on - strand\n                    x = [\n                        xBlockEnd,\n                        xBlockStart,\n                        xBlockStart - widthArrowHead,\n                        xBlockStart,\n                        xBlockEnd,\n                        xBlockEnd];\n                    y = [\n                        yRect,\n                        yRect,\n                        yRect + (alignmentHeight / 2.0),\n                        yRect + alignmentHeight,\n                        yRect + alignmentHeight,\n                        yRect];\n                    Graphics.fillPolygon(ctx, x, y, {fillStyle: alignmentColor});\n                    if (alignment.mq <= 0) {\n                        Graphics.strokePolygon(ctx, x, y, {strokeStyle: outlineColor});\n                    }\n                }\n                else {\n                    //      igv.graphics.fillRect(ctx, xBlockStart, yRect, widthBlock, height, {fillStyle: \"white\"});\n                    Graphics.fillRect(ctx, xBlockStart, yRect, widthBlock, alignmentHeight, {fillStyle: alignmentColor});\n                    if (alignment.mq <= 0) {\n                        ctx.save();\n                        ctx.strokeStyle = outlineColor;\n                        ctx.strokeRect(xBlockStart, yRect, widthBlock, alignmentHeight);\n                        ctx.restore();\n                    }\n                }\n                // Only do mismatch coloring if a refseq exists to do the comparison\n                if (sequence && blockSeq !== \"*\") {\n                    for (var i = 0, len = blockSeq.length; i < len; i++) {\n                        readChar = blockSeq.charAt(i);\n                        refChar = sequence.charAt(seqOffset + i);\n                        if (readChar === \"=\") {\n                            readChar = refChar;\n                        }\n                        if (readChar === \"X\" || refChar !== readChar) {\n                            if (block.qual && block.qual.length > i) {\n                                readQual = block.qual[i];\n                                colorBase = shadedBaseColor(readQual, readChar, i + block.start);\n                            }\n                            else {\n                                colorBase = Graphics.nucleotideColors[readChar];\n                            }\n                            if (colorBase) {\n                                xBase = ((block.start + i) - bpStart) / bpPerPixel;\n                                widthBase = Math.max(1, 1 / bpPerPixel);\n                                if (bpPerPixel<0.15){\n                                  Graphics.strokeText(ctx, readChar, xBase+widthBase/2, yRect+2, {\n                                    strokeStyle: colorBase,\n                                    font: base_text,\n                                    textAlign: 'center',\n                                    textBaseline:'hanging'\n                                });\n                                }\n                                else{\n                                Graphics.fillRect(ctx, xBase, yRect, widthBase, alignmentHeight, {fillStyle: colorBase});\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return alignmentRowYInset + (self.config.featureHeight * packedAlignmentRows.length)+top;\n\n    }\n\n    sortAlignmentRows(genomicLocation, sortOption) {\n\n        var self = this,\n            alignmentContainer = this.featureSource.alignmentContainer,\n            alignmentRows = alignmentContainer.packedAlignmentRows;\n\n        alignmentRows.forEach(function (alignmentRow) {\n            alignmentRow.updateScore(genomicLocation, alignmentContainer, sortOption);\n        });\n\n        alignmentRows.sort(function (a, b) {\n            return self.sortDirection ? a.score - b.score : b.score - a.score;\n        });\n\n    }\n\n    static doSortAlignmentRows(genomicLocation, genomicInterval, sortOption, sortDirection) {\n\n        var alignmentRows = genomicInterval.packedAlignmentRows,\n            sequence = genomicInterval.sequence;\n\n        if (sequence) {\n            sequence = sequence.toUpperCase();\n        } else {\n            console.log(\"No sequence, no traversal. No discussion!\");\n            return;\n        }\n\n        alignmentRows.forEach(function (alignmentRow) {\n            alignmentRow.updateScore(genomicLocation, genomicInterval, sortOption);\n        });\n\n        alignmentRows.sort(function (a, b) {\n            return sortDirection ? a.score - b.score : b.score - a.score;\n        });\n\n    }\n\n    popupData(genomicLocation, xOffset, yOffset) {\n\n        var packedAlignmentRows = this.featureSource.alignmentContainer.packedAlignmentRows,\n            downsampledIntervals = this.featureSource.alignmentContainer.downsampledIntervals,\n            packedAlignmentsIndex,\n            alignmentRow,\n            clickedObject,\n            i, len, tmp;\n\n        packedAlignmentsIndex = Math.floor((yOffset - (alignmentRowYInset)) / this.config.featureHeight);\n\n        if (packedAlignmentsIndex < 0) {\n\n            for (i = 0, len = downsampledIntervals.length; i < len; i++) {\n\n\n                if (downsampledIntervals[i].start <= genomicLocation && (downsampledIntervals[i].end >= genomicLocation)) {\n                    clickedObject = downsampledIntervals[i];\n                    break;\n                }\n\n            }\n        }\n        else if (packedAlignmentsIndex < packedAlignmentRows.length) {\n\n            alignmentRow = packedAlignmentRows[packedAlignmentsIndex];\n\n            clickedObject = undefined;\n\n            for (i = 0, len = alignmentRow.alignments.length, tmp; i < len; i++) {\n\n                tmp = alignmentRow.alignments[i];\n\n                if (tmp.start <= genomicLocation && (tmp.start + tmp.lengthOnRef >= genomicLocation)) {\n                    clickedObject = tmp;\n                    break;\n                }\n\n            }\n        }\n\n        if (clickedObject) {\n            return clickedObject.popupData(genomicLocation);\n        }\n        else {\n            return [];\n        }\n\n    };\n\n\n    getAlignmentColor(alignment) {\n       \n        if (this.parent.color_function){\n            return this.parent.color_function(alignment);\n        }\n\n        var alignmentTrack = this,\n            option = alignmentTrack.colorBy,\n            tagValue, color,\n            strand;\n\n        color = alignmentTrack.parent.config.color; // default\n\n        switch (option) {\n\n            case \"strand\":\n                color = alignment.strand ? alignmentTrack.posStrandColor : alignmentTrack.negStrandColor;\n                break;\n            case \"firstOfPairStrand\":\n\n                if(alignment instanceof PairedAlignment) {\n                    color = alignment.firstOfPairStrand() ? alignmentTrack.posStrandColor : alignmentTrack.negStrandColor;\n                }\n                else if (alignment.isPaired()) {\n\n                    if (alignment.isFirstOfPair()) {\n                        color = alignment.strand ? alignmentTrack.posStrandColor : alignmentTrack.negStrandColor;\n                    }\n                    else if (alignment.isSecondOfPair()) {\n                        color = alignment.strand ? alignmentTrack.negStrandColor : alignmentTrack.posStrandColor;\n                    }\n                    else {\n                        console.log(\"ERROR. Paired alignments are either first or second.\")\n                    }\n                }\n                break;\n\n            case \"tag\":\n\n                tagValue = alignment.tags()[alignmentTrack.colorByTag];\n                if (tagValue !== undefined) {\n\n                    if (alignmentTrack.bamColorTag === alignmentTrack.colorByTag) {\n                        // UCSC style color option\n                        color = \"rgb(\" + tagValue + \")\";\n                    }\n                    else {\n                        color = alignmentTrack.tagColors.getColor(tagValue);\n                    }\n                }\n                break;\n            default:\n                color = alignmentTrack.parent.config.color;\n        }\n        return color;\n\n    }\n\n}\n\n\n\nBAMTrack.filters = {\n\n        noop: function () {\n            return function (alignment) {\n                return false;\n            };\n        },\n\n        strand: function (strand) {\n            return function (alignment) {\n                return alignment.strand === strand;\n            };\n        },\n\n        mappingQuality: function (lower, upper) {\n            return function (alignment) {\n\n                if (lower && alignment.mq < lower) {\n                    return true;\n                }\n\n                if (upper && alignment.mq > upper) {\n                    return true;\n                }\n\n                return false;\n            }\n        }\n    };\n\nMLVTrack.custom_tracks[\"bam\"]=BAMTrack;\n\nMLVTrack.track_types[\"bam\"]={\n\t\"class\":BAMTrack,\n\tname:\"BAM\"\n}\n\nexport {BAMTrack,CoverageTrack,AlignmentTrack};\n","\nimport {BamFeatureReader} from \"./bam.js\";\nimport {MLVTrack} from \"./tracks.js\";\n\nclass BamSCATrack extends MLVTrack{\n\n    constructor(config){\n        super(config);\n        this.catNumbers={};\n        this.config.scale= this.config.scale || 0.1;\n        this.config.size_filter = this.config.size_filter=50;\n        this.config.size_filter_on = this.config.size_filter_on===undefined?false:config.size_filter_on\n        if (!this.config.tag){\n            this.config.tag=\"CB\";\n        }\n        \n\n        this.feature_source= new BamFeatureReader(this.config);\n        this.setFragmentSizeFilter();\n\n    }\n    addIndex(index){\n        this.feature_source.catIndex=index;\n    }\n\n    getIdsInRange(range){\n        return this.feature_source.getIdsInRange(range);\n    }\n\n    filterReads(filter,localFilter){\n        this.feature_source.setFilter(filter,localFilter);\n        this.feature_source.calculateCategories();\n    }\n    \n    /**\n    * sets the categories with\n    * @param {Uint8Array} data The array holding the data\n    * @param {Array} names a list of names  \n    * @param {Array} colors an array of colors\n    */\n    setCategories(col,data,names,colors,calculate=false,overideCatNumbers=false){\n       \n        if (col == null){\n            this.feature_source.setCategories(null,null);\n        }\n         //work out the number of cells in each category if\n        //not already calculated - needed for average reads per cell\n        //value is cached\n        if (!(this.catNumbers[col]) || overideCatNumbers){\n            const arr = new Array(names.length).fill(0);\n            for(let i=0;i<data.length;i++){\n                arr[data[i]]++\n            }\n            this.catNumbers[col]=arr;  \n        }\n        this.numbers = this.catNumbers[col];      \n        this.feature_source.setCategories(data,names);\n        this.catColors=colors;\n        this.catNames=names;\n        if (calculate){\n            this.feature_source.calculateCategories();\n        }\n    }\n\n    setFragmentSizeFilter(on,size){\n        if (on  || on === false){\n            this.config.size_filter_on=on;\n        }\n        if (size){\n            this.config.size_filter=size;\n        }\n        this.feature_source.size_filter_on=this.config.size_filter_on;\n        this.feature_source.size_filter=this.config.size_filter;\n   \n\n    }\n    \n\n    async getFeatures(chr,bpStart,bpEnd,force,data){\n        if (bpEnd-bpStart>40000){\n            return \"zoom in to see coverage\";\n        }\n        try{\n            const features = await this.feature_source.getAlignments(chr,bpStart,bpEnd);\n            return features;\n        }catch(error){\n            return error.message;\n        }\n       \n    }\n\n    drawScale(height,ctx,defaultColor){\n        let top=this.top;\n        const ind_track_height=Math.round(this.config.height/this.catNames.length);\n        ctx.strokeStyle=defaultColor;\n        ctx.fillStyle=defaultColor;\n        for (let name of this.catNames){\n            let bot = top+ind_track_height;         \n            ctx.beginPath();\n            ctx.moveTo(0,top);\n            ctx.lineTo(0,bot);\n            ctx.moveTo(0,top);\n            ctx.lineTo(20,top);\n            ctx.moveTo(0,bot);\n            ctx.lineTo(20,bot);\n            ctx.font=\"12px Arial\";\n            ctx.stroke();\n            ctx.textBaseline=\"top\";      \n            let num = this.config.scale     \n            ctx.fillText(num.toFixed(2),20,top);\n            ctx.font=\"14px Arial\";\n            ctx.textBaseline=\"middle\";\n            ctx.fillText(name,2,top+(ind_track_height/2));\n            ctx.font=\"12px Arial\";\n            top+=ind_track_height;\n        }\n     }\n\n    drawFeatures(options){     \n        //experimental\n        //this.numbers = [1,1,1]     \n        //this.feature_source.setCategories(data,names);\n        //this.catColors=[\"red\",\"green\",\"blue\"];\n        \n\n        \n        var feature = options.features,\n        ctx = options.context,\n        bpPerPixel = options.bpPerPixel,\n        bpStart = options.bpStart,\n        pixelWidth = options.pixelWidth,h,y,x;        \n        //bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\n        const st = bpStart-feature.store[1];\n        const en = st+ (pixelWidth * bpPerPixel) + 1;\n        const ind_track_height=Math.round(this.config.height/feature.length);\n        let max=this.config.scale;\n\n        let top = options.top;\n        this.top=options.top;\n\t\tlet w = Math.max(1, Math.ceil(1.0 / bpPerPixel));\n        let step = bpPerPixel>5?5:1;\n        for (let n=0;n<feature.length;n++){\n                let arr = feature[n];\n                \n                ctx.fillStyle=this.catColors[n];\n\t\t\t\t\t\n\t\t\t\t\tfor (let i = st; i < en; i+=step) {\n\n\t\t\t\t\t\tlet bp = i+feature.store[1];\n                        if (arr[i]===-0){\n                           continue;\n                        }\n\t\t\t\t\t\th = Math.round((((arr[i]/this.numbers[n])) / max) * ind_track_height);\n                        h=h>ind_track_height?ind_track_height:h;\n\t\t\t\t\t\ty = ind_track_height - h;\n\t\t\t\t\t\tx = Math.floor((bp - bpStart) / bpPerPixel);\n\t\t\t\t\t\tctx.fillRect( x, y+top, w,h);\n\t\t\t\t    }\n                top += ind_track_height;  \n            }\t\t\n    }\n\n    \n    getSettings(panel){\n        const s= super.getSettings(panel)\n        return s.concat([\n        {\n            label:\"Fragment Size Filter\",\n            type:\"check\",\n        \n            current_value:this.config.size_filter_on, \n            func:(x)=>{\n                this.setFragmentSizeFilter(x);\n                this.feature_source.calculateCategories();\n                panel.update();\n            }\n        },\n            {\n\n            type:\"slider\",\n            min:0,\n            max:300,\n            step:1,\n            label:\"Fragment Size\",\n            current_value:this.config.size_filter,\n            func:x=>{\n                this.setFragmentSizeFilter(null,x);\n                this.feature_source.calculateCategories();\n                panel.update();\n\n            }\n        },{\n            type:\"slider\",\n            min:0,\n            max:1,\n            label:\"Scale (cov/no cells)\",\n            current_value:this.config.scale,\n            func:x=>{\n                this.config.scale=x;\n               \n                panel.update()\n            }\n        }]);\n    }\n}\n\nMLVTrack.track_types[\"bam_sca_track\"]={\n\t\"class\":BamSCATrack,\n\tname:\"BAM SCA Track\"\n\n}\n\nexport default BamSCATrack","import {TabixBedFeatureSource} from \"../feature.js\";\nimport {MLVBedTrack,MLVTrack} from \"../tracks.js\";\n\nlet decode_function= function(tokens,feature){\n    //extract interactions with the first token\n    feature.data= [parseInt(tokens[0])];\n    feature.end1= parseInt(tokens[1]);\n    feature.start2= parseInt(tokens[2]);\n    feature.val= parseFloat(tokens[3]);\n}\n\nclass InteractionTrack extends MLVBedTrack{\n    _setFeatureSource(){\n        this.feature_source = new TabixBedFeatureSource(this.config,decode_function);\n    }\n\n\n\n    getFeatureAt(gl, chr, coord, bpPerPixel,ctx){\n        const d=  ctx.getImageData(coord.x, coord.y, 1, 1).data;\n        if (d[0]!==0 || d[1]!==0 || d[2]!==255){\n            return null;\n        }\n        \n        const tol = bpPerPixel;\n        const inters=[];\n\n        const fts = this.feature_source.featureCache.queryFeatures(chr,gl-tol,gl+tol);\n        for (let f of fts){\n            if (gl>=f.start-tol && gl <= f.end1+tol){\n                inters.push(f);\n            }\n            else if (gl>=f.start2-tol && gl <=f.end+tol){\n                inters.push(f)\n            }\n        }\n        return inters.length>0?inters:null;\n    }\n\n    onFeatureOver(container,{track,feature,event}){\n        this.drawCurves({\n            ctx:container.ctx,\n            features:feature,\n            bpStart:container.start,\n            yOffset:container.yOffset,\n            bpEnd:container.end,\n            bpPerPixel:(container.end-container.start)/container.canvas.width,\n            color:\"red\",\n            region:false\n        })\n    }\n\n    onFeatureOut(container,{track,feature,event}){\t\n        this.drawCurves({\n            ctx:container.ctx,\n            features:feature,\n            yOffset:container.yOffset,\n            bpStart:container.start,\n            bpEnd:container.end,\n            bpPerPixel:(container.end-container.start)/container.canvas.width,\n            region:false\n        });\n    }\n\n    getSettings(panel){\n        const s= super.getSettings(panel);\n        const v = this.config.value;\n        return s.concat([\n        /*{\n            label:v.name,\n            type:\"doubleslider\",\n            min:v.extent[0],\n            max:v.extent[1],\n            doc:panel.__doc__ || document,\n        \n            current_value:v.cutoff, \n            func:(x,y)=>{\n                v.cutoff=[x,y];\n                panel.update();\n            }\n        },\n        {\n            label:\"Length (kb\",\n            type:\"doubleslider\",\n            min:0,\n            max:1000,\n            doc:panel.__doc__ || document,\n        \n            current_value:this.config.range, \n            func:(x,y)=>{\n                this.config.range=[x,y];\n                panel.update();\n            }\n        },*/\n    {\n        type:\"check\",\n        label:\"Only show local\",\n        current_value:this.config.onlyShowLocal,\n        func:(x)=>{\n            this.config.onlyShowLocal=x;\n            panel.update();\n        }\n\n    }]);\n    }\n\n\n    drawCurves({ctx,features,bpStart,bpPerPixel,color,region,pixelWidth,yOffset=0}){\n\n        //filtering based on config\n      \n        const bpEnd= pixelWidth*bpPerPixel+bpStart;\n        const bottom = this.bottom+yOffset;\n        const c_bottom= bottom-6;\n        const local = this.config.onlyShowLocal;\n        if (this.config.value){\n            const mm= this.config.value.cutoff;\n            const minr= this.config.range[0]*1000;\n            const maxr= this.config.range[1]*1000;\n            const local = this.config.onlyShowLocal;\n            features = features.filter(x=>x.val>mm[0] && x.val<mm[1] && x.end-x.start>minr && x.end-x.start<maxr && (!local || (x.end1>bpStart && x.start2<bpEnd)));\n        }\n       \n        let mod=1;\n        if (features.length>2000 && !this.filter_function){\n            //mod += Math.floor(features.length/2000);\n        }\n        ctx.beginPath();\n        \n        let drawn=0;\n        for (let n=0;n<features.length;n+=mod){\n            const feature = features[n];\n            if ((this.filter_function && !this.filter_function(feature)) || (local && (feature.end>bpEnd || feature.start<bpStart))){\n                feature.display=false;\n                continue;\n            }\n            let st1 = (feature.start-bpStart)/bpPerPixel;\n            const en1 = (feature.end1-bpStart)/bpPerPixel;\n            let st2 = (feature.start2-bpStart)/bpPerPixel;\n            const en2 = (feature.end-bpStart)/bpPerPixel;\n            const p1 = st1+(en1-st1)/2;\n            let p2 = st2+(en2-st2)/2;\n            let h = ((feature.end-feature.start)/(bpPerPixel*200))*this.config.height;\n            h=h>this.config.height*1.2?this.config.height*1.2:h;\n            h = h<10?10:h;\n            const c = color?color:this.color_function?this.color_function(feature):\"gray\";\n            ctx.strokeStyle=c;\n            ctx.beginPath();\n            ctx.moveTo(p1,c_bottom);\n            if(p2-p1 <3){\n                p2=p1+3;\n            }\n            \n            const mp = p1+(p2-p1)/2;\n            ctx.bezierCurveTo(mp,c_bottom-h,mp,c_bottom-h,p2,c_bottom);\n            ctx.stroke();\n            drawn++;\t\n            \n            if (region){\n                ctx.fillStyle=\"blue\";\n                let w = en1-st1;\n                if (w<5){\n                    w=5;\n                    st1-=2;\n                }\n                \n\n                ctx.fillRect(st1,this.bottom-6,w,6);\n                w=en2-st2;\n                if (w<5){\n                    w=5;\n                    st2-=2;\n                }\n                ctx.fillRect(st2,this.bottom-6,w,6);\n            }\n        \n        }\n        \n    }\n\n    drawFeatures(options){\n        this.drawCurves({\n            ctx:options.context,\n            features:options.features,\n            bpStart:options.bpStart,\n            bpPerPixel:options.bpPerPixel,\n            region:true,\n            pixelWidth:options.pixelWidth\n        });\n        \n    }\n}\n\nMLVTrack.track_types[\"interaction_track\"]={\n    \"class\":InteractionTrack\n}\nexport default InteractionTrack;\n\n","import { BaseDialog } from \"./Dialog.js\";\nimport { createEl, createFilterElement } from \"./Elements.js\";\nimport noUiSlider, { create } from \"nouislider\";\n// import lgui from 'lil-gui';\nimport { action } from \"mobx\";\n\nclass SettingsDialog extends BaseDialog {\n    constructor(config, content) {\n        const originalOnClose = config.onclose;\n        config.onclose = () => {\n            if (originalOnClose) originalOnClose();\n            if (config.chart)\n                config.chart.dialogs.splice(\n                    config.chart.dialogs.indexOf(this),\n                    1,\n                );\n        };\n        super(config, content);\n    }\n\n    init(content) {\n        if (!this.controls) this.controls = [];\n        const parent = this.dialog;\n        //experimental lil-gui version...\n        // this.initLilGui(content);\n        // return;\n        for (const s of content) {\n            const d = createEl(\n                \"div\",\n                {\n                    styles: {\n                        // padding:\"5px\"\n                    },\n                },\n                parent,\n            );\n            if (s.type !== \"button\") {\n                createEl(\"label\", { text: s.label }, d);\n            }\n\n            if (s.info) {\n                this.addInfoIcon(s.info, d);\n            }\n            //not sure  why assign a varaiable\n            //'this' no longer available in function call - causing problems\n            //const factory = this[s.type];\n            if (!this[s.type]) {\n                console.warn(\n                    `SettingsDialog doesn't have a method '${s.type}'`,\n                );\n                continue;\n            }\n            if (this.config.useMobx && s.func) {\n                //mobx complains about mutating state outside of actions\n                // we could check whether we'd already wrapped the function, but getSettings() returns a new object each time\n                s.func = action(`${s.label} <action>`, s.func);\n            }\n            this.controls[s.label] = this[s.type](s, d); //this is going to go wrong if the label isn't unique - like if we have multiple similar layers\n        }\n    }\n    initLilGui(content) {\n        const gui = new lgui({ container: this.dialog });\n        //gui.name = this.config.title + \" Settings\";\n        for (const s of content) {\n            switch (s.type) {\n                case \"dropdown\":\n                    gui.add(\n                        s,\n                        \"current_value\",\n                        s.values[0].map((c) => c[s.values[1]]),\n                    )\n                        .name(s.label)\n                        .onChange(s.func);\n                    break;\n                case \"check\":\n                    if (s.current_value === undefined) s.current_value = false;\n                    gui.add(s, \"current_value\").name(s.label).onChange(s.func);\n                    break;\n                case \"button\":\n                    gui.add(s, \"func\").name(s.label);\n                    break;\n                case \"slider\":\n                    gui.add(s, \"current_value\", s.min, s.max)\n                        .name(s.label)\n                        .onChange(s.func);\n                    break;\n                case \"spinner\":\n                    gui.add(s, \"current_value\", s.min, s.max)\n                        .name(s.label)\n                        .onChange(s.func);\n                    break;\n                case \"radiobuttons\":\n                    gui.add(s, \"current_value\", s.choices)\n                        .name(s.label)\n                        .onChange(s.func);\n                    break;\n                default:\n                    gui.add(s, \"current_value\").name(s.label).onChange(s.func);\n            }\n        }\n    }\n\n    /** TODO */\n    folder(s, d) {\n        this.init(s.current_value);\n    }\n    spinner(s, d) {\n        const sp = createEl(\n            \"input\",\n            {\n                type: \"number\",\n                value: s.current_value,\n                max: s.max || null,\n                min: s.min || 0,\n                step: s.step || 1,\n            },\n            d,\n        );\n        sp.addEventListener(\"change\", (e) => {\n            s.func(Number.parseInt(sp.value));\n        });\n    }\n    radiobuttons(s, d) {\n        // createEl(\"br\",{},d);\n        const d1 = createEl(\n            \"div\",\n            {\n                classes: [\"ciview-radio-group\"],\n            },\n            d,\n        );\n        for (const c of s.choices) {\n            createEl(\n                \"span\",\n                {\n                    text: c[0],\n                },\n                d1,\n            );\n            const rb = createEl(\n                \"input\",\n                {\n                    type: \"radio\",\n                    name: s.label,\n                    value: c[1],\n                },\n                d1,\n            );\n            rb.checked = s.current_value === c[1];\n            rb.addEventListener(\"click\", (e) => {\n                s.func(e.currentTarget.value);\n            });\n        }\n    }\n\n    colorChooser(s, d) {\n        const cc = createEl(\n            \"input\",\n            {\n                type: \"color\",\n                value: s.current_value,\n            },\n            d,\n        );\n        cc.addEventListener(\"change\", (e) => {\n            s.func(cc.value);\n        });\n    }\n\n    button(s, d) {\n        d.style.textAlign = \"center\";\n        createEl(\n            \"button\",\n            {\n                classes: [\"ciview-button\"],\n                text: s.label,\n            },\n            d,\n        ).addEventListener(\"click\", (e) => {\n            s.func();\n        });\n    }\n\n    slider(s, d) {\n        const sl = createEl(\"div\", {}, d);\n        noUiSlider.create(sl, {\n            start: [s.current_value || 0],\n            range: {\n                min: [s.min || 0],\n                max: [s.max || 1],\n            },\n            step: s.step || null,\n            tooltips: true,\n            //PJT::: this.config was undefined (no longer the case)\n            documentElement: s.doc || this.config.doc,\n        });\n        const change = (values) => {\n            s.func(Number.parseFloat(values[0]));\n        };\n        sl.noUiSlider.on(\"end\", change);\n        if (s.continuous) {\n            console.log(\"adding update listener for \", s.label);\n            sl.noUiSlider.on(\"update\", change);\n        }\n        return sl;\n    }\n\n    check(s, d) {\n        const ch = createEl(\n            \"input\",\n            {\n                type: \"checkbox\",\n            },\n            d,\n        );\n        ch.checked = s.current_value;\n        ch.addEventListener(\"click\", (e) => {\n            s.func(ch.checked);\n        });\n    }\n\n    multidropdown(s, d) {\n        const wrapper = createEl(\"div\");\n        const dd = createEl(\n            \"select\",\n            {\n                multiple: true,\n                styles: {\n                    maxWidth: \"200px\",\n                    height: \"100px\",\n                },\n            },\n            wrapper,\n        );\n        createEl(\"br\", {}, d);\n        for (const item of s.values[0]) {\n            // pass 1d array for simple list of strings, or [object[], text_field, value_field] for objects\n            const text = s.values.length > 1 ? item[s.values[1]] : item;\n            const value = s.values.length > 1 ? item[s.values[2]] : item;\n            const args = {\n                text,\n                value,\n            };\n            const sel = s.current_value.indexOf(value) !== -1;\n            if (sel) {\n                args.selected = true;\n            }\n\n            createEl(\"option\", args, dd);\n        }\n        createEl(\"br\", {}, d);\n        const b = createEl(\n            \"button\",\n            {\n                classes: [\"ciview-button-sm\"],\n                text: \"Change\",\n            },\n            d,\n        );\n        b.addEventListener(\"click\", (e) => {\n            s.func(Array.from(dd.selectedOptions).map((x) => x.value));\n        });\n        createFilterElement(dd, wrapper);\n        d.append(wrapper);\n        return dd;\n    }\n\n    dropdown(s, d) {\n        const wrapper = createEl(\"div\");\n        const dd = createEl(\n            \"select\",\n            {\n                styles: {\n                    maxWidth: \"200px\",\n                },\n            },\n            wrapper,\n        );\n        // createEl(\"br\",{},d);\n        for (const item of s.values[0]) {\n            // pass 1d array for simple list of strings, or [object[], text_field, value_field] for objects\n            const text = s.values.length > 1 ? item[s.values[1]] : item;\n            const value = s.values.length > 1 ? item[s.values[2]] : item;\n            createEl(\n                \"option\",\n                {\n                    text,\n                    value,\n                },\n                dd,\n            );\n        }\n        dd.value = s.current_value;\n        dd.addEventListener(\"change\", (e) => {\n            s.func(dd.value, this.controls);\n            dd.title = dd.value; // for tooltip, not sure if best accessibility practice\n            if (s.onchange) {\n                s.onchange(this.controls, dd.value);\n            }\n        });\n        createFilterElement(dd, wrapper);\n        d.append(wrapper);\n        return wrapper;\n    }\n\n    doubleslider(s, d) {\n        const sl = createEl(\n            \"div\",\n            {\n                styles: {},\n            },\n            d,\n        );\n        noUiSlider.create(sl, {\n            tooltips: true,\n            start: [s.current_value[0], s.current_value[1]],\n            range: {\n                min: [s.min],\n                max: [s.max],\n            },\n            documentElement: s.doc,\n        });\n        const change = (values) => {\n            s.func(Number.parseFloat(values[0]), Number.parseFloat(values[1]));\n        };\n        sl.noUiSlider.on(\"end\", change);\n        if (s.continuous) {\n            sl.noUiSlider.on(\"update\", change);\n        }\n        return sl;\n    }\n\n    text(s, d) {\n        // d.style.display = \"flex\";\n        // d.style.alignItems = \"center\";\n        const t = createEl(\n            \"input\",\n            {\n                value: s.current_value,\n                size: 10,\n                styles: { flex: 1 },\n            },\n            d,\n        );\n        t.addEventListener(\"keyup\", (e) => {\n            if (s.only_update_on_enter) {\n                if (e.key === \"Enter\") {\n                    s.func(t.value);\n                }\n                return;\n            }\n            s.func(t.value);\n        });\n    }\n\n    textbox(s, d) {\n        const tb = createEl(\n            \"textarea\",\n            {\n                // no other 'textbox' in our code apart from TextBoxChart AFAICT.\n                styles: {\n                    // height:\"20px\",\n                    width: \"100%\",\n                },\n            },\n            d,\n        );\n        tb.value = s.current_value;\n\n        tb.addEventListener(\"input\", (e) => {\n            s.func(tb.value);\n        });\n        tb.addEventListener(\"blur\", (e) => {\n            s.func(tb.value);\n        });\n    }\n\n    addInfoIcon(info, parent) {\n        const sp = createEl(\n            \"span\",\n            {\n                \"aria-label\": info.text,\n                role: \"tooltip\",\n                \"data-microtip-size\": \"medium\",\n                \"data-microtip-position\": info.position,\n                styles: {\n                    marginLeft: \"5px\",\n                },\n                classes: [\"ttt\"],\n            },\n            parent,\n        );\n\n        createEl(\n            \"i\",\n            {\n                classes: [\"fas\", \"fa-info\"],\n            },\n            sp,\n        );\n        return sp;\n    }\n}\n\nexport default SettingsDialog;\n","function t(t,e){var i,r=Object.keys(e);for(i=0;i<r.length;i++)t=t.replace(new RegExp(\"\\\\{\"+r[i]+\"\\\\}\",\"gi\"),e[r[i]]);return t}function e(t){var e,i,r;if(!t)throw new Error(\"cannot create a random attribute name for an undefined object\");e=\"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\",i=\"\";do{for(i=\"\",r=0;r<12;r++)i+=e[Math.floor(Math.random()*e.length)]}while(t[i]);return i}var i={left:\"start\",right:\"end\",center:\"middle\",start:\"start\",end:\"end\"},r={alphabetic:\"alphabetic\",hanging:\"hanging\",top:\"text-before-edge\",bottom:\"text-after-edge\",middle:\"central\"},s=function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);return[t[0]/e,t[1]/e]},n=function(t,e){void 0===e&&(e=10);var i,r,s,n={},a=\"50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro\".split(\",\");for(i=0;i<a.length;i+=2)r=\"&\"+a[i+1]+\";\",s=parseInt(a[i],e),n[r]=\"&#\"+s+\";\";return n[\"\\\\xa0\"]=\"&#160;\",n}(0,32),a={strokeStyle:{svgAttr:\"stroke\",canvas:\"#000000\",svg:\"none\",apply:\"stroke\"},fillStyle:{svgAttr:\"fill\",canvas:\"#000000\",svg:null,apply:\"fill\"},lineCap:{svgAttr:\"stroke-linecap\",canvas:\"butt\",svg:\"butt\",apply:\"stroke\"},lineJoin:{svgAttr:\"stroke-linejoin\",canvas:\"miter\",svg:\"miter\",apply:\"stroke\"},miterLimit:{svgAttr:\"stroke-miterlimit\",canvas:10,svg:4,apply:\"stroke\"},lineWidth:{svgAttr:\"stroke-width\",canvas:1,svg:1,apply:\"stroke\"},globalAlpha:{svgAttr:\"opacity\",canvas:1,svg:1,apply:\"fill stroke\"},font:{canvas:\"10px sans-serif\"},shadowColor:{canvas:\"#000000\"},shadowOffsetX:{canvas:0},shadowOffsetY:{canvas:0},shadowBlur:{canvas:0},textAlign:{canvas:\"start\"},textBaseline:{canvas:\"alphabetic\"},lineDash:{svgAttr:\"stroke-dasharray\",canvas:[],svg:null,apply:\"stroke\"}},o=/*#__PURE__*/function(){function e(t,e){this.__root=void 0,this.__ctx=void 0,this.__root=t,this.__ctx=e}return e.prototype.addColorStop=function(e,i){var r,s=this.__ctx.__createElement(\"stop\");s.setAttribute(\"offset\",e),-1!==i.indexOf(\"rgba\")?(r=/rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi.exec(i))&&(s.setAttribute(\"stop-color\",t(\"rgb({r},{g},{b})\",{r:r[1],g:r[2],b:r[3]})),s.setAttribute(\"stop-opacity\",r[4])):s.setAttribute(\"stop-color\",i),this.__root.appendChild(s)},e}(),h=function(t,e){this.__root=void 0,this.__ctx=void 0,this.__root=t,this.__ctx=e},l={width:500,height:500,enableMirroring:!1},_=/*#__PURE__*/function(){function _(t,e){var i,r,s,n;if(void 0===t&&(t=l),this.width=void 0,this.height=void 0,this.enableMirroring=void 0,this.canvas=void 0,this.__document=void 0,this.__canvas=void 0,this.__ctx=void 0,this.__ids=void 0,this.__root=void 0,this.__defs=void 0,this.__currentElement=void 0,this.__groupStack=void 0,this.__currentElementsToStyle=null,\"number\"==typeof t?(this.width=t,this.height=null!=e?e:l.height,this.enableMirroring=l.enableMirroring,this.__document=document):(this.width=null!=(r=t.width)?r:l.width,this.height=null!=(s=t.height)?s:l.height,this.enableMirroring=null!=(n=t.enableMirroring)?n:l.enableMirroring,this.__document=t.document||document,i=t.ctx),!(i||(this.__canvas=this.__document.createElement(\"canvas\"),i=this.__canvas.getContext(\"2d\"))))throw new Error(\"Unable to get canvas context\");this.__ctx=i,this.canvas=this,this.__setDefaultStyles(),this.__stack=[this.__getStyleState()],this.__groupStack=[],this.__root=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\"),this.__root.setAttribute(\"version\",\"1.1\"),this.__root.setAttribute(\"xmlns\",\"http://www.w3.org/2000/svg\"),this.__root.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns:xlink\",\"http://www.w3.org/1999/xlink\"),this.__root.setAttribute(\"width\",this.width.toString()),this.__root.setAttribute(\"height\",this.height.toString()),this.__ids={},this.__defs=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"defs\"),this.__root.appendChild(this.__defs),this.__currentElement=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"),this.__root.appendChild(this.__currentElement)}var c=_.prototype;return c.__createElement=function(t,e,i){void 0===e&&(e={});var r,s,n=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",t),a=Object.keys(e);for(i&&(n.setAttribute(\"fill\",\"none\"),n.setAttribute(\"stroke\",\"none\")),r=0;r<a.length;r++)n.setAttribute(s=a[r],e[s]);return n},c.__setDefaultStyles=function(){for(var t in a)this[t]=a[t].canvas},c.__applyStyleState=function(t){var e,i,r=Object.keys(t);for(e=0;e<r.length;e++)this[i=r[e]]=t[i]},c.__getStyleState=function(){var t,e,i={},r=Object.keys(a);for(t=0;t<r.length;t++)i[e=r[t]]=this[e];return i},c.__applyStyleToCurrentElement=function(e){if(this.__currentElement){var i,r,s,n,l,_=this.__currentElement,c=Object.keys(a);for(i=0;i<c.length;i++)if(s=this[c[i]],\"apply\"in(r=a[c[i]]))if(s instanceof h){if(s.__ctx)for(;s.__ctx.__defs.childNodes.length;)n=s.__ctx.__defs.childNodes[0].getAttribute(\"id\"),this.__ids[n]=n,this.__defs.appendChild(s.__ctx.__defs.childNodes[0]);_.setAttribute(r.apply,t(\"url(#{id})\",{id:s.__root.getAttribute(\"id\")}))}else if(s instanceof o)_.setAttribute(r.apply,t(\"url(#{id})\",{id:s.__root.getAttribute(\"id\")}));else if(-1!==r.apply.indexOf(e)&&r.svg!==s)if(\"stroke\"!==r.svgAttr&&\"fill\"!==r.svgAttr||-1===s.indexOf(\"rgba\")){var u=r.svgAttr;if(\"globalAlpha\"===c[i]&&_.getAttribute(u=e+\"-\"+r.svgAttr))continue;_.setAttribute(u,s)}else if(l=/rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi.exec(s)){_.setAttribute(r.svgAttr,t(\"rgb({r},{g},{b})\",{r:l[1],g:l[2],b:l[3]}));var d=parseFloat(l[4]),p=this.globalAlpha;null!=p&&(d*=p),_.setAttribute(r.svgAttr+\"-opacity\",d.toString())}}},c.__closestGroupOrSvg=function(t){if(void 0===t&&(t=this.__currentElement),t)return\"g\"===t.nodeName||\"svg\"===t.nodeName?t:this.__closestGroupOrSvg(t.parentNode)},c.getSerializedSvg=function(t){var e,i,r,s,a,o=(new XMLSerializer).serializeToString(this.__root);if(/xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi.test(o)&&(o=o.replace('xmlns=\"http://www.w3.org/2000/svg','xmlns:xlink=\"http://www.w3.org/1999/xlink')),t)for(e=Object.keys(n),i=0;i<e.length;i++)s=n[r=e[i]],(a=new RegExp(r,\"gi\")).test(o)&&(o=o.replace(a,s));return o},c.getSvg=function(){return this.__root},c.save=function(){var t=this.__createElement(\"g\"),e=this.__closestGroupOrSvg();e&&this.__groupStack.push(e),e.appendChild(t),this.__currentElement=t,this.__stack.push(this.__getStyleState())},c.restore=function(){this.__currentElement=this.__groupStack.pop(),this.__currentElementsToStyle=null,this.__currentElement||(this.__currentElement=this.__root.childNodes[1]);var t=this.__stack.pop();this.__applyStyleState(t)},c.__addTransform=function(t){if(this.__currentElement){var e=this.__closestGroupOrSvg();if(e){if(e.childNodes.length>0){\"path\"===this.__currentElement.nodeName&&(this.__currentElementsToStyle||(this.__currentElementsToStyle={element:e,children:[]}),this.__currentElementsToStyle.children.push(this.__currentElement),this.__applyCurrentDefaultPath());var i=this.__createElement(\"g\");e.appendChild(i),this.__currentElement=i}if(this.__currentElement){var r=this.__currentElement.getAttribute(\"transform\");r?r+=\" \":r=\"\",this.__currentElement.setAttribute(\"transform\",r+=t)}}}},c.scale=function(e,i){void 0===i&&(i=e),this.__addTransform(t(\"scale({x},{y})\",{x:e,y:i}))},c.rotate=function(e){var i=180*e/Math.PI;this.__addTransform(t(\"rotate({angle},{cx},{cy})\",{angle:i,cx:0,cy:0}))},c.translate=function(e,i){this.__addTransform(t(\"translate({x},{y})\",{x:e,y:i}))},c.transform=function(e,i,r,s,n,a){this.__addTransform(t(\"matrix({a},{b},{c},{d},{e},{f})\",{a:e,b:i,c:r,d:s,e:n,f:a}))},c.beginPath=function(){var t,e;this.__currentDefaultPath=\"\",this.__currentPosition={},t=this.__createElement(\"path\",{},!0),(e=this.__closestGroupOrSvg())&&(e.appendChild(t),this.__currentElement=t)},c.__applyCurrentDefaultPath=function(){var t=this.__currentElement;t&&(\"path\"===t.nodeName?t.setAttribute(\"d\",this.__currentDefaultPath):console.error(\"Attempted to apply path command to node\",t.nodeName))},c.__addPathCommand=function(t){this.__currentDefaultPath+=\" \",this.__currentDefaultPath+=t},c.moveTo=function(e,i){this.__currentElement&&(\"path\"!==this.__currentElement.nodeName&&this.beginPath(),this.__currentPosition={x:e,y:i},this.__addPathCommand(t(\"M {x} {y}\",{x:e,y:i})))},c.closePath=function(){this.__currentDefaultPath&&this.__addPathCommand(\"Z\")},c.lineTo=function(e,i){this.__currentPosition={x:e,y:i},this.__currentDefaultPath.indexOf(\"M\")>-1?this.__addPathCommand(t(\"L {x} {y}\",{x:e,y:i})):this.__addPathCommand(t(\"M {x} {y}\",{x:e,y:i}))},c.bezierCurveTo=function(e,i,r,s,n,a){this.__currentPosition={x:n,y:a},this.__addPathCommand(t(\"C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}\",{cp1x:e,cp1y:i,cp2x:r,cp2y:s,x:n,y:a}))},c.quadraticCurveTo=function(e,i,r,s){this.__currentPosition={x:r,y:s},this.__addPathCommand(t(\"Q {cpx} {cpy} {x} {y}\",{cpx:e,cpy:i,x:r,y:s}))},c.arcTo=function(t,e,i,r,n){var a=this.__currentPosition&&this.__currentPosition.x,o=this.__currentPosition&&this.__currentPosition.y;if(void 0!==a&&void 0!==o){if(n<0)throw new Error(\"IndexSizeError: The radius provided (\"+n+\") is negative.\");if(a===t&&o===e||t===i&&e===r||0===n)this.lineTo(t,e);else{var h=s([a-t,o-e]),l=s([i-t,r-e]);if(h[0]*l[1]!=h[1]*l[0]){var _=Math.acos(Math.abs(h[0]*l[0]+h[1]*l[1])),c=s([h[0]+l[0],h[1]+l[1]]),u=n/Math.sin(_/2),d=t+u*c[0],p=e+u*c[1],g=[-h[1],h[0]],m=[l[1],-l[0]],f=function(t){var e=t[0];return t[1]>=0?Math.acos(e):-Math.acos(e)},v=f(g),x=f(m);this.lineTo(d+g[0]*n,p+g[1]*n),this.arc(d,p,n,v,x)}else this.lineTo(t,e)}}},c.stroke=function(){this.__currentElement&&(\"path\"===this.__currentElement.nodeName&&this.__currentElement.setAttribute(\"paint-order\",\"fill stroke markers\"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement(\"stroke\"))},c.fill=function(){this.__currentElement&&(\"path\"===this.__currentElement.nodeName&&this.__currentElement.setAttribute(\"paint-order\",\"stroke fill markers\"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement(\"fill\"))},c.rect=function(t,e,i,r){this.__currentElement&&(\"path\"!==this.__currentElement.nodeName&&this.beginPath(),this.moveTo(t,e),this.lineTo(t+i,e),this.lineTo(t+i,e+r),this.lineTo(t,e+r),this.lineTo(t,e),this.closePath())},c.fillRect=function(t,e,i,r){var s;s=this.__createElement(\"rect\",{x:t,y:e,width:i,height:r},!0),this.__closestGroupOrSvg().appendChild(s),this.__currentElement=s,this.__applyStyleToCurrentElement(\"fill\")},c.strokeRect=function(t,e,i,r){var s;s=this.__createElement(\"rect\",{x:t,y:e,width:i,height:r},!0),this.__closestGroupOrSvg().appendChild(s),this.__currentElement=s,this.__applyStyleToCurrentElement(\"stroke\")},c.__clearCanvas=function(){var t=this.__closestGroupOrSvg();if(t){for(var e=t.getAttribute(\"transform\"),i=this.__root.childNodes[1],r=i.childNodes,s=r.length-1;s>=0;s--)r[s]&&i.removeChild(r[s]);this.__currentElement=i,this.__groupStack=[],e&&this.__addTransform(e)}},c.clearRect=function(t,e,i,r){if(0!==t||0!==e||i!==this.width||r!==this.height){var s,n=this.__closestGroupOrSvg();s=this.__createElement(\"rect\",{x:t,y:e,width:i,height:r,fill:\"#FFFFFF\"},!0),n.appendChild(s)}else this.__clearCanvas()},c.createLinearGradient=function(t,i,r,s){var n=this.__createElement(\"linearGradient\",{id:e(this.__ids),x1:t+\"px\",x2:r+\"px\",y1:i+\"px\",y2:s+\"px\",gradientUnits:\"userSpaceOnUse\"},!1);return this.__defs.appendChild(n),new o(n,this)},c.createRadialGradient=function(t,i,r,s,n,a){var h=this.__createElement(\"radialGradient\",{id:e(this.__ids),cx:s+\"px\",cy:n+\"px\",r:a+\"px\",fx:t+\"px\",fy:i+\"px\",gradientUnits:\"userSpaceOnUse\"},!1);return this.__defs.appendChild(h),new o(h,this)},c.__parseFont=function(){var t=/^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\\"\\sa-z0-9]+?)\\s*$/i.exec(this.font);if(t){var e={style:t[1]||\"normal\",size:t[4]||\"10px\",family:t[6]||\"sans-serif\",weight:t[3]||\"normal\",decoration:t[2]||\"normal\",href:null};return\"underline\"===this.__fontUnderline&&(e.decoration=\"underline\"),this.__fontHref&&(e.href=this.__fontHref),e}},c.__wrapTextLink=function(t,e){if(t.href){var i=this.__createElement(\"a\");return i.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"xlink:href\",t.href),i.appendChild(e),i}return e},c.__applyText=function(t,e,s,n){var a=this.__parseFont(),o=this.__closestGroupOrSvg();if(a){var h,l,_=this.__createElement(\"text\",{\"font-family\":a.family,\"font-size\":a.size,\"font-style\":a.style,\"font-weight\":a.weight,\"text-decoration\":a.decoration,x:e,y:s,\"text-anchor\":(l=this.textAlign,i[l]||i.start),\"dominant-baseline\":(h=this.textBaseline,r[h]||r.alphabetic)},!0);_.appendChild(this.__document.createTextNode(t)),this.__currentElement=_,this.__applyStyleToCurrentElement(n),o.appendChild(this.__wrapTextLink(a,_))}},c.fillText=function(t,e,i){this.__applyText(t,e,i,\"fill\")},c.strokeText=function(t,e,i){this.__applyText(t,e,i,\"stroke\")},c.measureText=function(t){return this.__ctx.font=this.font,this.__ctx.measureText(t)},c.arc=function(e,i,r,s,n,a){if(s!==n){(s%=2*Math.PI)==(n%=2*Math.PI)&&(n=(n+2*Math.PI-.001*(a?-1:1))%(2*Math.PI));var o,h=e+r*Math.cos(n),l=i+r*Math.sin(n),_=e+r*Math.cos(s),c=i+r*Math.sin(s),u=a?0:1,d=n-s;d<0&&(d+=2*Math.PI),o=a?d>Math.PI?0:1:d>Math.PI?1:0,this.lineTo(_,c),this.__addPathCommand(t(\"A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}\",{rx:r,ry:r,xAxisRotation:0,largeArcFlag:o,sweepFlag:u,endX:h,endY:l})),this.__currentPosition={x:h,y:l}}},c.clip=function(){var i=this.__closestGroupOrSvg(),r=this.__createElement(\"clipPath\"),s=e(this.__ids),n=this.__createElement(\"g\");i&&this.__currentElement&&(this.__applyCurrentDefaultPath(),i.removeChild(this.__currentElement),r.setAttribute(\"id\",s),r.appendChild(this.__currentElement),this.__defs.appendChild(r),i.setAttribute(\"clip-path\",t(\"url(#{id})\",{id:s})),i.appendChild(n),this.__currentElement=n)},c.drawImage=function(){var t,e,i,r,s,n,a,o,h,l,c,u,d,p,g=Array.prototype.slice.call(arguments),m=g[0],f=0,v=0;if(3===g.length)t=g[1],e=g[2],i=s=m.width,r=n=m.height;else if(5===g.length)t=g[1],e=g[2],i=g[3],r=g[4],s=m.width,n=m.height;else{if(9!==g.length)throw new Error(\"Invalid number of arguments passed to drawImage: \"+arguments.length);f=g[1],v=g[2],s=g[3],n=g[4],t=g[5],e=g[6],i=g[7],r=g[8]}a=this.__closestGroupOrSvg();var x=\"translate(\"+t+\", \"+e+\")\";if(m instanceof _){if((o=m.getSvg().cloneNode(!0)).childNodes&&o.childNodes.length>1){for(h=o.childNodes[0];h.childNodes.length;)p=h.childNodes[0].getAttribute(\"id\"),this.__ids[p]=p,this.__defs.appendChild(h.childNodes[0]);if(l=o.childNodes[1]){var w=l.getAttribute(\"transform\");l.setAttribute(\"transform\",w?w+\" \"+x:x),a.appendChild(l)}}}else if(\"CANVAS\"===m.nodeName||\"IMG\"===m.nodeName){if((c=this.__createElement(\"image\")).setAttribute(\"width\",i),c.setAttribute(\"height\",r),c.setAttribute(\"preserveAspectRatio\",\"none\"),f||v||s!==m.width||n!==m.height){if((u=this.__document.createElement(\"canvas\")).width=i,u.height=r,!(d=u.getContext(\"2d\")))return;d.drawImage(m,f,v,s,n,0,0,i,r),m=u}c.setAttribute(\"transform\",x),c.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"xlink:href\",\"CANVAS\"===m.nodeName?m.toDataURL():m.getAttribute(\"src\")),a.appendChild(c)}},c.createPattern=function(t,i){var r,s=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"pattern\"),n=e(this.__ids);return s.setAttribute(\"id\",n),s.setAttribute(\"width\",t.width),s.setAttribute(\"height\",t.height),\"CANVAS\"===t.nodeName||\"IMG\"===t.nodeName?((r=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"image\")).setAttribute(\"width\",t.width),r.setAttribute(\"height\",t.height),r.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"xlink:href\",\"CANVAS\"===t.nodeName?t.toDataURL():t.getAttribute(\"src\")),s.appendChild(r),this.__defs.appendChild(s)):t instanceof _&&(s.appendChild(t.__root.childNodes[1]),this.__defs.appendChild(s)),new h(s,this)},c.setLineDash=function(t){this.lineDash=t&&t.length>0?t.join(\",\"):null},_}();export{_ as default};\n//# sourceMappingURL=canvas-to-svg.modern.js.map\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Class representing a lightweight panel the can host multiple tracks of\n * different types\n */\nimport {MLVTrack,RulerTrack} from \"./tracks.js\";\nimport \"./bam_track.js\";\nimport \"./BamCoverageTrack.js\";\nimport \"./extra/interaction_track.js\";\nimport {createEl} from \"../utilities/Elements.js\";\nimport SettingsDialog from \"../utilities/SettingsDialog.js\";\nimport canvasToSvg from \"canvas-to-svg\";\n\nclass MLVPanel {\n\t/**\n\t* Creates a panel\n\t* @param {array} tracks - a list of config objects describing each track\n\t* @param {object} config - A config with the panel settings\n\t*/\n\tconstructor (div,config={},tracks=[]) {\n\t\tthis.__doc__=document;\n\t\tif (typeof div === \"string\"){\n\t\t\tthis.trackDiv=document.getElementById(\"#\"+div)\n\t\t}\n\t\telse{\n\t\t\tthis.trackDiv = div;\n\t\t}\n\t\tconst box = this.trackDiv.getBoundingClientRect();\n\t\n\t\tthis.height = box.height\n\t\tthis.width= box.width;\n\t\n\t\tthis.tracks={}\n\t\tthis.track_order=[];\n\t\tthis.trackLabels={};\n\t\tthis.trackDialogs={};\n\t\tfor (let t_config of tracks){\n\t\t\ttry {\n\t\t\t\tlet track=MLVTrack.getTrack(t_config);\n\t\t\t\tthis.tracks[track.config.track_id]=track;\n\t\t\t\tthis.track_order.push(track.config.track_id);\n\t\t\t\tthis._addTrackLabel(track.config)\n\t\t\t} catch (e) {\n\t\t\t\t//todo show error message\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t\t//check for linked scales\n\t\tthis._tracksChanged();\n\t\tthis.legend= null;\n\n      \n           this.trackDiv.style.position=\"relative\";\n\n        this.canvas = createEl(\"canvas\",{\n            classes:[\"igv-content-canvas\"],\n            width:this.width,\n            height:this.height\n        },this.trackDiv);\n\n        this.ctx = this.canvas.getContext(\"2d\");\n\n    \n\n        if (config.show_scale){\n            this.addScaleCanvas(this.height);\n            this.show_scale=true;\n        }\n\n       \n        //this.trackDiv.append(Utils.spinner());\n\n        /*let icon_div=$(\"<div>\").css({\"z-index\":100,position:\"absolute\",top:\"2px\",right:\"2px\"}).appendTo(this.trackDiv)\n                               .attr(\"class\",\"panel-icon-div\")\n\n        */\n        //for event handlers\n           this.is_dragging=false;\n           this.isMouseDown = false,\n          this.lastMouseX = undefined;\n           this.mouseDownX = undefined;\n\n        //amount to show each side of view port\n           this.buffer_level=1;\n\n           this.groups={};\n\n           this.highlighted_regions={};\n\n           //listeners\n        this.listeners={};\n           \n\n           if (config.allow_user_interactions){\n               this.allowUserDrag();\n            this.allowUserZoom();\n            this.allowUserFeatureClick();\n            this.allowUserFeatureOver();\n            this.allowUserRangeSelection();\n            this.trackDiv.addEventListener(\"dragover\",e=>{\n                e.preventDefault();\n            })\n\n           }\n      \n\n           if(config.ruler_track){\n               this.addRulerTrack();\n           }\n       \n           if (config.new_layout){\n               this.new_layout=true;\n           }\n\n\t\tthis.__doc__=document;\n        this.config=config;\n      \n       \n           this.retries=0;\n           this.yOffset=0;\n\n\t\tthis.loadingIcon=createEl(\"i\",{\n\t\t\tclasses:[\"fas\",\"fa-spinner\",\"fa-spin\",\"panel-loading-icon\"]\n\t\t},this.trackDiv);\n\t\tthis.messageAlert=createEl(\"div\",{\n\t\t\tclasses:[\"panel-error-message\"]\n\t\t},this.trackDiv)\n    }\n\n\tchangeBaseDocument(doc){\n\t\tif (this.config.allow_user_interactions){\n\t\t\tthis.removeDragHandler();\n\t\t\tthis.disableUserZoom();\n\t\t}\n\t\tthis.remove\n\t\tthis.__doc__=doc;\n\t\tif (this.config.allow_user_interactions){\n\t\t\tthis.allowUserDrag();\n\t\t\t// not sure why zoom is not working otherwise.\n\t\t\tthis.allowUserZoom();\n\t\t}\n    }\n\n    closeAllDialogs(){\n        for (let td in this.trackDialogs){\n            this.trackDialogs[td].close();\n        }\n        this.trackDialogs={};\n    }\n\n    _addTrackLabel(config){\n        if (config.show_track_label===false){\n            //return;\n        }\n        const trackLabel =createEl(\"div\",{\n            classes:[\"panel-track-label\"],\n            text:config.short_label,\n            draggable:true\n        },this.trackDiv);\n        trackLabel.addEventListener(\"click\",e=>{\n            this._openTrackDialog(e,config.track_id);\n        });\n        trackLabel.addEventListener(\"drag\",e=>{\n            this.trackDiv.style.cursor=\"ne-risize\";\n        });\n        trackLabel.addEventListener(\"mousedown\",e=>{\n            e.stopImmediatePropagation();\n\n        });\n\n\n        trackLabel.addEventListener(\"dragend\",(e)=>{\n            let y = this._getCoords(e).y +this.yOffset;\n            //trackLabel.style.cursor=\"pointer\"\n            \n            let tafter = null;\n            if (y<0){\n                tafter==this.track_order[0];\n            }\n            else{\n                for (let tc in this.tracks){\n                    const t = this.tracks[tc];\n                    \n                    if (y>=t.top && y<=t.bottom){\n                        tafter =tc;\n                        break;\n                        \n                    }\n                }\n            }\n            if (tafter===config.track_id){\n                return;\n            }\n            tafter= tafter || this.track_order[this.track_order.length-1];\n            this.track_order.splice(this.track_order.indexOf(config.track_id),1);\n            this.track_order.splice(this.track_order.indexOf(tafter)+1,0,config.track_id);\n            this.update();\n            \n        });\n        \n        this.trackLabels[config.track_id]=trackLabel;\n\n    }\n\n    _openTrackDialog(e,id){\n        if (this.trackDialogs[id]){\n            return;\n        }\n        const t =  this.tracks[id];\n        this.trackDialogs[id]=  new SettingsDialog({\n            maxHeight:400,\n            doc:this.__doc__ || document,\n            width:300,\n            title:t.config.short_label,\n            position:[e.pageX,e.pageY],\n            onclose:()=>delete this.trackDialogs[id]\n        },t.getSettings(this));\n    }\n\n    _parseConfig(config){\n        //check the tracks have the right settings\n        if (this.fixed_height_mode){\n            if (!config.height){\n                config.height=150;\n            }\n        }\n    }\n\n    addScaleCanvas(height){\n        this.scale_canvas = createEl(\"canvas\",{\n            styles:{\n                position:\"absolute\",\n                top:\"0px\",\n                left:\"5px\"\n            },\n            width:100,\n            height:this.height\n        },this.trackDiv)\n        \n        this.scale_ctx=this.scale_canvas.getContext(\"2d\");\n    }\n\n    /**\n    * sets the extra amount of track to draw each side of the view. A value \n    * of 1 will retrieve 1 x the view width each side i.e. 3 x the visible window\n    * @param {integer} level - The type of listener - track_empty \n    */\n    setBufferLevel(level){\n        this.buffer_level=level;\n    }\n    /**\n    * Returns the element that houses the panel\n    * @returns {integer} level - The type of listener - track_empty \n    */\n\n    getDiv(){\n        return this.trackDiv;\n    }\n    \n\n        /**\n    * Sets the highlighted region\n    * @param {Object} location - An object containing chr, start and end\n    * @param {name} The name(id) of the region (used to remove the region)\n    * @param {String} The color to give the highlighted region\n    */\n    setHighlightedRegion(location,name,color){\n        this.highlighted_regions[name]={\n            chr:location.chr,\n            start:location.start,\n            end:location.end,\n            color:color\n        }\n        this.force_redraw=true;\n    }\n\n    /**\n    * Removes the highlighted region from the panel\n    * @param {string} name - The name of the highlighted region\n    * that was given when it was created.\n    */\n    removeHighlightedRegion(name){\n        delete this.highlighted_regions[name];\n        this.force_redraw=true;\n    }\n\n    removeAllHighlightedRegions(){\n        this.highlighted_regions={};\n        this.force_redraw=true;\n    }\n\n\n    addRulerTrack(){\n        let track=new RulerTrack();\n        let config = track.getConfig();\n        //config.show_label=false;\n        this.tracks[config.track_id]=track;\n        this.track_order.unshift(config.track_id);\n        this._addTrackLabel(config);\n        return this;\n    }\n\n    /**\n    * Adds a listener to the panel\n    * @param {string} type - The type of listener - track_empty\n    * @param {function} func - The function to call \n    * @param {string} id - The id of the handler (can be used to remove the handler)\n    * Optional - an id will be assigned (and returned) if not supplied\n    * @returns{string} The id of the handler or null if the type did not exist \n    */\n    addListener(id,func){\n        this.listeners[id]=func;\n    }\n\n    /**\n    * Removes a listener to the panel\n    * @param {string} type - The type of listener - track_empty \n    * @param {string} id - The id of the handler to remove\n    * @returns{boolean} true if the listener was removed, otherwise false \n    */\n    removeListener(id){\n        delete this.listeners[id];\n    }\n    \n     \n    /**\n    * Removes a listener to the panel\n    * @param {object} config - The config of the track to addTrack\n    * @param {integer} index - Optional, the vertical order of the track\n    */\n    addTrack(config,index,no_propagate){\n        let track=MLVTrack.getTrack(config);\n        \n        this.tracks[track.config.track_id]=track;\n        if (index || index==0){\n            this.track_order.splice(index,0,track.config.track_id)\n        }\n        else{\n            this.track_order.push(track.config.track_id);\n        }\n        this._tracksChanged();\t\n        this._addTrackLabel(track.config);\n        if (!no_propagate){\n            this._callListeners(\"track_added\",track.config);\n        }\n    }\n    \n    _callListeners(type,data,e){\n        for (let id in this.listeners){\n            this.listeners[id](type,data,e);\n        }   \n    }\n\n    removeAllTracks(){\n        let dup_array = this.track_order.slice();\n        for (let id of dup_array){\n            this.removeTrack(id,true)\n        }\n    }\n    \n    /**\n    * Removes a listener to the panel\n    * @param {object} config - The config of the track to add \n    */\n    removeTrack(track_id,not_repaint,not_propagate){\n        if (!this.tracks[track_id]){\n            return null;\n        }\n        this.track_order = this.track_order.filter(e => e !== track_id);\n        if (!not_repaint){\n            this.repaint(true,true);\n        }\n        this.trackLabels[track_id].remove();\n        delete this.trackLabels[track_id];\n        this.trackDialogs[track_id] && this.trackDialogs[track_id].close();\n        delete this.trackDialogs[track_id];\n      \n        if (this.legend){\n    \t\tthis.legend.removeTrack(track_id);\n    \t}\n        let config =  this.tracks[track_id].config\n        delete this.tracks[track_id];\n        if (! not_propagate){\n            this._callListeners(\"track_removed\",config);\n        }\n        if (this.track_order.length===0){\n            for (let l_id in this.listeners[\"panel_empty\"]){\n                this.listeners[\"panel_empty\"][l_id](this);\n            }\n        }\n        return config;\n    }\n\n    getTrackConfig(track_id){\n        let track = this.tracks[track_id];\n        return track.getConfig();\n    }\n\n    getTrack(track_id){\n        return this.tracks[track_id];\n    }\n\n    getAllTrackConfigs(){\n        let configs=[];\n        for (let id of this.track_order){\n            configs.push(this.tracks[id].getConfig());\n        }\n        return configs;\n    }\n    \n    setTrackAttribute(track_id,key,value){\n        let track = this.tracks[track_id];\n        if (!track){\n            return;\n        }\n        track.setConfigAttribute(key,value);\n        if (key===\"scale_link_to\"){\n            this.tracks[track_id].scale_link_to = this.tracks[value];\n        }\n        if ((key===\"color\" || key===\"display\") && this.legend){\n            this.legend.updateTrack(track_id);\n        }\n    }\n    \n    setTrackAttributes(track_id,attributes){\n        let track = this.tracks[track_id];\n        for (let key in attributes){\n            track.setConfigAttribute(key,attributes[key]);\n            if (key===\"color\" && this.legend){\n                this.legend.updateTrack(track_id);\n            }\n        }\n    }\n\n\n    /**\n    * Sets the filter  function for track. \n    * @param {string} track_id- The id of the track\n    * @param {string} func - The filter function. It should accept the feature\n    * and return true to dispaly the feature and false to hide it. Use null \n    * to cancel the filter\n    */\n    setTrackFeatureFilter(track_id,func){\n        let track = this.tracks[track_id];\n        track.setFilterFunction(func);\n    }\n\n    /**\n    * Sets the filter  function for track \n    * @param {string} track_id- The id of the track\n    * @param {string} func - The color function. It should accept the feature\n    * and return the feature color. Use null to go back to default colors \n    */\n    setTrackColorFunction(track_id,func){\n        let track = this.tracks[track_id];\n        track.setColorFunction(func);\n    }\n\n    setTrackLabelFunction(track_id,func){\n        let track = this.tracks[track_id];\n        if (track){\n            track.label_function=func;\n        }\n    }\n\n\n    _tracksChanged(){\n        for (let t_id of this.track_order){\n            let track = this.tracks[t_id];\n            //if this track is linked to the scale of another\n            //get pointer to the track\n            let link_to = track.config['scale_link_to'];\n            if (link_to){\n                let other_track = this.tracks[link_to];\n                if (other_track){\n                    track.scale_link_to=other_track;\n                }\n            }\n        }\n    }\n\n\n    getCurrentTrackFeatures(track_id){\n        let track = this.tracks[track_id];\n        return track.getCurrentFeatures(this.chr,this.start,this.end);\n    }\n\n\n\n   /**\n    * Updated the panel view, if chromosome start and end are supplied\n    * it will go to this location. If no parameters are given the panel\n    * will be redrawn at the same location e.g after the color, scale or another\n    * paramter has been set\n    * @param {string} force - If true then a cached image will not be used\n    * @param {integer} start of the region to draw\n    * @param {integer} end of the region to draw\n    */\n\n    update (chr,start,end,no_propagation) {\n        this.call_update_listener=no_propagation;\n        if (start>end){\n            const temp =start;\n            start=end;\n            end=temp;\n        }\n        if (chr){\n            this.chr=chr;\n            this.start=start;\n            this.end=end;\n            this.repaint();\n        }\n        else{\n            this.repaint(true,true);\n        }\n    };\n\n    getTracksHeight(){\n        let h =0;\n        let groups={}\n        for (let tid of this.track_order){\n            let track=  this.tracks[tid];\n            let g = track.config.group;\n            if (track.config.hide){\n                continue;\n            }\n            if (g){\n                if (!groups[g]){\n                    h+=track.config.height;\n                    groups[g]=true;\n                }\n            }\n            else{\n                h+=track.config.height;\n            }\n        }\n        return h;\n    }\n\n\n    async getAllFeatures(bpStart, bpEnd, force, data) {\n        let promises = [];\n        this._display_order=[];\n        for (let track_id  of this.track_order){\n            let track = this.tracks[track_id];\n            if (track.config.hide){\n                continue;\n            }\n            this._display_order.push(track_id);\n            promises.push(track.getFeatures(this.chr,bpStart,bpEnd,force,data));       \n        }\n        return await Promise.all(promises.map(p => p.catch(e => e)));\n    }\n\n    /**\n     * Repaint the view, using a cached image if available.\n     * @param {boolean} force - If true then a cached image will not be used\n     * @param {boolean} range_from_tile - Redraw the tile\n     * @param {function} [svg] - if a callback is supplied , then the\n     * actual browser will not repaint but a serialises svg string of the \n     * browser's contents will be passed to the function\n      */\n    repaint(force,range_from_tile,svg) {\n        this.messageAlert.style.display=\"none\";\n        var pixelWidth,\n            bpWidth,\n            bpStart,\n            bpEnd,\n            self = this,\n            ctx,\n            chr,\n            refFrameStart,\n            refFrameEnd;\n\n        chr = this.chr;\n        refFrameStart = this.start;\n        refFrameEnd = this.end;\n        this.bpPerPixel=(this.end-this.start)/this.canvas.width;\n        let get_features=true;\n        if (this.tile && this.tile.containsRange(chr, refFrameStart, refFrameEnd, this.bpPerPixel)){\n            get_features=false;\n        } \n        if (!get_features && !force && !this.force_redraw) {\n            this.force_redraw=false;\n            this.paintImage();\n            if (!self.call_update_listener){\n                self._callListeners(\"view_changed\",{\n                    chr:self.chr,\n                    start:parseInt(self.start),\n                    end:parseInt(self.end)\n                })\n            }\n            self.call_update_listener=false;\n            self.retries=0;\n        }\n        else {\n            // Expand the requested range so we can pan a bit without reloading\n            this.force_redraw=false;\n            if (!svg){\n                pixelWidth = ((this.buffer_level*2)+1) * this.canvas.width;\n                bpStart = Math.max(0, Math.round(this.start-(this.buffer_level*this.canvas.width*this.bpPerPixel)));\n            }\n            else{\n                pixelWidth= this.canvas.width;\n                bpStart = Math.max(0, Math.round(this.start));\n            }\n            bpWidth = Math.round(pixelWidth*this.bpPerPixel);\n           \n            bpEnd = bpStart + bpWidth;\n            if (self.loading && !(svg)){\n                if (force && range_from_tile){\n                    self.update_required=true;\n                }\n                else{\n                    self.update_required=\"location\";\n                }\n                return;\n            }\n            if (range_from_tile){\n                if (this.tile){\n                    bpStart=this.tile.startBP;\n                    bpEnd=this.tile.endBP;\n                }\n            }\n\n         \n            if (!svg){\n                self.loading = {start: bpStart, end: bpEnd};\n            \n                self.loadingIcon.style.display=\"block\";\n            }\n            const textColor = svg?\"black\":getComputedStyle(self.trackDiv).getPropertyValue('color');\n\n            self.getAllFeatures( bpStart, bpEnd,!get_features,{pixelWidth:pixelWidth,bpPerPixel:self.bpPerPixel})\n\n                .then(function (all_features) {\n                    \n                    if (all_features) {\n                        \n                        let buffer = null;\n                        if (svg){\n                            //create mock canvas\n                            buffer= {};\n\n                        }\t\n                        else{\n                            buffer = document.createElement('canvas');\n                        }\n                        \n                        buffer.width = pixelWidth;\n                        buffer.height = self.getTracksHeight();\n                        if (svg){\n                            ctx= new canvasToSvg(buffer.width,buffer.height);\n                        }\n                        else{\n                            ctx = buffer.getContext('2d');\n                        }\n\n                        \n                        if (self.show_scale && !(svg)){\n                            self.scale_buffer= document.createElement('canvas');\n                            self.scale_buffer.width = 200;\n                            self.scale_buffer.height = buffer.height;\n                            self.scale_buffer_ctx=self.scale_buffer.getContext(\"2d\");\n                        }\n                   \n                        var options ={\n                             context: ctx,\n                             bpStart: bpStart,\n                             bpEnd: bpEnd,\n                             bpPerPixel: self.bpPerPixel,\n                             pixelWidth: buffer.width,\n                             pixelHeight: buffer.height,\n                             chr:chr,\n                             textColor:textColor\n                        };\n                        let top=0;\n                        self.groups={};\n                        self.calculateMaxScale(all_features);\n                        for (let id in self.tracks){\n                            const c= self.tracks[id].config\n\n\t\t\t\t\t\t\tif (c.hide){\n\t\t\t\t\t\t\t\tself.trackLabels[c.track_id].style.display=\"none\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n                        for (const i in all_features){\n                        \tlet track = self.tracks[self._display_order[i]];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst l = self.trackLabels[track.config.track_id];\n\t\t\t\t\t\t\tif (l){\n\t\t\t\t\t\t\t\tl.style.display=\"block\";\n\t\t\t\t\t\t\t\tl.style.top=(top+self.yOffset)+\"px\";\n\n                            }\n\n                            options.features=all_features[i];\n                        \n                            let group = track.config.group\n                            if (group){\n                                if (!self.groups[group]){\n                                    self.groups[group]={top:top,height:track.config.height}\n                                    //first time increase top\n                                    top+=track.config.height;\n                                }\n                                options.top= track.top=self.groups[group].top;\n                                options.height=self.groups[group].height;\n                                track.bottom=options.top+options.height;\n\n                        \t}\n\t\t\t\t\t\t\telse{\n                        \t\toptions.top =top;\n\t\t\t\t\t\t\t\ttrack.top=top;\n\t\t\t\t\t\t\t\toptions.height= track.config.height;\n\t\t\t\t\t\t\t\ttop+=options.height;\n\t\t\t\t\t\t\t\ttrack.bottom=top;\n                        \t}\n\t\t\t\t\t\t\tif (typeof options.features === \"string\" && track.config.type!==\"fasta\" ){\n\t\t\t\t\t\t\t\ttrack.drawMessage(options);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n                        \t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.rect(0,options.top,options.pixelWidth,options.height);\n\t\t\t\t\t\t\tctx.clip();\n\t\t\t\t\t\t\tctx.beginPath();\n                        try {\n\t\t\t\t\t\t\ttrack.drawFeatures(options);\n                        } catch (e) {\n\t\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t\t\tconst txtOptions = {\n\t\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\t\t\tfeatures: e.message\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttrack.drawMessage(txtOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.restore()\n                                   \n                            if (self.show_scale){\n                                const sctx = svg?ctx:self.scale_buffer_ctx;\n                                track.drawScale(options.pixelHeight,sctx,textColor);\n                            }\n                                      \n                        }\n                        \n                        for (let name in self.highlighted_regions){\n                            let region = self.highlighted_regions[name];\n                            if (self.chr !== region.chr){\n                                continue;\n                            }\n                            if (region.end<bpStart ||region.start>bpEnd){\n                                continue\n                            }\n                            self.drawHighlightedRegion(region,options);\n                        }\n                        if (svg){\n                            svg(ctx.getSerializedSvg());\n                            return;\n                        }\n                        self.retries=0;\n                        self.loading = false;\n                        self.tile = new Tile(chr, bpStart, bpEnd, self.bpPerPixel, buffer);\n                        self.paintImage();\n                        if (!self.call_update_listener){\n                            self._callListeners(\"view_changed\",{\n                                chr:self.chr,\n                                start:parseInt(self.start),\n                                end:parseInt(self.end)\n                            })\n                        }\n                        self.call_update_listener=false;\n                    \n                    }\n                    else {\n                        self.ctx.clearRect(0, 0, self.canvas.width, self.canvas.height);\n                    }\n                    if (self.update_required){\n                        if (self.update_required===\"location\"){\n                            self.update(self.chr,self.start,self.end);\n                            self.update_required=false;\n                        }\n                        else{\n                            self.update_required=false;\n                            self.update();\n                        }\n                    }\t\n                    self.loadingIcon.style.display=\"none\";\n\n                })\n                .catch(function (error) {\n                    self.loading = false;\n                  \n                    console.log(error);\n                    if (self.retries<3 && error!==\"Timed out\"){\n                        self.retries++;\n                        self.repaint(force,range_from_tile);\n                    }\n                   \n                    else{\n                       \n                        self.loading=false;\n                        self.force_redraw=true;\n                        self.loadingIcon.style.display=\"none\";\n                        self.messageAlert.textContent=error;\n                        self.messageAlert.style.display=\"block\";\n                    }\n                });\n        } \n    }\n\n\n    autoScale(features,min,max){\n                if (!features || typeof features == \"string\" ){\n                    return({min:0,max:1})\n                }\n                features.forEach(function (f) {\n                    min = Math.min(min, f.value);\n                       max = Math.max(max, f.value);\n                });\n                return {min: min, max: max};\n            \n    }\n\n    calculateMaxScale(all_features){\n          let groups={};\n          for (var i in all_features){\n              let track = this.tracks[this.track_order[i]];\n              track.set_scale=null;\n              let group =track.config.group;\n             if (group && track.config.scale!==\"fixed\" && !(track.config.scale_link_to)){\n                     track.config.scale_group=group;\n             }       \t\n             group = track.config.scale_group\n             if (group){\n                 let group_info= groups[group];\n                 if (!group_info){\n                     group_info={tracks:[track],features:[all_features[i]]}\n                     groups[group]=group_info\n\n                     \n                 }\n                 else{\n                     group_info.features.push(all_features[i]);\n                     group_info.tracks.push(track);\n                 }\n             \n             }\n          }\n          for (let name in groups){\n              let g= groups[name];\n              if (!g.ignore){\n                  let min=0;\n                  let max = -Number.MAX_VALUE;\n                  let scale=null;\n                  for (let f of g.features){\n                       scale= this.autoScale(f,min,max)\n                       min= scale.min;\n                       max=scale.max;\n                  }\n                  for (let t of g.tracks){\n                      t.set_scale=scale;\n                  }\n              }\n          } \n    }\n\n    drawHighlightedRegion(region,options){\n        let start= (region.start-options.bpStart)/options.bpPerPixel;\n        start = start<0?0:start;\n\n        let width = (region.end-region.start)/options.bpPerPixel;\n        width = width<3?3:width;\n        width =width>options.pixelWidth?options.pixelWidth:width;\n        options.context.globalAlpha=0.1;\n        options.context.fillStyle=region.color;\n        options.context.fillRect(start,0,width,options.pixelHeight);\n        options.context.globalAlpha=1.0;\n    }\n    \n\n    paintImage() {\n\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        if (this.show_scale){\n            this.scale_ctx.clearRect(0, 0,100, this.canvas.height);\n            this.scale_ctx.drawImage(this.scale_buffer,0,this.yOffset)\n        }\n\n        if (this.tile) {\n            this.xOffset = Math.round((this.tile.startBP - this.start)/this.bpPerPixel);\n            this.ctx.drawImage(this.tile.image, this.xOffset, this.yOffset);\n            this.ctx.save();\n            this.ctx.restore();\n        }\n    };\n\n    allowUserFeatureOver(){\n        let self = this;\n        if (this.foListener){\n            return;\n        }\n        this.foListener= (e)=>{\n            \n                if (this.loading){\n                    return;\n                }\n                clearTimeout(this.moto);\n                this.moto=setTimeout(()=>{\n                    if (!this.is_dragging){\n                       let info=this.getFeatureAt(e);\n                       let i = this.mouse_over_feature;\n                       if (info.feature ){\n                           if(i && i.feature!==info.feature){\n                                const obj = {track:i.track,feature:i.feature,event:e}\n                                   this._callListeners(\"featureout\",obj);\n                                   i.track.onFeatureOut && i.track.onFeatureOut(this,obj);\t\n                           }\n                       \n                           if ((!i) || (i.feature!==info.feature)){\n                                const obj =  {track:info.track,feature:info.feature,event:e}\n                                this._callListeners(\"featureover\",obj);\n                                info.track.onFeatureOver && info.track.onFeatureOver(this,obj);\n                                   this.mouse_over_feature=info;\n                           }\n                       }\n                       else{\n                               if (i){\n                                const obj = {track:i.track,feature:i.feature,event:e}\n                                this._callListeners(\"featureout\",obj);\n                                i.track.onFeatureOut && i.track.onFeatureOut(this,obj);\t\n                                   this.mouse_over_feature=null;\n                               }\n                       }\n                    }\n                },10);\n            }\n            this.trackDiv.addEventListener(\"mousemove\",this.foListener)\n        \n    }\n\n    removeFeatureOverHandler(){\n            this.trackDiv.removeEventListener(\"mouseover\",this.foListener);\n            this.foListener=null;\n    }\n\n\n    allowUserFeatureClick(){\n        if (this.fcListener){\n            return;\n        }\n        this.allowUserFeatureOver();\n        if (!this.listeners[\"_fcfo\"]){\n            this.addListener(\"_fcfo\",(type,data)=>{\n                if (type===\"featureout\"){\n                    this.trackDiv.style.cursor=\"default\"\n                }\n                if(type===\"featureover\"){\n                    this.trackDiv.style.cursor=\"pointer\";\n                }\n    \n            })\n        }\n    \n\t\tthis.fcListener= (e)=> {\n    \t \tif (this.loading){\n    \t \t\treturn;\n    \t \t}\n    \t \tclearTimeout(this.foto);\n    \t \tthis.foto=setTimeout(()=>{\n    \t \t\tif (!this.is_dragging){\n\t\t\t\t\tlet i=this.getFeatureAt(e);\n\t\t\t\t\tif (i.track && i.feature) {\n\t\t\t\t\t\tthis._callListeners(\"featureclick\",{track:i.track,feature:i.feature,event:e});\n\t\t\t\t\t}\n    \t \t\t}\n    \t \t},200);\n    \t };\n\t\t this.trackDiv.addEventListener(\"click\",this.fcListener)\n\n    }\n\n\n    removeFeatureClickHandler(){\n        this.trackDiv.removeEventListener(\"click\",this.fcListener);\n        this.fcListener=null;\n        this.removeListener(\"_fcfo\")\n    }\n\n\n\n    allowUserDrag(){\n\t\tthis.drmdListener= e => {\n    \t \tif (e.shiftKey){\n    \t \t\treturn;\n    \t \t}\n            const co = this._getCoords(e)\n            this.isMouseDown = true;\n            this.start_dragging=true;\n            this.lastMouseX = co.x;\n            this.lastMouseY= co.y;\n            this.mouseDownX = this.lastMouseX;\n\n        }\n        this.trackDiv.addEventListener(\"mousedown\",this.drmdListener)\n\n\n       this.drmmListener= e=>{\n            let canvasCoords = this._getCoords(e)\n            if (this.is_dragging || this.start_dragging){\n                var diff = canvasCoords.x-this.lastMouseX;\n                var bp_diff=this.bpPerPixel*diff;\n                this.start-=bp_diff;\n                this.end-=bp_diff;\n                let dd = this.canvas.height-this.tile.image.height;\n                let y_diff=0;\n                if (dd<0 || this.yOffset !==0){\n                    let y_diff=  canvasCoords.y-this.lastMouseY;\n                    this.yOffset+=y_diff;\n                    if (this.yOffset>0){\n                        this.yOffset=0;\n                    }\n                    else if (this.yOffset<dd){\n                        this.yOffset=dd;\n                    }\n                    \n                    for (let id in this.tracks){\n                        const tr = this.tracks[id];\n                        const l= this.trackLabels[id];\n                        if (l){\n                            l.style.display=\"block\";\n                            l.style.top=(tr.top+this.yOffset)+\"px\";\n\n                        }\n\n                    }\n                }\n                this.repaint();\n                this.lastMouseX=canvasCoords.x;\n                this.lastMouseY=canvasCoords.y;\n                if (this.start_dragging && (diff>5 || y_diff>5)){\n                    this.is_dragging=true;\n                    this.start_dragging=false;\n                }\n               }\n        }\n\n\t\t// >>> popout behaviour (we're not directly in a chart here, may need to pass a prop...)\n\t\t// originally used this.trackDiv, which led to a bug where the move event would not be removed\n\t\tthis.__doc__.addEventListener(\"mousemove\",this.drmmListener)\n\n        this.drmuListener = e => {   \n              this.is_dragging=false;\n              this.start_dragging=false;\n        }\n\t\tthis.__doc__.addEventListener(\"mouseup\",this.drmuListener)\n  \n    }\n\n    removeDragHandler(){\n    \tthis.trackDiv.removeEventListener(\"mousedown\",this.drmdListener);\n\t\tthis.__doc__.removeEventListener(\"mousemove\",this.drmmListener);\n\t\tthis.__doc__.removeEventListener(\"mouseup\",this.drmuListener);\n\t\tthis.drmdListener=null;\n\t\tthis.drmmListener=null;\n\t\tthis.drmuListener=null;\n    }\n\n    _getCoords(e){\n\t\tconst box = this.canvas.getBoundingClientRect();\n    \t//not sure if removing Math.round helps or not\n\t\tconst x = e.clientX - box.left;\n        const y = e.clientY - box.top;\n        return {x,y};   \t\n    }\n\n\n    allowUserZoom(){\n\t\tthis.zmListener= e =>{\n\t\t\n\t\t\te.preventDefault();\n\t\t\tlet deltaY= e.deltaY;\n\t\t\tif (deltaY === undefined){\n\t\t\t\tdeltaY=e.detail\n\t\t\t}\n    \t \tif (this.loading || (this.bpPerPixel<0.05 && deltaY<0)){\n    \t \t\treturn;\n    \t \t}\n    \t \t\n    \t \tlet canvasCoords = this._getCoords(e);\n            // todo test sensitivity with different input devices\n\t\t\tlet factor = deltaY > 0 ? 1.25 : 0.8;\n\t\t\tif (e.wheelDelta !== undefined) {\n\t\t\t\tfactor = Math.pow(2, -e.wheelDelta / 36);\n\t\t\t}\n            let mbp= (this.start+ canvasCoords.x * this.bpPerPixel)\n            let new_length = (this.end-this.start)*factor;\n            let new_start = mbp-((canvasCoords.x/this.canvas.width)*new_length);\n            this.start = new_start;\n            this.end = new_start+new_length;        \n            this.repaint();      \n        }\n        this.trackDiv.addEventListener('wheel',this.zmListener);     \n    }\n\n    disableUserZoom(){\n        this.trackDiv.removeEventListener(\"wheel\",this.zmListener);\n    }\n    \n    \n    allowUserRangeSelection(){\n        this.rsmdListener= e=>{\n            if (e.shiftKey){\n                this.start_select =this._getCoords(e).x;\n                let left = this.start_select+\"px\";\t\t\n                this.select_div=createEl(\"div\",{\n                    styles:{\n                        \"position\":\"absolute\",\"opacity\":0.2,\"background-color\":\"blue\",\"top\":\"0px\",\"height\":this.height+\"px\",left:left,\"width\":\"0px\"\n                    }\n                },this.trackDiv)\n                e.stopPropagation();\n            }\n        } \n        this.trackDiv.addEventListener(\"mousedown\",this.rsmdListener);\n\n        this.rsmmListener= e =>{\n            if (e.shiftKey && this.start_select){\n                let x=this._getCoords(e).x;\n                if (x<this.start_select){\n                    this.select_div.style.left=x+\"px\";\n                    this.select_div.style.width=(this.start_select-x)+\"px\";\n                }\n                else{                  \n                     this.select_div.style.left=this.start_select+\"px\";\n                     this.select_div.style.width=(x-this.start_select)+\"px\";\n                }           \n                e.stopPropagation();\n            }\n        }\n        this.trackDiv.addEventListener(\"mousemove\",this.rsmmListener);\n\n        this.rsmuListener= e =>{\n            if (this.start_select){\n                let x=this._getCoords(e).x;\n                let start = this.start + (this.start_select*this.bpPerPixel);\n                let end =  this.start + (x*this.bpPerPixel);\n                this.start_select=null;\n                this.select_div.remove();\n                if (start>end){\n                    let temp=end;\n                    end=start;\n                    start=temp;\n                }\n                this._callListeners(\"range_selected\",{\n                        chr:this.chr,\n                        start:start,\n                        end:end\n                },e);\n            }\n        }\n        this.trackDiv.addEventListener(\"mouseup\",this.rsmuListener);\n    }\n\n    \n    removeAllowSelection(){\n        this.trackDiv.removeEventListener(\"mousedown\",this.rsmdListener);\n        this.trackDiv.removeEventListener(\"mousemove\",this.rsmmListener);\n        this.trackDiv.removeEventListener(\"mouseup\",this.rsmuListener);\n        this.rsmdListener=null;\n        this.rsmmListener=null;\n        this.rsmuListener=null;\n    }\n\n    getImage(){\n         var imgURL = this.canvas[0].toDataURL(MIME_TYPE);\n    }\n    \n    \n    /**\n    * Gets the feature that was clicked\n    * @param {JQuery Event} e - Can be any object- all that is required is pageX and PageY\n    * @returns {object} An object with track - the track config at the event position(or null) and\n    * feature - the feature at the postition (or null). \n    */\n     getFeatureAt(e){\n         let co = this._getCoords(e);\n         co.y-=this.yOffset;\n         let gl = Math.round(this.start+(co.x*this.bpPerPixel));\n         for (let t in this.tracks){\n             let track = this.tracks[t];\n             if (co.y>track.top && co.y<track.bottom){\n                 return {track:track,\n                         feature:track.getFeatureAt(gl,this.chr,co,this.bpPerPixel,this.ctx,this.yOffset)\n                 };\n             }\t\t\n         }\n         return {track:null,feature:null};\n    }\n\n    getBpStart(){\n        return  Math.max(0, Math.round(this.start-(this.buffer_level*this.canvas.width*this.bpPerPixel)));\n    }\n    \n\n\n\n    setSize(width,height){\n        if (!width){\n            const b = this.trackDiv.getBoundingClientRect();\n            this.width=b.width;\n            this.height=b.height;\n        }\n        else{\n            this.height=height;\n            this.width=width;\n            this.trackDiv.style.height= height+\"px\";\n            this.trackDiv.style.width=width+\"px\";\n        }\n        this.canvas.setAttribute(\"width\",this.width);\n        this.canvas.setAttribute(\"height\",this.height);\n        if (this.show_scale){\n            this.scale_canvas.setAttribute(\"height\",this.height);\n        }\n\n    }\n\n    redrawTile(features) {\n\n        if (!this.tile) return;\n\n        var self = this,\n            chr = self.tile.chr,\n            bpStart = self.tile.startBP,\n            bpEnd = self.tile.endBP,\n            buffer = document.createElement('canvas'),\n            bpPerPixel = self.tile.scale;\n\n        buffer.width = self.tile.image.width;\n        buffer.height = self.tile.image.height;\n        var ctx = buffer.getContext('2d');\n        self.track.draw({\n            features: features,\n            context: ctx,\n            bpStart: bpStart,\n            bpPerPixel: bpPerPixel,\n            pixelWidth: buffer.width,\n            pixelHeight: buffer.height\n        });\n\n\n        self.tile = new Tile(chr, bpStart, bpEnd, bpPerPixel, buffer);\n        self.paintImage();\n    }\n\n}\n\n\nclass Tile{\n    constructor (chr, tileStart, tileEnd, scale, image) {\n        this.chr = chr;\n        this.startBP = tileStart;\n        this.endBP = tileEnd;\n        this.scale = scale;\n        this.image = image;\n    }\n\n    containsRange(chr, start, end, scale) {\n        if (start<0){\n            start=0;\n        }\n        return this.scale.toFixed(3) === scale.toFixed(3) && start >= this.startBP && end <= this.endBP && chr === this.chr;\n    }\n\n    overlapsRange(chr, start, end) {\n        return this.chr === chr && this.endBP >= start && this.startBP <= end;\n    }\n}\n\nexport default MLVPanel;"],"names":["MAX_WBITS","DEF_WBITS","MANY","BMAX","PRESET_DICT","Z_NO_FLUSH","Z_FINISH","Z_DEFLATED","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","METHOD","FLAG","DICT4","DICT3","DICT2","DICT1","DICT0","BLOCKS","CHECK4","CHECK3","CHECK2","CHECK1","DONE","BAD","inflate_mask","IB_TYPE","IB_LENS","IB_STORED","IB_TABLE","IB_BTREE","IB_DTREE","IB_CODES","IB_DRY","IB_DONE","IB_BAD","fixed_bl","fixed_bd","fixed_tl","fixed_td","cplens","cplext","cpdist","cpdext","ZStream","w","nowrap","Inflate","f","ret","dictionary","dictLength","z","InfBlocks","r","b","index","length","mark","n","p","m","INFBLOCKS_BORDER","checkfn","InfCodes","InfTree","c","k","q","bl","bd","tl","td","inflate_trees_fixed","arrayCopy","i","j","d","start","IC_START","IC_LEN","IC_LENEXT","IC_DIST","IC_DISTEXT","IC_COPY","IC_LIT","IC_WASH","IC_END","IC_BADCODE","tl_index","td_index","s","tindex","e","t","tp","tp_index","ml","md","tp_index_t_3","bindex","hp","hn","v","a","g","h","l","mask","xp","y","bb","tb","result","nl","nd","vsize","testArray","hasSubarray","src","srcOffset","dest","destOffset","count","arrayCopy_fast","arrayCopy_slow","jszlib_inflate_buffer","buffer","afterUncOffset","oBlockList","totalSize","obuf","status","newob","out","cursor","ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE","Zlib","opt_params","input","compressed","size","crc32","password","files","file","output","op1","op2","op3","localFileSize","centralDirectorySize","endOfCentralDirectorySize","offset","needVersion","flags","compressionMethod","date","plainSize","filenameLength","extraFieldLength","commentLength","filename","extraField","comment","tmp","key","il","jl","deflator","lengths","listSize","maxCodeLength","minCodeLength","table","bitLength","code","skip","reversed","rtemp","value","ZLIB_RAW_INFLATE_BUFFER_SIZE","buildHuffmanTable","hdr","bitsbuf","bitsbuflen","ip","inputLength","octet","codeTable","codeWithLength","codeLength","op","len","nlen","olength","preCopy","hlit","hdist","hclen","codeLengths","codeLengthsTable","litlenTable","distTable","lengthTable","prev","repeat","litlen","dist","ti","codeDist","lengthCodeTable","lengthExtraTable","distCodeTable","distExtraTable","opt_param","backward","ratio","maxHuffCode","newSize","maxInflateSize","pos","limit","blocks","block","opt_buffersize","newInput","stop","parseDynamicHuffmanBlockImpl","bits","cmf","flg","adler32","member","isize","rawinflate","inflated","inflen","ci","str","mtime","crc16","rawdeflate","current","parent","heap","swap","blockArray","position","isFinalBlock","bfinal","btype","stream","data","hclenOrder","litLenLengths","litLenCodes","distLengths","distCodes","treeSymbols","treeLengths","transLengths","treeCodes","bitlen","dataArray","litLen","literal","backwardDistance","codeArray","matchKey","windowSize","matchList","longestMatch","prevMatch","lz77buf","skipLength","freqsLitLen","freqsDist","lazy","writeMatch","match","lz77Array","currentMatch","matchMax","matchLength","dl","permatch","litlenLengths","runLength","nResult","rpt","freqs","nSymbols","nodes","values","symbols","minimumCost","flag","type","currentPosition","excess","half","weight","next","takePackage","x","codes","startCode","filelist","filetable","fileHeader","fileHeaderList","localFileHeader","filenameList","array","adler","s1","s2","tlen","bufferPosition","oldbuf","number","reverse","bitindex","rev32_","crc","num","rawDeflateOption","prop","cm","cinfo","fcheck","fdict","flevel","is_node","NONE","GZIP","BGZF","igvxhr","url","options","fulfill","reject","xhr","sendData","method","range","responseType","contentType","mimeType","headers","withCredentials","header_keys","rangeEnd","event","handleError","message","compression","fn","idx","localfile","fileReader","origin","arraybuffer","plain","inflate","unbgzf","lim","ptr","blockLengths","ba","xlen","bsize","unc","BufferedReader","config","contentLength","bufferSize","requestedRange","asUint8","self","hasData","loadRange","subbuffer","arrayBuffer","bufferedReader","bufferStart","BWSource","create_feature_function","BWReader","chr","bpStart","bpEnd","use_existing","zoomLevelHeaders","bwReader","bpp","zoomLevelHeader","treeOffset","rpTree","chrIdx","keys","keyString","leafItems","featureArrays","item","features","uint8Array","allFeatures","bpPerPixel","level","zl","featureArray","binaryParser","BinaryParser","chromId","chromStart","chromEnd","itemStep","itemSpan","itemCount","minSize","validCount","minVal","maxVal","sumData","rest","tokens","feature","BIGWIG_MAGIC_LTH","BIGWIG_MAGIC_HTL","BIGBED_MAGIC_LTH","BIGBED_MAGIC_HTL","BBFILE_HEADER_SIZE","magic","startOffset","nZooms","zoomNumber","zlh","ZoomLevelHeader","BWTotalSummary","BPTree","RPTree","byteBuffer","RPTREE_HEADER_SIZE","RPTREE_NODE_LEAF_ITEM_SIZE","RPTREE_NODE_CHILD_ITEM_SIZE","BUFFER_SIZE","fileOffset","littleEndian","rootNodeOffset","node","filePosition","dataView","isLeaf","bytesRequired","range2","dataView2","items","binaryParser2","RPTreeNode","startBase","endBase","findLeafItems","minChromId","maxChromId","minStartBase","maxEndBase","retValue","byte6","byte5","byte4","byte3","byte2","VPointer","vp","stats","readTreeNode","keySize","childOffset","bufferOffset","currOffset","parseUri_options","Utils","rgbString","alpha","track_div","error","div","left","top","$spinner","parentElement","o","uri","$0","$1","$2","element","min","max","rawNumber","dec","sep","decsep","now","formatedNumber","target","eFixed","posx","posy","nameValueArray","markup","nameValue","threshhold","scope","last","deferTimer","context","args","string","delim","quote","originalOptions","jqXHR","_","callback","$child","$parent","delta","topLeft","bboxChild","bboxParent","BAI_MAGIC","TABIX_MAGIC","loadBamIndex","indexURL","tabix","indices","nbin","nintv","nref","parser","blockMin","blockMax","binIndex","linearIndex","binNumber","cs","ce","ref","sequenceIndexMap","seq_name","nchnk","BamIndex","refId","lIndex","minLin","maxLin","bam","overlappingBins","chunks","lowest","bin","binChunks","optimizeChunks","beg","end","list","mergedChunks","lastChunk","c0","c1","dif","chunk","SECRET_DECODER","CIGAR_DECODER","READ_STRAND_FLAG","MATE_STRAND_FLAG","FIRST_OF_PAIR_FLAG","SECOND_OF_PAIR_FLAG","READ_UNMAPPED_FLAG","MATE_UNMAPPED_FLAG","READ_PAIRED_FLAG","PROPER_PAIR_FLAG","SECONDARY_ALIGNMNET_FLAG","SUPPLEMENTARY_ALIGNMENT_FLAG","READ_FAILS_VENDOR_QUALITY_CHECK_FLAG","DUPLICATE_READ_FLAG","MAX_GZIP_BLOCK_SIZE","DEFAULT_SAMPLING_WINDOW_SIZE","DEFAULT_SAMPLING_DEPTH","MAXIMUM_SAMPLING_DEPTH","BamFeatureReader","chrId","fetchMin","fetchMax","names","arr","arr2","al","st","en","win","init","id","iset","blockSize","blockEnd","tags","refID","bmn","flag_nc","nc","lseq","lengthOnRef","seqBytes","readInt","strand","fragmentLength","cigop","opLen","opLtr","decodeTags","getIndex","compressedBuffer","uncba","samHeaderLen","samHeader","nRef","lName","name","BamReader","AlignmentContainer","BamFilter","getChrIndex","chrToIndex","alignmentContainer","bamIndex","promises","decodeBamRecords","obj","ignored","filter","alignment","mq","mateRefID","matePos","readName","cigar","cigarArray","seq","BamAlignment","sb","makeBlocks","record","insertions","seqOffset","blockSeq","blockQuals","gapType","readShort","BamSource","FastaSequence","bool","alignments","pairAlignments","unpairAlignments","packAlignmentRows","maxRows","sequence","rows","pairCache","row","pairedAlignment","canBePaired","PairedAlignment","bucketList","allocatedCount","lastAllocatedCount","nextStart","alignmentRow","bucket","alignmentSpace","packedAlignmentRows","bucketStart","buckListIndex","BamAlignmentRow","tag","readFloat","cc","genomicLocation","nameValues","isFirst","tagDict","ins_start","yesNo","samplingWindowSize","samplingDepth","pairsSupported","CoverageMap","DownsampleBucket","finishBucket","ds","DownsampledInterval","samplingProb","replacedAlignment","incBlockCount","base","Coverage","refBase","myself","mismatchQualitySum","threshold","counts","firstAlignment","centerAlignment","genomicInterval","sortOption","baseScore","coverageMap","reference","coverage","phred","indexReferenceSequence","bpBlockSequence","lengthBlockSequence","FeatureSource","force","GenomicInterval","featureCache","ranges_to_get","p_types","all_features","existing_features","featureList","splice","gi","FeatureCache","chrFeatureMap","chrs","flist","pack","TabixBedFeatureSource","decode_function","FeatureFileReader","BigBedFeatureSource","F_MAX_GZIP_BLOCK_SIZE","dec_function","getProjectURL","uriParts","format","decode","FeatureParser","configIndexURL","configIndexed","idxFile","parseData","startPos","endPos","success","slicedData","isIndeedIndexible","header","packFeatures","maxFeatureCount","gffNameFields","decode_func","ignore","lines","line","wig","cnt","delimiter","ss","step","span","properties","tk","curr","kv","idName","exonCount","exonSizes","exonStarts","exons","exon","eStart","eEnd","exonEnds","tokenCount","score","qValue","signal","pValue","ee","fusion_name","junction_left","junction_right","num_junction_reads","num_spanning_frags","spanning_frag_coords_text","min_coord","max_coord","coord_pairs","split_coords","span_left","span_right","attributeString","color","attributes","kvs","pd","coords","field","intervalFeatures","tree","intervals","interval","treeMap","chromosomes","geneList","iStart","iEnd","chunkSize","subArray","IntervalTree","f1","f2","BLACK","RED","NIL","Interval","Node","searchInterval","i1","i2","logNode","indent","space","func","applyInterval","results","nodeMax","intervalHigh","nodeMin","intervalLow","low","high","other","needs_range","ranges","order","chrName","bpLength","getSequenceFromInterval","qstart","qend","center","lineNo","nTokens","basesPerLine","bytesPerLine","indexEntry","nextLine","currentSeq","currentChr","idxEntry","nEndBytes","startLine","endLine","base0","startByte","base1","offset1","endByte","byteCount","allBytes","nBases","srcPos","allBytesLength","MLVTrack","ctx","attribute","yOffset","panel","label","con","info","dim","cl","RulerTrack","fontStyle","ts","spacing","nTick","y_pos","Graphics","shim","chrPosition","formatNumber","anynum","decimal","divider","workStr","dStr","dNum","pStr","dLen","retval","maxValue","TickSpacing","nZeroes","log10","majorUnit","unitMultiplier","nMajorTicks","dn","majorTick","MLVBedTrack","max_y_val","py","pixelWidth","conf","windowX","windowX1","ki","opacity","gene","coord","featureX","featureX1","featureY","defaultColor","geneFontStyle","transform","boxX","boxX1","labelX","labelY","textFitsInBox","text","getFeatureLabelY","xScale","px","px1","pw","cy","direction","ePx","ePx1","ePxU","ePw","py2","h2","tolerance","MLVBigBedTrack","MLVWigTrack","pixel_height","bot","pixelHeight","y_offset","featureValueRange","autoscale","renderFeature","yUnitless","heightUnitLess","width","height","rectEnd","signsDiffer","ph","pro","LineTrack","SequenceTrack","p0","p1","pc","y_pos1","x1","y1","x2","y2","transforms","radius","lineWidth","dashLen","dX","dY","dashes","dashX","dashY","alignmentRowYInset","alignmentStartGap","downsampleRowHeight","DEFAULT_COVERAGE_TRACK_HEIGHT","BAMTrack","CoverageTrack","AlignmentTrack","downsampledIntervals","packedAlignmentsIndex","clickedObject","xOffset","popover","html","menuItems","colorByMenuItems","tagLabel","selected","colorByMarkup","$fa","menuItem","showCheck","parts","shadedBaseColor","qual","nucleotide","minQ","maxQ","foregroundColor","bp","accumulatedHeight","hh","coverageMapIndex","base_text","xBlockStart","xBlockEnd","yRect","alignmentHeight","drawPairConnector","drawSingleAlignment","alignmentColor","outlineColor","yStrokedLine","lastBlockEnd","drawBlock","refOffset","widthBlock","widthArrowHead","skippedColor","deletionColor","refChar","readChar","readQual","xBase","widthBase","colorBase","alignmentRows","sortDirection","alignmentTrack","option","tagValue","lower","upper","BamSCATrack","localFilter","col","colors","calculate","overideCatNumbers","on","ind_track_height","InteractionTrack","gl","tol","inters","fts","container","track","region","c_bottom","local","mm","minr","maxr","mod","st1","en1","st2","en2","p2","mp","SettingsDialog","BaseDialog","content","originalOnClose","createEl","action","gui","sp","d1","rb","sl","noUiSlider","change","ch","wrapper","dd","createFilterElement","u","MLVPanel","tracks","box","t_config","doc","trackLabel","tafter","tc","location","no_propagate","dup_array","track_id","not_repaint","not_propagate","l_id","configs","t_id","link_to","other_track","no_propagation","temp","groups","tid","range_from_tile","svg","bpWidth","refFrameStart","refFrameEnd","get_features","textColor","canvasToSvg","group","txtOptions","sctx","Tile","group_info","scale","co","canvasCoords","diff","bp_diff","y_diff","tr","deltaY","factor","mbp","new_length","new_start","tileStart","tileEnd","image"],"mappings":"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,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,GAAG,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,GAAG,EAAE,IAC/B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,GAAG,EAAE,IAC7B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,GAAG,EAAE,IAC7B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,IAAI,EAAE,EAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,GAAG,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,GAAG,EAAE,IAC/B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAE9B,GAAG,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,GAAG,EAAE,IAC7B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,GAAG,EAAE,IAC7B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,EAAE,EAAE,EAAG,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,EAAE,EAAE,IAC5B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,GAAG,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC9B,EAAE,EAAE,GAAI,EAAE,EAAE,IAAK,EAAE,EAAE,GAAI,EAAE,EAAE,IAC7B,GAAG,EAAE,EAAG,EAAE,EAAE,GAAI,EAAE,EAAE,GAAI,IAAI,EAAE,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WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,SAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,SAAY,WAC5D,WAAY,WAAY,SAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,SACtC,EAMAA,EAAK,MAAM,MAmBa,IAAI,YAAYA,EAAK,MAAM,MAAM,EAazDA,EAAK,QAAU,SAASE,EAAOD,EAAY,CAEzC,KAAK,MAAQC,EAEb,KAAK,OACD,IAAsB,WAAoBF,EAAK,QAAQ,iBAAiB,EAE5E,KAAK,gBAAkBA,EAAK,QAAQ,gBAAgB,QAEpD,KAAK,WAEL,IAAI8L,EAAmB,CAAA,EAEnBC,GAGA9L,GAAc,EAAEA,EAAa,CAAA,KAC3B,OAAOA,EAAW,iBAAuB,WAC3C,KAAK,gBAAkBA,EAAW,iBAKtC,IAAK8L,KAAQ9L,EACX6L,EAAiBC,CAAI,EAAI9L,EAAW8L,CAAI,EAI1CD,EAAiB,aAAkB,KAAK,OAExC,KAAK,WAAa,IAAI9L,EAAK,WAAW,KAAK,MAAO8L,CAAgB,CACpE,EAMA9L,EAAK,QAAQ,kBAAoB,MAKjCA,EAAK,QAAQ,gBAAkBA,EAAK,WAAW,gBAQ/CA,EAAK,QAAQ,SAAW,SAASE,EAAOD,EAAY,CAClD,OAAQ,IAAID,EAAK,QAAQE,EAAOD,CAAU,EAAG,UAC/C,EAMAD,EAAK,QAAQ,UAAU,SAAW,UAAW,CAE3C,IAAIgM,EAEAC,EAEApG,EAEAC,EAEAoG,EAEAC,EAEAC,EAIAlB,EAIAzK,EAEA2E,EAAM,EAMV,OAJA3E,EAAS,KAAK,OAGduL,EAAKhM,EAAK,kBAAkB,QACpBgM,EAAE,CACR,KAAKhM,EAAK,kBAAkB,QAC1BiM,EAAQ,KAAK,MAAQ,KAAK,IAAIjM,EAAK,WAAW,UAAU,EAAI,EAC5D,MACF,QACE,MAAM,IAAI,MAAM,4BAA4B,CAC/C,CAMD,OALA6F,EAAOoG,GAAS,EAAKD,EACrBvL,EAAO2E,GAAK,EAAIS,EAGhBsG,EAAQ,EACAH,EAAE,CACR,KAAKhM,EAAK,kBAAkB,QAC1B,OAAQ,KAAK,gBAAe,CAC1B,KAAKA,EAAK,QAAQ,gBAAgB,KAAMoM,EAAS,EAAG,MACpD,KAAKpM,EAAK,QAAQ,gBAAgB,MAAOoM,EAAS,EAAG,MACrD,KAAKpM,EAAK,QAAQ,gBAAgB,QAASoM,EAAS,EAAG,MACvD,QAAS,MAAM,IAAI,MAAM,8BAA8B,CACxD,CACD,MACF,QACE,MAAM,IAAI,MAAM,4BAA4B,CAC/C,CACD,OAAAtG,EAAOsG,GAAU,EAAMD,GAAS,EAChCD,EAAS,IAAMrG,EAAM,IAAMC,GAAO,GAClCA,GAAOoG,EACPzL,EAAO2E,GAAK,EAAIU,EAGhBoF,EAAQlL,EAAK,QAAQ,KAAK,KAAK,EAE/B,KAAK,WAAW,GAAKoF,EACrB3E,EAAS,KAAK,WAAW,WACzB2E,EAAM3E,EAAO,OAIXA,EAAS,IAAI,WAAWA,EAAO,MAAM,EAEjCA,EAAO,QAAU2E,EAAM,IACzB,KAAK,OAAS,IAAI,WAAW3E,EAAO,OAAS,CAAC,EAC9C,KAAK,OAAO,IAAIA,CAAM,EACtBA,EAAS,KAAK,QAEhBA,EAASA,EAAO,SAAS,EAAG2E,EAAM,CAAC,EAIrC3E,EAAO2E,GAAK,EAAK8F,GAAS,GAAM,IAChCzK,EAAO2E,GAAK,EAAK8F,GAAS,GAAM,IAChCzK,EAAO2E,GAAK,EAAK8F,GAAU,EAAK,IAChCzK,EAAO2E,GAAK,EAAK8F,EAAe,IAEzBzK,CACT,EC95KA,IAAI4L,GAAQ,GASZ,MAAMC,GAAO,EACPC,GAAO,EACPC,GAAO,EACb,MAAMC,CAAO,CAKT,OAAO,KAAKC,EAAKC,EAAS,CAItB,OAAO,IAAI,QAAQ,SAAUC,EAASC,EAAQ,CACvC,IAACC,EAAM,IAAI,eACVC,EAAWJ,EAAQ,SACnBK,EAASL,EAAQ,SAAWI,EAAW,OAAS,OAChDE,EAAQN,EAAQ,MAChBO,EAAeP,EAAQ,aACvBQ,EAAcR,EAAQ,YACtBS,EAAWT,EAAQ,SACnBU,EAAUV,EAAQ,QACPN,IAAc,UAAU,OAAO,QAAQ,OAAO,GAAK,GAAK,aAAa,KAAK,UAAU,SAAS,EACxH,IAAgBiB,EAAkBX,EAAQ,gBAC1BY,EAAa1L,EAAKc,EAAOzG,EAyB7B,GAFA4Q,EAAI,KAAKE,EAAQN,CAAG,EAEhBO,EAAO,CACP,IAAIO,EAAWP,EAAM,KAAOA,EAAM,MAAQA,EAAM,KAAO,EAAI,GAC3DH,EAAI,iBAAiB,QAAS,SAAWG,EAAM,MAAQ,IAAMO,CAAQ,CACxE,CAUD,GATIL,GACAL,EAAI,iBAAiB,eAAgBK,CAAW,EAEhDC,GACAN,EAAI,iBAAiBM,CAAQ,EAE7BF,IACAJ,EAAI,aAAeI,GAEnBG,EAEA,IADAE,EAAc,OAAO,KAAKF,CAAO,EAC5BnR,EAAI,EAAGA,EAAIqR,EAAY,OAAQrR,IAChC2F,EAAM0L,EAAYrR,CAAC,EACnByG,EAAQ0K,EAAQxL,CAAG,EAEnBiL,EAAI,iBAAiBjL,EAAKc,CAAK,EAKnC2K,IAAoB,KACpBR,EAAI,gBAAkB,IAE1BA,EAAI,QAAQ,IAEZA,EAAI,OAAS,SAAUW,EAAO,CAEtBX,EAAI,QAAU,GAAMA,EAAI,QAAU,KAAOA,EAAI,QAAU,IAEnDG,GAASH,EAAI,QAAU,IACvBY,EAAY,iDAAmDhB,CAAG,EAIlEE,EAAQE,EAAI,SAASA,CAAG,EAOxBA,EAAI,SAAW,IAEfY,EAAY,qBAAqB,EAGjCA,EAAY,6BAA+BZ,EAAI,MAAM,CAK7E,EAEYA,EAAI,QAAU,SAAUW,EAAO,CAC5BC,EAAY,6BAA+BhB,EAAM,YAAcI,EAAI,MAAM,CAC3E,EAGDA,EAAI,UAAY,SAAUW,EAAO,CAC7BC,EAAY,WAAW,CACvC,EAEYZ,EAAI,QAAU,SAAUW,EAAO,CAC3B,QAAQ,IAAI,SAAS,EACrBZ,EAAO,IAAI,IAAI,SAAW,CAC1C,EAEY,GAAI,CAEAC,EAAI,KAAKC,CAAQ,CAEpB,OAAQ3P,EAAG,CACRyP,EAAOzP,CAAC,CACX,CAGD,SAASsQ,EAAYC,EAAS,CAC1B,GAAId,EACAA,EAAOc,CAAO,MAGd,OAAM,MAAMA,CAAO,CAE1B,CACb,CAAS,CACJ,CAED,OAAO,gBAAiBjB,EAAKC,EAAS,CAElC,OAAIA,IAAY,SAAWA,EAAU,IACrCA,EAAQ,aAAe,cAChBF,EAAO,KAAKC,EAAKC,CAAO,CAClC,CAED,OAAO,SAAUD,EAAKC,EAAS,CAE3B,IAAIK,EAASL,EAAQ,SAAWA,EAAQ,SAAW,OAAS,OAE5D,OAAIK,GAAU,SAAQL,EAAQ,YAAc,oBAErC,IAAI,QAAQ,SAAUC,EAASC,EAAQ,CAE1CJ,EAAO,KAAKC,EAAKC,CAAO,EAAE,KACtB,SAAUnO,EAAQ,CAEVoO,EADApO,GACQ,KAAK,MAAMA,CAAM,CAAC,CAKlD,CAAiB,EAAE,MAAMqO,CAAM,CAC/B,CAAS,CACJ,CAKD,OAAO,WAAWH,EAAKC,EAAS,CAE5B,IAAIiB,EAAaC,EAAIC,EAmBrB,OAjBInB,IAAY,SAAWA,EAAU,IAIrCmB,EAAMpB,EAAI,QAAQ,GAAG,EACrBmB,EAAKC,EAAM,EAAIpB,EAAI,UAAU,EAAGoB,CAAG,EAAIpB,EAEnCC,EAAQ,IACRiB,EAAcpB,GAETqB,EAAG,SAAS,KAAK,EACtBD,EAAcrB,GAGdqB,EAActB,GAGdsB,IAAgBtB,IAChBK,EAAQ,SAAW,qCACZF,EAAO,KAAKC,EAAKC,CAAO,IAG/BA,EAAQ,aAAe,cAEhB,IAAI,QAAQ,SAAUC,EAASC,EAAQ,CAE1CJ,EAAO,KAAKC,EAAKC,CAAO,EAAE,KACtB,SAAUvF,EAAM,CACZ,IAAI5I,EAASiO,EAAO,oBAAoBrF,EAAMwG,CAAW,EACzDhB,EAAQpO,CAAM,CACtC,CAAqB,EAAE,MAAMqO,CAAM,CACnC,CAAa,EAGR,CAED,OAAO,mBAAmBkB,EAAWpB,EAAS,CAE1C,OAAO,IAAI,QAAQ,SAAUC,EAASC,EAAQ,CAEvC,IAACmB,EAAa,IAAI,WACTrB,EAAQ,MAGpBqB,EAAW,OAAS,SAAU5Q,EAAG,CAE7B,IAAIwQ,EAAapP,EAEbmO,EAAQ,IACRiB,EAAcpB,GAETuB,EAAU,KAAK,SAAS,KAAK,EAElCH,EAAcrB,GAGdqB,EAActB,GAGlB9N,EAASiO,EAAO,oBAAoBuB,EAAW,OAAQJ,CAAW,EAElEhB,EAAQpO,EAAQuP,CAAS,CAEzC,EAEYC,EAAW,QAAU,SAAU5Q,EAAG,CAC9B,QAAQ,IAAI,+BAAiC2Q,EAAU,IAAI,EAC3DlB,EAAO,KAAMmB,CAAU,CACvC,EAEYA,EAAW,kBAAkBD,CAAS,CAElD,CAAS,CACJ,CAED,OAAO,cAAcrB,EAAK,CAEtB,IAAIuB,EAAS,OAAO,SAAS,OAE7B,MAAO,CAACvB,EAAI,WAAWuB,CAAM,CAEhC,CAED,OAAO,oBAAqBC,EAAaN,EAAa,CAElD,IAAIO,EAAOC,EAEPR,IAAgBrB,IAChB6B,EAAU,IAAIpO,EAAK,OAAO,IAAI,WAAWkO,CAAW,CAAC,EACrDC,EAAQC,EAAQ,cAEXR,IAAgBpB,GACrB2B,EAAQ,IAAI,WAAWE,GAAOH,CAAW,CAAC,EAG1CC,EAAQ,IAAI,WAAWD,CAAW,EAItC,QADI1P,EAAS,GACJtC,EAAI,EAAGsH,EAAM2K,EAAM,OAAQjS,EAAIsH,EAAKtH,IACzCsC,EAASA,EAAS,OAAO,aAAa2P,EAAMjS,CAAC,CAAC,EAElD,OAAOsC,CACV,CAEL,CAkBA,IAAI6P,GAAS,SAAUjH,EAAMkH,EAAK,CAE1B,IAAI9O,EAAa,CAAE,EACf+O,EAAM,CAAC,CAAC,EACR9O,EAAY,EAEhB6O,EAAMA,GAAOlH,EAAK,WAAa,GAC/B,MAAMoH,EAAa,CAAA,EAEnB,KAAOD,EAAI,CAAC,EAAID,GAAK,CAEjB,IAAIG,EAAK,IAAI,WAAWrH,EAAMmH,EAAI,CAAC,EAAG,EAAE,EAEpCG,EAAQD,EAAG,EAAE,GAAK,EAAMA,EAAG,EAAE,EACvBA,EAAG,EAAE,EACLA,EAAG,EAAE,EACHA,EAAG,EAAE,GAAK,EAAMA,EAAG,EAAE,EACjC,IAAIE,EAASF,EAAG,EAAE,GAAK,EAAMA,EAAG,EAAE,EAAK,EACvCD,EAAa,KAAKG,CAAK,EAEvB,IAAItS,EAAQ,GAAKqS,EAAOH,EAAI,CAAC,EACzBvT,EAASoM,EAAK,WAAa/K,EAE/B,GAAIrB,EAAU2T,EAAQ,EAAI,MAE1B,IAAIC,EAAMvP,GAAsB+H,EAAM/K,EAAOrB,EAAQuT,CAAG,EAExDA,EAAI,CAAC,GAAK,EAEV9O,GAAamP,EAAI,WACjBpP,EAAW,KAAKoP,CAAG,CACtB,CAGD,GAAIpP,EAAW,QAAU,EACrB,OAAAA,EAAW,aAAagP,EACjBhP,EAAW,CAAC,EAInB,QAFIK,EAAM,IAAI,WAAWJ,CAAS,EAC9BK,EAAS,EACJ5D,EAAI,EAAGA,EAAIsD,EAAW,OAAQ,EAAEtD,EAAG,CACxC,IAAIpB,EAAI,IAAI,WAAW0E,EAAWtD,CAAC,CAAC,EACpCD,EAAUnB,EAAG,EAAG+E,EAAKC,EAAQhF,EAAE,MAAM,EACrCgF,GAAUhF,EAAE,MACf,CACD,OAAA+E,EAAI,OAAO,aAAa2O,EACjB3O,EAAI,MAEvB,EC/VA,MAAMgP,EAAc,CAChB,YAAYC,EAAQC,EAAeC,EAAY,CAC3C,KAAK,KAAOF,EAAO,IACnB,KAAK,cAAgBC,EACrB,KAAK,WAAaC,GAA0B,MAC5C,KAAK,MAAQ,CAAC,MAAO,GAAI,KAAM,EAAE,EACjC,KAAK,OAASF,CACjB,CAQD,iBAAiBG,EAAgBC,EAAS,CAEtC,IAAIC,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAC1C,IAAIuC,EAAWD,EAAK,MAASA,EAAK,MAAM,OAASF,EAAe,OAC1DE,EAAK,MAAM,MAAQA,EAAK,MAAM,MAAUF,EAAe,MAAQA,EAAe,KAChFD,EACAK,EAEAD,EACAE,EAAUH,EAAMF,EAAgBC,CAAO,GAIvCF,EAAa,KAAK,IAAIG,EAAK,WAAYF,EAAe,IAAI,EAEtDE,EAAK,cAAgB,GAAKF,EAAe,MAAQD,EAAaG,EAAK,cACnEE,EAAY,CAAC,MAAOJ,EAAe,KAAK,EAGxCI,EAAY,CAAC,MAAOJ,EAAe,MAAO,KAAMD,CAAU,EAG9DvC,EAAO,gBAAgB0C,EAAK,KAAM,OAAO,OAAOA,EAAK,OAAQ,CAAC,MAAOE,CAAS,CAAC,CAAC,EAC3E,KAAK,SAAUE,EAAa,CAC7BJ,EAAK,KAAOI,EACZJ,EAAK,MAAQE,EACbC,EAAUH,EAAMF,EAAgBC,CAAO,CAC3D,CAAiB,EAAE,MAAMrC,CAAM,GAKnB,SAASyC,EAAUE,EAAgBP,EAAgBC,EAAS,CAExD,IAAI1L,EAAMgM,EAAe,KAAK,WAC1BC,EAAcR,EAAe,MAAQO,EAAe,MAAM,MAC1DhR,EAAS0Q,EACL,IAAI,WAAWM,EAAe,KAAMC,EAAajM,EAAMiM,CAAW,EAClE,IAAI,SAASD,EAAe,KAAMC,EAAajM,EAAMiM,CAAW,EACxE7C,EAAQpO,CAAM,CACjB,CACb,CAAS,CAEJ,CAEL,CAIA,MAAMkR,EAAQ,CAEV,YAAYZ,EAAOa,EAAyB,CACxC,KAAK,OAAS,IAAIC,GAASd,CAAM,EACjC,KAAK,eAAiB,IAAID,GAAeC,CAAM,EAC1Ca,EAID,KAAK,eAAeA,EAHpB,KAAK,eAAeD,GAAS,aAKpC,CAaD,MAAM,YAAYG,EAAKC,EAASC,EAAMC,EAAa5I,EAAM,CAErD,GADA,KAAK,GAAK,IAAI,KAAM,EAAC,QAAO,EACxB,KAAK,UAAY4I,EACjB,OAAO,KAAK,SAEhB,MAAMC,EAAmB,MAAM,KAAK,OAAO,eAAc,EAGnDC,EAAW,KAAK,OAClBV,EAAiB,KAAK,eACtBW,EAAM/I,EAAK,WACXgJ,EAAkBV,GAAS,kBAAkBS,EAAKF,CAAgB,EACtE,IAAII,EAGAD,GAAmBF,EAAS,OAAO,UACnCG,EAAaD,EAAgB,YAC7B,KAAK,eAAiBV,GAAS,iBAE/BW,EAAaH,EAAS,OAAO,gBACzBA,EAAS,OAAS,SAClB,KAAK,eAAgBR,GAAS,cAG9B,KAAK,eAAgB,KAAK,eAIlC,MAAMY,EAAS,MAAMJ,EAAS,WAAWG,CAAU,EAC7CE,EAAS,KAAK,OAAO,UAAU,WAAWV,CAAG,EACnD,GAAIU,IAAW,OAAW,CAMtB,MAAMC,EAAO,OAAO,KAAK,KAAK,OAAO,UAAU,UAAU,EAEnDC,EAAYD,EAAK,MAAM,EAAG,CAAC,EAAE,KAAK,IAAI,GAAKA,EAAK,OAAS,EAAI,QAAU,IAC7E,MAAM,IAAI,MAAM,eAAeX,CAAG,+CAA+CY,CAAS,EAAE,CAC/F,KACI,CACD,MAAMC,EAAY,MAAMJ,EAAO,yBAAyBC,EAAQT,EAASC,CAAK,EAC9E,GAAI,CAACW,GAAaA,EAAU,QAAU,EAAG,MAAO,CAAA,EAChD,MAAMC,EAAgB,MAAM,QAAQ,IAAID,EAAU,IAAI,MAAOE,GAAS,CAClE,MAAMC,EAAW,CAAA,EAEXC,EAAa,MAAMtB,EAAe,iBAAiB,CACrD,MAAOoB,EAAK,WACZ,KAAMA,EAAK,QACd,EAAE,EAAI,EAEDzC,EADU,IAAInO,EAAK,QAAQ8Q,CAAU,EACtB,aAGrB,YAAK,eAAe,IAAI,SAAS3C,EAAM,MAAM,EAAG0B,EAAKU,EAAQT,EAASC,EAAOc,CAAQ,EAE9EA,CACV,CAAA,CAAC,EACO,IAAI,KAAM,EAAC,QAAU,EAK9B,IAAIE,EAAcJ,EAAc,CAAC,EACjC,GAAGA,EAAc,OAAS,EACtB,QAAQzU,EAAI,EAAGA,EAAIyU,EAAc,OAAQzU,IACrC6U,EAAcA,EAAY,OAAOJ,EAAczU,CAAC,CAAC,EAGzD,OAAA6U,EAAY,KAAK,SAAUhT,EAAGjD,EAAG,CAC7B,OAAOiD,EAAE,MAAQjD,EAAE,KACnC,CAAa,EACD,KAAK,SAASiW,EACPA,CACV,CACJ,CAGD,iBAAkB,CAEd,GAAG,KAAK,OAAO,cAAgB,KAC3B,OAAO,KAAK,OAAO,aAAa,YAMvC,CAGD,OAAO,kBAAkBC,EAAYf,EAAkB,CAEnD,IAAIgB,EAAQ,KAAM/U,EAAGgV,EAErB,IAAKhV,EAAI,EAAGA,EAAI+T,EAAiB,OAAQ/T,IAIrC,GAFAgV,EAAKjB,EAAiB/T,CAAC,EAEnBgV,EAAG,eAAiBF,EAAY,CAChCC,EAAQC,EACR,KACH,CAGL,OAAYD,GAAR,OACAA,EAAQhB,EAAiBA,EAAiB,OAAS,CAAC,GAGhDgB,GAASA,EAAM,eAAiB,EAAID,EAAcC,EAAQ,IACrE,CAGD,OAAO,cAAc7J,EAAMyI,EAAKU,EAAQT,EAASC,EAAOoB,EAAc,CAE/D,IAACC,EAAe,IAAIC,GAAajK,CAAI,EACpCkK,EAAUF,EAAa,SACvBG,EAAaH,EAAa,SAC1BI,EAAWJ,EAAa,SACxBK,EAAWL,EAAa,SACxBM,EAAWN,EAAa,SACxBnH,EAAOmH,EAAa,UACTA,EAAa,QAAO,EAC3C,IAAYO,EAAYP,EAAa,YACzBzO,EAEJ,GAAI2O,IAAYf,EAEZ,KAAOoB,KAAc,GAAG,CAEpB,OAAQ1H,EAAI,CACR,IAAK,GACDsH,EAAaH,EAAa,SAC1BI,EAAWJ,EAAa,SACxBzO,EAAQyO,EAAa,WACrB,MACJ,IAAK,GACDG,EAAaH,EAAa,SAC1BzO,EAAQyO,EAAa,WACrBI,EAAWD,EAAaG,EACxB,MACJ,IAAK,GACD/O,EAAQyO,EAAa,WACrBI,EAAWD,EAAaG,EACxBH,GAAcE,EACd,KAEP,CAED,GAAIF,GAAcxB,EACd,MACOyB,EAAW1B,GAAW,OAAO,SAASnN,CAAK,GAClDwO,EAAa,KAAK,CAAC,IAAKtB,EAAK,MAAO0B,EAAY,IAAKC,EAAU,MAAO7O,CAAK,CAAC,CAInF,CAGR,CAED,OAAO,eAAeyE,EAAMyI,EAAKU,EAAQT,EAASC,EAAOoB,EAAc,CAEnE,IAAIC,EAAe,IAAIC,GAAajK,CAAI,EACpCwK,EAAU,EAAI,EAClB,KAAOR,EAAa,UAAW,GAAIQ,GAE/B,GADgBR,EAAa,WACbb,EAAQ,CACpB,MAAMgB,EAAaH,EAAa,SAC1BI,EAAWJ,EAAa,SACxBS,EAAaT,EAAa,SAC1BU,EAASV,EAAa,WACtBW,EAASX,EAAa,WACtBY,EAAUZ,EAAa,WACVA,EAAa,SAAW,EAE3C,MAAMzO,EAAQkP,GAAc,EAAI,EAAIG,EAAUH,EAE9C,GAAIN,GAAcxB,GAASwB,EAAW,IAGlC,MAEOC,EAAW1B,GAAW,OAAO,SAASnN,CAAK,GAClDwO,EAAa,KAAK,CAAC,IAAAtB,EAAK,MAAO0B,EAAY,IAAKC,EAAU,MAAA7O,EAAO,OAAAmP,EAAQ,OAAAC,CAAM,CAAC,CAEvF,CAGR,CAKD,cAAc3K,EAAMyI,EAAKU,EAAQT,EAASC,EAAOoB,EAAc,CAa3D,QAXIC,EAAe,IAAIC,GAAajK,CAAI,EACpCwK,EAAU,EAAI,EAAI,EAClBN,EACAC,EACAC,EACAS,EACAC,EACAC,EAIGf,EAAa,UAAW,GAAIQ,GAE/BN,EAAUF,EAAa,SACnBE,GAAWf,IAEfgB,EAAaH,EAAa,SAC1BI,EAAWJ,EAAa,SACxBa,EAAOb,EAAa,YAEpBe,EAAU,CAAC,IAAKtC,EAAK,MAAO0B,EAAY,IAAKC,CAAQ,EAEjDD,EAAaxB,GAASyB,GAAY1B,IAClCqB,EAAa,KAAKgB,CAAO,EAEzBD,EAASD,EAAK,MAAM,GAAI,EACxB,KAAK,eAAeC,EAAOC,CAAO,GAM7C,CAED,OAAO,cAAcD,EAAOC,EAAQ,CAqBxB,GApBJD,EAAO,OAAS,IACRC,EAAQ,KAAOD,EAAO,CAAC,GAGvBA,EAAO,OAAS,IAChBC,EAAQ,MAAQ,WAAWD,EAAO,CAAC,CAAC,GAEpCA,EAAO,OAAS,IAChBC,EAAQ,OAASD,EAAO,CAAC,GAEzBA,EAAO,OAAS,IAChBC,EAAQ,QAAU,SAASD,EAAO,CAAC,CAAC,GAEpCA,EAAO,OAAS,IAChBC,EAAQ,MAAQ,SAASD,EAAO,CAAC,CAAC,GAElCA,EAAO,OAAS,EAIhBA,EAAO,OAAS,EAAG,CACnB,UAAY,SAASA,EAAO,CAAC,CAAC,EAC9B,UAAYA,EAAO,CAAC,EAAE,MAAM,GAAG,EAC/B,WAAaA,EAAO,CAAC,EAAE,MAAM,GAAG,EAChC,MAAQ,CAAA,EAER,QAAS,EAAI,EAAG,EAAI,UAAW,IAC3B,OAAS,MAAQ,SAAS,WAAW,CAAC,CAAC,EACvC,KAAO,OAAS,SAAS,UAAU,CAAC,CAAC,EACrC,MAAM,KAAK,CAAC,MAAO,OAAQ,IAAK,IAAI,CAAC,EAGzCC,EAAQ,MAAQ,KACnB,CAEZ,CACL,CAOA,MAAMC,GAAmB,WACnBC,GAAmB,UACnBC,GAAmB,WACnBC,GAAmB,WACnBC,GAAqB,GAG3B,MAAM5C,EAAQ,CACV,YAAYd,EAAQ,CAChB,KAAK,KAAOA,EAAO,IACnB,KAAK,SAAWA,EAAO,SAAW,KAAK,KACvC,KAAK,YAAc,GACnB,KAAK,OAAS,KAAK,MAAM,KAAK,UAAUA,CAAM,CAAC,CAClD,CAED,MAAM,gBAAiB,CACnB,OAAI,KAAK,iBACE,KAAK,kBAGZ,MAAM,KAAK,aACJ,KAAK,iBAEnB,CAED,MAAM,YAAa,CAGf,MAAM1H,EAAO,MAAMqF,EAAO,gBAAgB,KAAK,KAAM,OAAO,OAAO,KAAK,OAAQ,CAAC,MAAO,CAAC,MAAO,EAAG,KAAM+F,EAAkB,CAAC,CAAC,CAAC,EAE9H,GAAI,CAACpL,EAAM,OAGX,KAAK,aAAe,GACpB,MAAMgK,EAAe,IAAIC,GAAa,IAAI,SAASjK,CAAI,CAAC,EAClDqL,EAAQrB,EAAa,UAE3B,OAAIqB,IAAUL,GACV,KAAK,KAAO,SAEPK,GAASH,GACd,KAAK,KAAO,UAIZ,KAAK,aAAe,GAEpBlB,EAAa,aAAe,GAC5BA,EAAa,SAAW,EAGpBqB,IAAUJ,GACV,KAAK,KAAO,SAEPI,GAASF,KACd,KAAK,KAAO,WAOpB,KAAK,OAAS,GACd,KAAK,OAAO,UAAYnB,EAAa,UAAS,EAC9C,KAAK,OAAO,YAAcA,EAAa,UAAS,EAChD,KAAK,OAAO,gBAAkBA,EAAa,QAAO,EAClD,KAAK,OAAO,eAAiBA,EAAa,QAAO,EACjD,KAAK,OAAO,gBAAkBA,EAAa,QAAO,EAClD,KAAK,OAAO,WAAaA,EAAa,UAAS,EAC/C,KAAK,OAAO,kBAAoBA,EAAa,UAAS,EACtD,KAAK,OAAO,cAAgBA,EAAa,QAAO,EAChD,KAAK,OAAO,mBAAqBA,EAAa,QAAO,EACrD,KAAK,OAAO,mBAAqBA,EAAa,OAAM,EACpD,KAAK,OAAO,SAAWA,EAAa,QAAO,EAEpC,MAAM,KAAK,2BACrB,CAGD,MAAM,2BAA4B,CAC9B,MAAMsB,EAAcF,GAEdvF,EAAQ,CAAC,MAAOyF,EAAa,KAAO,KAAK,OAAO,eAAiBA,EAAc,CAAE,EAEjFtL,EAAO,MAAMqF,EAAO,gBAAgB,KAAK,KAAM,OAAO,OAAO,KAAK,OAAQ,CAAC,MAAOQ,CAAK,CAAC,CAAC,EAE5F,IAAC0F,EAAS,KAAK,OAAO,YACrBvB,EAAe,IAAIC,GAAa,IAAI,SAASjK,CAAI,CAAC,EAClDlL,EAEA0W,EACAC,EAKJ,IAHA,KAAK,iBAAmB,GAExB,KAAK,oBAAsB,OAAO,UAC7B3W,EAAI,EAAGA,EAAIyW,EAAQzW,IACpB0W,EAAaD,EAASzW,EACtB2W,EAAM,IAAIC,GAAgBF,EAAYxB,CAAY,EAClD,KAAK,oBAAsB,KAAK,IAAIyB,EAAI,WAAY,KAAK,mBAAmB,EAC5E,KAAK,iBAAiB,KAAKA,CAAG,EAI9B,KAAK,OAAO,cAAgB,IAC5BzB,EAAa,SAAW,KAAK,OAAO,cAAgBsB,EACpD,KAAK,QAAUtB,EAAa,aAI5B,KAAK,OAAO,mBAAqB,IACjCA,EAAa,SAAW,KAAK,OAAO,mBAAqBsB,EACzD,KAAK,aAAe,IAAIK,GAAe3B,CAAY,GAInD,KAAK,OAAO,gBAAkB,GAC9BA,EAAa,SAAW,KAAK,OAAO,gBAAkBsB,EACtD,KAAK,UAAY,IAAIM,GAAO5B,EAAcsB,CAAW,GAIrD,QAAQ,MAAM,mCAAoC,KAAK,UAAU,KAAK,MAAM,CAAC,EAIjFtB,EAAa,SAAW,KAAK,OAAO,eAAiBsB,EACrD,KAAK,UAAYtB,EAAa,QACjC,CAED,MAAM,WAAWpQ,EAAQ,CACrB,IAAIsP,EAAS,KAAK,YAAYtP,CAAM,EAEpC,MAAI,CAACsP,GAAUA,EAAO,WAClBA,EAAS,IAAI2C,GAAOjS,EAAQ,KAAK,cAAe,KAAK,OAAQ,KAAK,YAAY,EAC9E,KAAK,YAAYA,CAAM,EAAIsP,EAC3B,MAAMA,EAAO,KAAM,GAEhBA,CACV,CACL,CAEC,MAAMwC,EAAe,CACjB,YAAY/X,EAAOmY,EAAY,CAC5B,KAAK,MAAQnY,EACb,KAAK,eAAiBmY,EAAW,SACjC,KAAK,SAAWA,EAAW,SAC3B,KAAK,WAAaA,EAAW,UAC7B,KAAK,YAAcA,EAAW,SACjC,CACH,CAKF,MAAMC,GAAqB,GACrBC,GAA6B,GAC7BC,GAA8B,GAC9BC,GAAc,MAOpB,MAAML,EAAM,CAER,YAAaM,EAAYxE,EAAeD,EAAQ0E,EAAc,CAE1D,KAAK,OAAS1E,EACd,KAAK,SAAWC,EAChB,KAAK,WAAawE,EAClB,KAAK,KAAOzE,EAAO,IACnB,KAAK,aAAe0E,CACvB,CAGD,MAAM,MAAO,CACT,MAAMC,EAAiB,KAAK,WAAaN,GACrC3D,EAAiB,IAAIX,GAAe,KAAK,OAAQ,KAAK,SAAUyE,EAAW,EAEzEI,EAAO,MAAM,KAAK,SAASD,EAAgBjE,CAAc,EAC/D,YAAK,SAAWkE,EACT,IACV,CAGD,MAAM,SAASC,EAAcnE,EAAgB,CAEzC,MAAMoE,EAAW,MAAMpE,EAAe,iBAAiB,CAAC,MAAOmE,EAAc,KAAM,CAAC,EAAG,EAAK,EACtFvC,EAAe,IAAIC,GAAauC,EAAU,KAAK,YAAY,EAG3DC,EADOzC,EAAa,YACD,EACRA,EAAa,QAAU,EACxC,MAAMlS,EAAQkS,EAAa,YAE3BuC,GAAgB,EAEhB,MAAMG,EAAgB5U,GAAS2U,EAAST,GAA6BC,IAC/DU,EAAS,CAAC,MAAOJ,EAAc,KAAMG,CAAa,EAElDE,EAAY,MAAMxE,EAAe,iBAAiBuE,EAAQ,EAAK,EAE/DE,EAAQ,IAAI,MAAM/U,CAAK,EACzBgV,EAAgB,IAAI7C,GAAa2C,CAAS,EAE9C,GAAIH,EAAQ,CACR,QAAS3X,EAAI,EAAGA,EAAIgD,EAAOhD,IAAK,CAC5B,MAAM0U,EAAO,CACT,OAAQ,GACR,WAAYsD,EAAc,OAAQ,EAClC,UAAWA,EAAc,OAAQ,EACjC,SAAUA,EAAc,OAAQ,EAChC,QAASA,EAAc,OAAQ,EAC/B,WAAYA,EAAc,QAAS,EACnC,SAAUA,EAAc,QAAS,CACrD,EACgBD,EAAM/X,CAAC,EAAI0U,CACd,CACD,OAAO,IAAIuD,GAAWF,CAAK,CAC9B,KACI,CACD,QAAS/X,EAAI,EAAGA,EAAIgD,EAAOhD,IAAK,CAC5B,MAAM0U,EAAO,CACT,OAAQ,GACR,WAAYsD,EAAc,OAAQ,EAClC,UAAWA,EAAc,OAAQ,EACjC,SAAUA,EAAc,OAAQ,EAChC,QAASA,EAAc,OAAQ,EAC/B,YAAaA,EAAc,QAAS,CACxD,EACgBD,EAAM/X,CAAC,EAAI0U,CACd,CAED,OAAO,IAAIuD,GAAWF,CAAK,CAC9B,CACJ,CAGD,MAAM,yBAAyB1D,EAAQ6D,EAAWC,EAAS,CACvD,MAAM3D,EAAY,CAAE,EAChBlB,EAAiB,IAAIX,GAAe,KAAK,OAAQ,KAAK,SAAUyE,EAAW,EAEzEgB,EAAgB,MAAOZ,IACrBT,GAAO,SAASS,EAAMnD,EAAQ6D,EAAWC,CAAO,GAChD,MAAM,QAAQ,IAAIX,EAAK,MAAM,IAAI,MAAO9C,GAAS,CAC7C,GAAIqC,GAAO,SAASrC,EAAML,EAAQ6D,EAAWC,CAAO,EAChD,GAAIzD,EAAK,OACLF,EAAU,KAAKE,CAAI,UAGfA,EAAK,UACL,MAAM0D,EAAc1D,EAAK,SAAS,MAEjC,CAGD,MAAM8C,EAAO,MAAM,KAAK,SAAS9C,EAAK,YAAapB,CAAc,EACjEoB,EAAK,UAAY8C,EACjB,MAAMY,EAAcZ,EAAM9C,EAAK,WAAW,CAC7C,CAGZ,CAAA,CAAC,EAECF,GAEX,OAAO,MAAM4D,EAAc,KAAK,QAAW,CAC9C,CASD,OAAO,SAAS1D,EAAML,EAAQ6D,EAAWC,EAAS,CAI9C,OAAKzD,GAIIL,EAASK,EAAK,YAAgBL,GAAUK,EAAK,YAAcyD,GAAWzD,EAAK,aAC9EL,EAASK,EAAK,UAAcL,GAAUK,EAAK,UAAYwD,EAAYxD,EAAK,UAJ1E,QAAQ,IAAI,WAAW,EAChB,GAId,CACL,CAGA,MAAMuD,EAAU,CACZ,YAAYF,EAAO,CACf,KAAK,MAAQA,EAEb,IAAIM,EAAa,OAAO,UACpBC,EAAa,EACbC,EAAe,OAAO,UACtBC,EAAa,EACbxY,EACA0U,EAEJ,IAAK1U,EAAI,EAAGA,EAAI+X,EAAM,OAAQ/X,IAC1B0U,EAAOqD,EAAM/X,CAAC,EACdqY,EAAa,KAAK,IAAIA,EAAY3D,EAAK,UAAU,EACjD4D,EAAa,KAAK,IAAIA,EAAY5D,EAAK,QAAQ,EAC/C6D,EAAe,KAAK,IAAIA,EAAc7D,EAAK,SAAS,EACpD8D,EAAa,KAAK,IAAIA,EAAY9D,EAAK,OAAO,EAGlD,KAAK,WAAa2D,EAClB,KAAK,SAAWC,EAChB,KAAK,UAAYC,EACjB,KAAK,QAAUC,CAElB,CACL,CAGA,MAAMrD,EAAY,CACd,YAAYuC,EAAUJ,EAAc,CAEhC,KAAK,aAAgBA,GAA8B,GACnD,KAAK,SAAW,EAChB,KAAK,KAAOI,EACZ,KAAK,OAASA,EAAS,UAC1B,CAED,WAAY,CACR,OAAO,KAAK,OAAS,KAAK,QAC7B,CAED,WAAY,CACR,OAAO,KAAK,OAAS,KAAK,QAC7B,CAED,SAAU,CACN,OAAO,KAAK,SAAW,KAAK,OAAS,CACxC,CAED,SAAU,CACN,IAAIe,EAAW,KAAK,KAAK,SAAS,KAAK,SAAU,KAAK,YAAY,EAClE,YAAK,WACEA,CACV,CAED,UAAW,CAEP,IAAIA,EAAW,KAAK,KAAK,SAAS,KAAK,SAAU,KAAK,YAAY,EAClE,YAAK,UAAY,EACVA,CACV,CAED,WAAW,CAQP,IAAIA,EAAW,KAAK,KAAK,UAAW,KAAK,SAAU,KAAK,YAAY,EACpE,YAAK,UAAY,EACVA,CACV,CAGD,QAAS,CAEL,IAAIA,EAAW,KAAK,KAAK,SAAS,KAAK,SAAU,KAAK,YAAY,EAClE,YAAK,UAAY,EACVA,CACV,CAGD,SAAU,CACN,IAAIA,EAAW,KAAK,KAAK,UAAU,KAAK,SAAU,KAAK,YAAY,EACnE,YAAK,UAAY,EACVA,CACV,CAED,SAAU,CAIN,IAAI7Z,EAAI,CAAA,EACRA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,QAAQ,EACvCA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,SAAW,CAAC,EAC3CA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,SAAW,CAAC,EAC3CA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,SAAW,CAAC,EAC3CA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,SAAW,CAAC,EAC3CA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,SAAW,CAAC,EAC3CA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,SAAW,CAAC,EAC3CA,EAAE,CAAC,EAAI,KAAK,KAAK,SAAS,KAAK,SAAW,CAAC,EAE3C,IAAI6H,EAAQ,EACZ,GAAI,KAAK,aACL,QAAS,EAAI7H,EAAE,OAAS,EAAG,GAAK,EAAG,IAC/B6H,EAASA,EAAQ,IAAO7H,EAAE,CAAC,MAG/B,SAAS,EAAI,EAAG,EAAIA,EAAE,OAAQ,IAC1B6H,EAASA,EAAQ,IAAO7H,EAAE,CAAC,EAKnC,YAAK,UAAY,EACV6H,CACV,CAED,UAAUa,EAAK,CAIX,QAFItG,EAAI,GACJzB,GACIA,EAAI,KAAK,KAAK,SAAS,KAAK,UAAU,IAAM,IAChDyB,GAAK,OAAO,aAAazB,CAAC,EACtB,EAAA+H,GAAOtG,EAAE,QAAUsG,KAAvB,CAEJ,OAAOtG,CACV,CAED,qBAAqBsG,EAAK,CAEtB,IAAItG,EAAI,GACJ,EACAzB,EACJ,IAAK,EAAI,EAAG,EAAI+H,EAAK,IACjB/H,EAAI,KAAK,KAAK,SAAS,KAAK,UAAU,EAClCA,EAAI,IACJyB,GAAK,OAAO,aAAazB,CAAC,GAGlC,OAAOyB,CACV,CAED,4BAA4BsG,EAAK,CAE7B,IAAItG,EAAI,GACJ,EACAzB,EACJ,IAAK,EAAI,EAAG,EAAI+H,EAAK,IACjB/H,EAAI,KAAK,KAAK,SAAS,KAAK,UAAU,EAClCA,EAAI,KACJyB,GAAK,OAAO,aAAazB,CAAC,GAGlC,OAAOyB,CACV,CAED,UAAW,CAEP,IAAIyX,EAAW,KAAK,KAAK,WAAW,KAAK,SAAU,KAAK,YAAY,EACpE,YAAK,UAAY,EACVA,CAGV,CAED,WAAY,CAER,IAAIA,EAAW,KAAK,KAAK,WAAW,KAAK,SAAU,KAAK,YAAY,EACpE,YAAK,UAAY,EACVA,CACV,CAED,KAAKzZ,EAAG,CAEJ,YAAK,UAAYA,EACV,KAAK,QACf,CAQD,aAAc,CAEV,IAAI6L,EAAW,KAAK,SAChB/F,EAAU,KAAK,KAAK,SAAS+F,EAAW,CAAC,GAAK,EAAM,KAAK,KAAK,SAASA,CAAQ,EAC/E6N,GAAU,KAAK,KAAK,SAAS7N,EAAW,CAAC,EAAI,KAAQ,WACrD8N,GAAU,KAAK,KAAK,SAAS9N,EAAW,CAAC,EAAI,KAAQ,SACrD+N,GAAU,KAAK,KAAK,SAAS/N,EAAW,CAAC,EAAI,KAAQ,MACrDgO,GAAU,KAAK,KAAK,SAAShO,EAAW,CAAC,EAAI,KAAQ,IACrDiO,EAAU,KAAK,KAAK,SAASjO,EAAW,CAAC,EAAI,IAC7CxB,EAAQqP,EAAQC,EAAQC,EAAQC,EAAQC,EAC5C,YAAK,UAAY,EAKV,IAAIC,GAAS1P,EAAOvE,CAAM,CAEpC,CACL,CAEA,MAAMiU,EAAQ,CACV,YAAY1P,EAAOvE,EAAQ,CACvB,KAAK,MAAQuE,EACb,KAAK,OAASvE,CACjB,CAED,WAAWkU,EAAI,CACX,OAAO,KAAK,MAAQA,EAAG,OAClB,KAAK,QAAUA,EAAG,OAAS,KAAK,OAASA,EAAG,MACpD,CAED,cAAcA,EAAI,CACd,OAAO,KAAK,MAAQA,EAAG,OAClB,KAAK,QAAUA,EAAG,OAAS,KAAK,OAASA,EAAG,MACpD,CAED,OAAQ,CACJ,MAAO,GAAK,KAAK,MAAQ,IAAM,KAAK,MACvC,CACL,CAOA,MAAMnC,EAAc,CAChB,YAAYG,EAAY,CAEhBA,GAEA,KAAK,aAAeA,EAAW,UAC/B,KAAK,OAASA,EAAW,YACzB,KAAK,OAASA,EAAW,YACzB,KAAK,QAAUA,EAAW,YAC1B,KAAK,WAAaA,EAAW,YAE7B,KAAK,aAAY,IAGjB,KAAK,aAAe,EACpB,KAAK,OAAS,EACd,KAAK,OAAS,EACd,KAAK,QAAU,EACf,KAAK,WAAa,EAClB,KAAK,KAAO,EACZ,KAAK,OAAS,EAErB,CAGD,cAAe,CACX,IAAIhY,EAAI,KAAK,aACTA,EAAI,IACJ,KAAK,KAAO,KAAK,QAAUA,EAC3B,KAAK,OAAS,KAAK,KAAK,KAAK,YAAcA,EAAI,EAAE,EAEvC,KAAK,OAAS,GAAI,KAAK,KAAO,EAAI,KAAK,OACvC,KAAK,OAAS,GAAI,KAAK,KAAO,EAAI,KAAK,OAEjD,KAAK,aAAe,CAChB,IAAK,EACL,IAAK,KAAK,KAAO,EAAI,KAAK,MAC7B,EAER,CAED,YAAYia,EAAO,CAEf,KAAK,cAAgBA,EAAM,MAC3B,KAAK,SAAWA,EAAM,QACtB,KAAK,YAAc,WACnB,KAAK,OAAS,IAAI,QAAS,GAAG,EAC9B,KAAK,OAAS,IAAI,QAAS,GAAG,EAE9B,aAAa,KAAK,IAAI,CAEzB,CAGL,CAWC,MAAMnC,EAAM,CACR,YAAY5B,EAAcsB,EAAa,CAKpC,KAAK,OAAS,GACd,KAAK,OAAO,MAAQtB,EAAa,OAAM,EACvC,KAAK,OAAO,UAAYA,EAAa,OAAM,EAC3C,KAAK,OAAO,QAAUA,EAAa,OAAM,EACzC,KAAK,OAAO,QAAUA,EAAa,OAAM,EACzC,KAAK,OAAO,UAAYA,EAAa,QAAO,EAC5C,KAAK,OAAO,SAAWA,EAAa,QAAO,EAE3C,KAAK,WAAa,GAGlBgE,EAAahE,EAAc,GAAI,KAAK,OAAO,QAAS,KAAK,UAAU,EAEpD,EAAI,KAAK,OAAO,QAG/B,SAASgE,EAAalC,EAAYlS,EAAQqU,EAAS5a,EAAY,CAEvDuG,GAAU,IAAGkS,EAAW,SAAWlS,GAEpC,IAACiJ,EAAOiJ,EAAW,UACPA,EAAW,QAAO,EAC7C,IAAgBhU,EAAQgU,EAAW,YACnBhX,EACA2F,EACAyP,EAEAgE,EACAC,EACAC,EAGJ,GAAIvL,GAAQ,EAER,IAAK/N,EAAI,EAAGA,EAAIgD,EAAOhD,IAEnB2F,EAAMqR,EAAW,4BAA4BmC,CAAO,EACpD/D,EAAU4B,EAAW,SACTA,EAAW,OAAM,EAG7BzY,EAAWoH,CAAG,EAAIyP,MAMtB,KAAKpV,EAAI,EAAGA,EAAIgD,EAAOhD,IAEnB2F,EAAMqR,EAAW,4BAA4BmC,CAAO,EACpDC,EAAcpC,EAAW,UACzBqC,EAAeD,EAAc5C,EAC7B8C,EAAatC,EAAW,SACxBkC,EAAalC,EAAYqC,EAAcF,EAAS5a,CAAU,EAC1DyY,EAAW,SAAWsC,CAIjC,CACJ,CAGL,CCpgCA,IAAIC,GAAmB,CACf,WAAY,GACZ,IAAK,CAAC,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,QAAQ,EACnJ,EAAG,CACC,KAAM,WACN,OAAQ,2BACX,EACD,OAAQ,CACJ,OAAQ,0IACR,MAAO,kMACV,CACT,EAIA,MAAMC,EAAK,CAGP,OAAO,cAAcC,EAAWC,EAAO,CAEnC,OAAID,EAAU,WAAW,KAAK,EACnBA,EAAU,QAAQ,MAAO,MAAM,EAAE,QAAQ,IAAK,KAAOC,EAAQ,GAAG,GAEvE,QAAQ,IAAID,EAAY,6BAA6B,EAC9CA,EAGd,CAED,OAAO,aAAaE,EAAUC,EAAM,CAChC,IAAIC,EAAK,EAAE,OAAO,EAAE,IAAI,CAAC,SAAW,WAAW,mBAAmB,OAAO,CAAC,EAAE,KAAK,QAAQ,WAAW,EAAE,SAASF,CAAS,EAC9G,EAAE,OAAO,EAAE,IAAI,CAAC,QAAU,OAAO,kBAAkB,QAAQ,CAAC,EAAE,SAASE,CAAG,EAC/E,OAAO,EAAE,2CAA2C,EAAE,IAAI,CAAC,MAAM,MAAM,YAAY,OAAO,aAAa,QAAQ,CAAE,CAAC,EACvHA,EAAI,OAAO,EAAE,QAAQD,EAAM,QAAQ,EAAE,IAAI,CAAC,MAAM,MAAM,YAAY,OAAO,aAAa,QAAQ,CAAC,CAAC,EAChG,IAAIE,EAAO,KAAK,MAAOH,EAAU,QAAQ,EAAIE,EAAI,QAAQ,CAAE,EACvDE,EAAK,KAAK,MAAOJ,EAAU,SAAS,EAAIE,EAAI,SAAS,CAAE,EAC3DA,EAAI,IAAI,CAAC,KAAOC,EAAK,KAAK,IAAIC,EAAI,IAAI,CAAC,CAI1C,CAKD,OAAO,QAAQ7V,EAAM,CAGd,IACC8V,EAEJ,OAAAA,EAAW,EAAE,qDAAqD,EAAE,IAAI,CAAC,SAAS,WAAW,IAAI,MAAM,KAAK,KAAK,CAAC,EAC9G9V,GACA8V,EAAS,IAAI,YAAa9V,CAAI,EAK3B8V,EAAS,CAAC,CACpB,CAKD,OAAO,kCAAkCC,EAAe,CACpD,OAAOA,EAAc,KAAK,2BAA2B,CACxD,CAKD,OAAO,4BAA4BA,EAAe,CAC/CA,EAAc,SAAS,aAAa,EAAE,KAAI,CAE5C,CAMD,OAAO,2BAA4BA,EAAe,CAC9CA,EAAc,SAAS,aAAa,EAAE,KAAI,CAG7C,CAED,OAAO,SAAS7P,EAAK,CAOjB,QALI8P,EAAIX,GACJra,EAAIgb,EAAE,OAAiC,MAAS,KAAK9P,CAAG,EACxD+P,EAAM,CAAE,EACRna,EAAI,GAEDA,KAAKma,EAAID,EAAE,IAAIla,CAAC,CAAC,EAAId,EAAEc,CAAC,GAAK,GAEpC,OAAAma,EAAID,EAAE,EAAE,IAAI,EAAI,CAAA,EAChBC,EAAID,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQA,EAAE,EAAE,OAAQ,SAAUE,EAAIC,EAAIC,EAAI,CACjDD,IAAIF,EAAID,EAAE,EAAE,IAAI,EAAEG,CAAE,EAAIC,EACxC,CAAS,EAEMH,CACV,CAKD,OAAO,uBAAuBI,EAAS,CACnC,MAAO,MAAQA,EAAQ,WAAa,MAAQA,EAAQ,UAAY,MAAQA,EAAQ,YAAc,MAAQA,EAAQ,YACjH,CAED,OAAO,SAASvb,EAAG,CAEf,OAAWA,IAAP,IAGqBA,IAAd,OADA,GAMA,CAAC,MAAM,WAAWA,CAAC,CAAC,GAAK,SAASA,CAAC,CAGjD,CAED,OAAO,MAAS,CACZ,OAAQ,QAAU,KAAK,OAAQ,EAAG,KAAK,IAAI,GAAI,CAAC,GAAK,GAAG,SAAS,EAAE,GAAG,MAAM,EAAE,CACjF,CAGD,OAAO,OAAOwb,EAAKC,EAAK,CACpB,OAAO,KAAK,OAAQ,GAAIA,EAAMD,GAAOA,CACxC,CAGD,OAAO,gBAAgBE,EAAW,CAE9B,IAAIC,EAAM,OAAOD,CAAS,EAAE,MAAM,MAAM,EACpCE,EAAM,IACNC,EAAS,IAEb,OAAOF,EAAI,CAAC,EAAE,MAAM,EAAE,EAAE,QAAS,EAAC,OAAO,SAAUzS,EAAM4S,EAAK9a,EAAG,CACzD,OAAOA,EAAI,IAAM,EAAIkI,EAAO0S,EAAME,EAAM5S,EAAO4S,CAC/D,CAAa,EAAE,MAAM,EAAE,EAAE,QAAS,EAAC,KAAK,EAAE,GAAKH,EAAI,CAAC,EAAIE,EAASF,EAAI,CAAC,EAAI,GACrE,CAED,OAAO,kBAAmBI,EAAgB,CAEtC,OAAOA,EAAe,MAAM,GAAG,EAAE,OAAO,QAAQ,IAAK,GAAI,GAAG,CAC/D,CAQD,OAAO,0BAA0B,EAAGC,EAAQ,CAExC,IAAIC,EAAS,EAAE,MAAM,IAAI,CAAC,EACtBC,EAAOD,EAAO,MAAQ,EAAED,CAAM,EAAE,OAAM,EAAG,KACzCG,EAAOF,EAAO,MAAQ,EAAED,CAAM,EAAE,OAAQ,EAAC,IAE7C,MAAO,CAAC,EAAGE,EAAM,EAAGC,CAAI,CAE3B,CAKD,OAAO,kBAAmBC,EAAgB,CAEtC,IAAIC,EAAS,oCAEb,OAAAD,EAAe,QAAQ,SAAUE,EAAW,CAEpCA,EAAU,KAEVD,GAAU,kGAAoHC,EAAU,KAAO,yCAAkDA,EAAU,MAAQ,0BAInND,GAAU,WAAaC,EAAU,SAAQ,EAAK,YAE9D,CAAS,EAEDD,GAAU,WACHA,CAGV,CAED,OAAO,SAAS1J,EAAI4J,EAAYC,EAAO,CACnCD,IAAeA,EAAa,KAC5B,IAAIE,EAAMC,EAEV,OAAO,UAAY,CACf,IAAIC,EAAUH,GAAS,KAEnBV,EAAM,CAAC,IAAI,KACXc,EAAO,UACPH,GAAQX,EAAMW,EAAOF,GAErB,aAAaG,CAAU,EACvBA,EAAa,WAAW,UAAY,CAChCD,EAAOX,EACPnJ,EAAG,MAAMgK,EAASC,CAAI,CACzB,EAAEL,CAAU,IAEbE,EAAOX,EACPnJ,EAAG,MAAMgK,EAASC,CAAI,EAE7B,CACJ,CAED,OAAO,4BAA4BC,EAAQC,EAAO,CAE9C,IAAI9F,EAAS,CAAE,EACX1O,EAAMuU,EAAO,OACb7b,EACA,EAAI,EACJ+b,EAAQ,GACRxc,EAEJ,GAAI+H,EAAM,EAGN,IADA0O,EAAO,CAAC,EAAI6F,EAAO,OAAO,CAAC,EACtB7b,EAAI,EAAGA,EAAIsH,EAAKtH,IACjBT,EAAIsc,EAAO,OAAO7b,CAAC,EACfT,IAAM,IACNwc,EAAQ,CAACA,EAEJ,CAACA,GAASxc,IAAMuc,GACrB,IACA9F,EAAO,CAAC,EAAI,IAGZA,EAAO,CAAC,GAAKzW,EAIzB,OAAOyW,CACV,CAOF,OAAO,mBAAqB,CAGvB,EAAE,cAAc,UAAW,SAAUvF,EAASuL,EAAiBC,EAAO,CAElE,MAAO,CAEH,KAAM,SAAUC,EAAGC,EAAU,CAEtB,IAACvL,EAAM,IAAI,eACVJ,EAAMC,EAAQ,IACd1C,EAAO0C,EAAQ,KACfO,EAAe,cAanB,GAZWP,EAAQ,KAEnBG,EAAI,iBAAiB,OAAQ,UAAY,CACrC,IAAI1F,EAAO,CAAA,EACXA,EAAKuF,EAAQ,QAAQ,EAAIG,EAAI,SAE7BuL,EAASvL,EAAI,OAAQA,EAAI,WAAY1F,EAAM0F,EAAI,sBAAqB,CAAE,CAC9F,CAAqB,EAEDA,EAAI,KAAK7C,EAAMyC,CAAG,EAClBI,EAAI,aAAeI,EAEfP,EAAQ,QACR,QAASZ,KAAQY,EAAQ,QACjBA,EAAQ,QAAQ,eAAeZ,CAAI,GACnCe,EAAI,iBAAiBf,EAAMY,EAAQ,QAAQZ,CAAI,CAAC,CAM/D,EACD,MAAO,UAAY,CACfoM,EAAM,MAAK,CACd,CACjB,CAEA,CAAS,CACJ,CAQD,OAAO,iBAAiBxV,EAAO,CAC3B,MAAQ,GAAAA,EAAM,WAAaA,EAAM,QACpC,CAED,OAAO,cAAc2V,EAAQC,EAAS,CAElC,IAAIC,EACAC,EACAC,EAAY,CAAE,EACdC,EAAa,CAAA,EAEjB,OAAAA,EAAW,KAAOA,EAAW,IAAM,EACnCA,EAAW,MAAQJ,EAAQ,aAC3BI,EAAW,OAASJ,EAAQ,cAE5BE,EAAUH,EAAO,SAEjBI,EAAU,KAAOD,EAAQ,KAAOF,EAAQ,OAAQ,EAAC,KACjDG,EAAU,IAAMD,EAAQ,IAAMF,EAAQ,OAAQ,EAAC,IAC/CG,EAAU,MAAQA,EAAU,KAAOJ,EAAO,WAAU,EACpDI,EAAU,OAASA,EAAU,IAAMJ,EAAO,YAAW,EAErDE,EAAQE,EAAU,OAASC,EAAW,OAClCH,EAAQ,IAGRC,EAAQ,KAAOD,EAEfE,EAAU,KAAOF,EACjBE,EAAU,QAAUF,EAEpBA,EAAQE,EAAU,IAAMC,EAAW,IAC/BH,EAAQ,IACRC,EAAQ,KAAOD,IAKhBC,CAEV,CAED,OAAO,IAAI9K,EAAS,CACZ,IAAI,eAAiB,SAAW,QAAQ,KACxC,QAAQ,IAAIA,CAAO,CAE1B,CAGL,CCnVA,MAAMiL,GAAY,SACZC,GAAc,SAYpB,IAAIC,GAAe,SAAUC,EAAUjK,EAAQkK,EAAO,CAE9C,OAAO,IAAI,QAAQ,SAAUpM,EAASC,EAAQ,CAI1CJ,EAAO,gBAAgBsM,EACnB,CACI,QAASjK,EAAO,QAChB,gBAAiBA,EAAO,eAC5C,CAAiB,EAAE,KAAK,SAAUS,EAAa,CAE/B,IAAI0J,EAAU,CAAE,EACZxG,EAAOyG,EAAMC,EAAOC,EAAMC,EAC1BC,EAAW,OAAO,UAClBC,EAAW,EACXC,EAAUC,EAAaC,EAAWC,EAAIC,EAAI9e,EAAGoB,EAAG2d,EAAKC,EAEzD,GAAI,CAACvK,EAAa,CACd3C,EAAQ,IAAI,EACZ,MACH,CAED,GAAIoM,EAAO,CACP,IAAI5K,EAAU,IAAIpO,EAAK,OAAO,IAAI,WAAWuP,CAAW,CAAC,EACzDA,EAAcnB,EAAQ,WAAY,EAAC,MACtC,CAMD,GAJAiL,EAAS,IAAIhI,GAAa,IAAI,SAAS9B,CAAW,CAAC,EAEnDkD,EAAQ4G,EAAO,SAEX5G,IAAUmG,IAAcI,GAASvG,IAAUoG,GAAc,CAKzD,GAHAO,EAAOC,EAAO,SAGVL,EAWA,IATaK,EAAO,OAAS,EACfA,EAAO,OAAS,EAChBA,EAAO,OAAS,EAChBA,EAAO,OAAS,EACnBA,EAAO,OAAS,EAChBA,EAAO,OAAS,EAChBA,EAAO,OAAS,EAE3BS,EAAmB,CAAA,EACd5d,EAAI,EAAGA,EAAIkd,EAAMld,IAAK,CACvB,IAAI6d,EAAWV,EAAO,YAKtBS,EAAiBC,CAAQ,EAAI7d,CAChC,CAGL,IAAK2d,EAAM,EAAGA,EAAMT,EAAM,EAAES,EAAK,CAO7B,IALAL,EAAW,CAAA,EACXC,EAAc,CAAA,EAEdP,EAAOG,EAAO,SAETve,EAAI,EAAGA,EAAIoe,EAAM,EAAEpe,EAIpB,GAFA4e,EAAYL,EAAO,SAEfK,GAAa,MAEbM,EAAQX,EAAO,SACfM,EAAKN,EAAO,cACZO,EAAKP,EAAO,cACEA,EAAO,QAAU,EACfA,EAAO,QAAU,MAGhC,CAEDG,EAASE,CAAS,EAAI,GACtB,IAAIM,EAAQX,EAAO,SAEnB,IAAKnd,EAAI,EAAGA,EAAI8d,EAAO9d,IACnByd,EAAKN,EAAO,cACZO,EAAKP,EAAO,cACRM,GAAMC,IACFD,EAAG,MAAQL,IACXA,EAAWK,EAAG,OAEdC,EAAG,MAAQL,IACXA,EAAWK,EAAG,OAElBJ,EAASE,CAAS,EAAE,KAAK,CAACC,EAAIC,CAAE,CAAC,EAG5C,CAKL,IADAT,EAAQE,EAAO,SACVnd,EAAI,EAAGA,EAAIid,EAAOjd,IACnByd,EAAKN,EAAO,cACZI,EAAY,KAAKE,CAAE,EAGnBT,EAAO,IACPD,EAAQY,CAAG,EAAI,CACX,SAAUL,EACV,YAAaC,CAChB,EAER,CAErB,KACoB,OAAM,IAAI,MAAMV,EAAW,cAAgBC,EAAQ,QAAU,OAAS,OAAO,EAEjFpM,EAAQ,IAAIqN,GAAShB,EAASK,EAAUC,EAAUO,EAAkBd,CAAK,CAAC,CAC1F,CAAa,EAAE,MAAMnM,CAAM,CAC3B,CAAS,CACJ,EAGL,MAAMoN,EAAQ,CACV,YAAahB,EAASK,EAASC,EAAUO,EAAkBd,EAAO,CAC9D,KAAK,oBAAsBM,EAC3B,KAAK,QAAUL,EACf,KAAK,mBAAqBM,EAC1B,KAAK,iBAAmBO,EACxB,KAAK,MAAQd,CAChB,CAID,kBAAkBkB,EAAMxD,EAAIC,EAAI,CAC5B,MAAM5b,EAAQ,KAAK,QAAQmf,CAAK,EAChC,GAAI,CAACnf,EACD,MAAO,GAEX,MAAMof,EAAQpf,EAAM,YACdoe,EAAQgB,EAAO,OACfC,EAAS,KAAK,IAAI1D,GAAO,GAAIyC,EAAQ,CAAC,EACrCkB,EAAS,KAAK,IAAI1D,GAAO,GAAIwC,EAAQ,CAAC,EAC7C,MAAO,CACH,CACI,KAAKgB,EAAOC,CAAM,EAClB,KAAKD,EAAOE,CAAM,EAClB,IAAI,CACP,CACb,CACK,CAUD,eAAeH,EAAOxD,EAAKC,EAAK,CAE5B,IAAI2D,EAAM,KACN7L,EAAK6L,EAAI,QAAQJ,CAAK,EACtBK,EACAC,EACArB,EACAsB,EACAL,EACAC,EACAnF,EACAhZ,EAEJ,GAAKuS,EAGA,CAyBD,IAxBA8L,EAAkBN,GAAS,SAASvD,EAAKC,CAAG,EAC5C6D,EAAO,CAAE,EAITD,EAAgB,QAAQ,SAAUG,EAAK,CAEnC,GAAIjM,EAAG,SAASiM,CAAG,EAIf,QAHIC,EAAYlM,EAAG,SAASiM,CAAG,EAC3BV,EAAQW,EAAU,OAEblf,EAAI,EAAGA,EAAIue,EAAO,EAAEve,EAAG,CAC5B,IAAIke,EAAKgB,EAAUlf,CAAC,EAAE,CAAC,EACnBme,EAAKe,EAAUlf,CAAC,EAAE,CAAC,EACvB+e,EAAO,KAAK,CAAC,KAAMb,EAAI,KAAMC,EAAI,IAAKc,CAAG,CAAC,CAC7C,CAGrB,CAAa,EAGDvB,EAAQ1K,EAAG,YAAY,OACvBgM,EAAS,KACTL,EAAS,KAAK,IAAI1D,GAAO,GAAIyC,EAAQ,CAAC,EAAGkB,EAAS,KAAK,IAAI1D,GAAO,GAAIwC,EAAQ,CAAC,EAC1Ejd,EAAIke,EAAQle,GAAKme,EAAQ,EAAEne,EAC5BgZ,EAAKzG,EAAG,YAAYvS,CAAC,EACjBgZ,IAEI,CAACuF,GAAUvF,EAAG,WAAWuF,CAAM,KAC/BA,EAASvF,GAKrB,OAAO0F,GAAeJ,EAAQC,CAAM,CACvC,KAtCG,OAAO,EAuCd,CAOD,OAAO,SAASI,EAAKC,EAAK,CACnB,IAAQpf,EAAGqf,EAAO,CAAG,EAMxB,IALID,GAAO,GAAK,KACZA,EAAM,GAAK,IAEf,EAAEA,EACFC,EAAK,KAAK,CAAC,EACNrf,EAAI,GAAKmf,GAAO,IAAKnf,GAAK,GAAKof,GAAO,IAAK,EAAEpf,EAAGqf,EAAK,KAAKrf,CAAC,EAChE,IAAKA,EAAI,GAAKmf,GAAO,IAAKnf,GAAK,GAAKof,GAAO,IAAK,EAAEpf,EAAGqf,EAAK,KAAKrf,CAAC,EAChE,IAAKA,EAAI,IAAMmf,GAAO,IAAKnf,GAAK,IAAMof,GAAO,IAAK,EAAEpf,EAAGqf,EAAK,KAAKrf,CAAC,EAClE,IAAKA,EAAI,KAAOmf,GAAO,IAAKnf,GAAK,KAAOof,GAAO,IAAK,EAAEpf,EAAGqf,EAAK,KAAKrf,CAAC,EACpE,IAAKA,EAAI,MAAQmf,GAAO,IAAKnf,GAAK,MAAQof,GAAO,IAAK,EAAEpf,EAAGqf,EAAK,KAAKrf,CAAC,EACtE,OAAOqf,CACV,CAGL,CAEA,SAASH,GAAeJ,EAAQC,EAAQ,CAEpC,IAAIO,EAAe,CAAE,EACjBC,EAAY,KAEhB,OAAIT,EAAO,SAAW,EAAUA,GAEhCA,EAAO,KAAK,SAAUU,EAAIC,EAAI,CAC1B,IAAIC,EAAMF,EAAG,KAAK,MAAQC,EAAG,KAAK,MAClC,OAAIC,GAAO,EACAA,EAEAF,EAAG,KAAK,OAASC,EAAG,KAAK,MAE5C,CAAK,EAEDX,EAAO,QAAQ,SAAUa,EAAO,EAExB,CAACZ,GAAUY,EAAM,KAAK,cAAcZ,CAAM,KACtCQ,IAAc,MACdD,EAAa,KAAKK,CAAK,EACvBJ,EAAYI,GAEPA,EAAM,KAAK,MAAQJ,EAAU,KAAK,MAAS,KACxCI,EAAM,KAAK,cAAcJ,EAAU,IAAI,IACvCA,EAAU,KAAOI,EAAM,OAG3BL,EAAa,KAAKK,CAAK,EACvBJ,EAAYI,GAIhC,CAAK,EAEML,EACX,CA0DI,IAAIM,GAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAChGC,GAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAC/FC,GAAmB,GACnBC,GAAmB,GACnBC,GAAqB,GACrBC,GAAsB,IACtBC,GAAqB,EACrBC,GAAqB,EACrBC,GAAmB,EACnBC,GAAmB,EACnBC,GAA2B,IAC3BC,GAA+B,KAM/BC,GAAuC,IACvCC,GAAsB,KAG1B,MAAMC,GAAsB,MACtBC,GAA+B,IAC/BC,GAAyB,KACzBC,GAAyB,KAInC,MAAMC,EAAgB,CAClB,YAAY1N,EAAO,CACf,KAAK,QAASA,EAAO,IACrB,KAAK,QAAUA,EAAO,UAAY,KAAK,QAAU,OACjD,KAAK,SAAWA,EAAO,SAAW,KAAK,QACvC,KAAK,WAAW,GAChB,KAAK,SAAS,GACd,KAAK,gBAAgB,IAAI,kBAAkB,GAAQ,EACnD,KAAK,WAAW,IAAI,WAAW,KAAK,eAAe,EACnD,KAAK,QAAQ,EACb,KAAK,OAAOA,EACZ,KAAK,kBAAkB,EAC1B,CAED,MAAM,cAAce,EAAIC,EAAQC,EAAM,CAClC,GAAI,KAAK,OACDF,IAAQ,KAAK,MAAM,CAAC,GAAKC,GAAW,KAAK,MAAM,CAAC,GAAKC,GAAS,KAAK,MAAM,CAAC,EAC1E,OAAO,KAAK,SAIf,KAAK,OACN,MAAM,KAAK,aAEf,KAAK,QAAQ,EACb,MAAM0M,EAAQ,KAAK,WAAW5M,CAAG,EAC3B2K,EAAS,KAAK,MAAM,eAAeiC,EAAO3M,EAASC,CAAK,EAE9D,OAAKyK,EAGDA,EAAO,SAAW,EACX,IAIX,MAAM,QAAQ,IAAIA,EAAO,IAAI,MAAO/e,GAAI,CACpC,IAAIihB,EAAWjhB,EAAE,KAAK,MACtBkhB,EAAWlhB,EAAE,KAAK,MAAQ2gB,GAC1BnP,EAAQ,CAAC,MAAOyP,EAAU,KAAMC,EAAWD,EAAW,CAAC,EAEvD,MAAMvc,EAAY,MAAMsM,EAAO,gBAAgB,KAAK,QACpD,CACI,QAAS,KAAK,OAAO,QACrB,MAAOQ,EACP,gBAAiB,KAAK,OAAO,eAC7C,CAAa,EACD,IAAIwB,EAAK,IAAI,WAAW,IAAIJ,GAAOlO,CAAU,CAAC,EAC9C,KAAK,cAAcsO,EAAIhT,EAAE,KAAK,OAAOqU,EAASC,EAAO0M,CAAK,CAE7D,CAAA,CAAC,EACF,KAAK,MAAO,CAAC5M,EAAIC,EAAQC,CAAK,EAE9B,KAAK,oBAAmB,EAGjB,KAAK,UA3BD,EA6Bd,CAED,cAAc3I,EAAKwV,EAAM,CACrB,KAAK,QAAQxV,EACb,KAAK,SAASwV,CACjB,CAED,UAAUC,EAAIC,EAAK,CACf,KAAK,OAAOD,EACZ,KAAK,YAAYC,CACpB,CAED,uBAAuB,CACnB,MAAMhN,EAAQ,KAAK,MAAM,CAAC,EACpBiN,EAAK,KAAK,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EACrC,KAAK,SAAS,GACd,QAAS,EAAE,EAAE,EAAE,EAAE,IACb,KAAK,SAAS,KAAK,IAAI,YAAYA,CAAE,CAAC,EAE1C,QAAS,EAAE,EAAE,EAAE,KAAK,QAAQ,GAAG,EAAE,CAC7B,IAAIC,EAAM,KAAK,WAAW,CAAC,EAAElN,EAC7B,MAAMmN,EAAKD,EAAI,KAAK,WAAW,EAAE,CAAC,EAC9BA,EAAG,IACHA,EAAG,GAEP,IAAIH,EAAK,KAAK,SAAS,CAAC,EAMxB,GAJI,KAAK,WAAW,EAAE,CAAC,EAAE,KAAK,oBAC1BA,EAAI,KAAK,SAAS,CAAC,GAGnBI,EAAGD,EACH,QAAS9hB,EAAI8hB,EAAG9hB,EAAE+hB,EAAG/hB,IACjB2hB,EAAI3hB,CAAC,IACL,KAAK,SAAS,CAAC,EAAEA,CAAC,QAKtB,SAASA,EAAI+hB,EAAG/hB,EAAE8hB,EAAG9hB,IACjB2hB,EAAI3hB,CAAC,IACL,KAAK,SAAS,CAAC,EAAEA,CAAC,GAI7B,CACD,KAAK,SAAS,MAAM,KAAK,KAG5B,CAGD,qBAAqB,CACjB,MAAMsI,EAAK,KAAK,SAAS,OACnBsM,EAAQ,KAAK,MAAM,CAAC,EACpBiN,EAAK,KAAK,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EACrC,KAAK,SAAS,GACd,QAAS7gB,EAAE,EAAEA,EAAEsH,EAAItH,IACf,KAAK,SAAS,KAAK,IAAI,YAAY6gB,CAAE,CAAC,EAI1C,GAFA,KAAK,WAAW,EACP,YAAY,IAAM,EACvB,KAAK,WAAW,CAChB,MAAMG,EAAK,KAAK,WAChB,QAAShhB,EAAE,EAAEA,EAAE,KAAK,QAAQA,GAAG,EAAE,CAE7B,IAAIihB,EAAQ,KAAK,WAAWjhB,CAAC,EAAE4T,EAC3BkN,EAAKG,EAAKD,EACd,MAAMD,EAAKE,EAAKD,EACZF,EAAG,IACHA,EAAG,GAEP,MAAMI,EAAK,KAAK,WAAWlhB,EAAE,CAAC,EAC9B,GAAI,KAAK,QAAU,KAAK,OAAOkhB,CAAE,IAAI,GAAM,KAAK,OAAOA,CAAE,IAAK,KAAK,YAAYA,CAAE,EAC9E,SAEH,MAAMP,EAAM,KAAK,SAAS,KAAK,QAAQO,CAAE,CAAC,EAC1C,QAASliB,EAAI8hB,EAAG9hB,EAAE+hB,EAAG/hB,IACjB2hB,EAAI3hB,CAAC,GAGhB,CAEA,KAGG,SAASgB,EAAE,EAAEA,EAAE,KAAK,QAAQA,GAAG,EAAE,CAC7B,GAAI,KAAK,gBAAkB,KAAK,WAAWA,EAAE,CAAC,EAAE,KAAK,YACjD,SAEJ,IAAI8gB,EAAM,KAAK,WAAW9gB,CAAC,EAAE4T,EAC7B,MAAMmN,EAAKD,EAAI,KAAK,WAAW9gB,EAAE,CAAC,EAC9B8gB,EAAG,IACHA,EAAG,GAEP,MAAMI,EAAK,KAAK,WAAWlhB,EAAE,CAAC,EAC9B,GAAI,KAAK,QAAU,KAAK,OAAOkhB,CAAE,IAAI,GAAM,KAAK,OAAOA,CAAE,IAAK,KAAK,YAAYA,CAAE,EACjF,SAEA,MAAMP,EAAM,KAAK,SAAS,KAAK,QAAQO,CAAE,CAAC,EAC1C,GAAIH,EAAGD,EACH,QAAS9hB,EAAI8hB,EAAG9hB,EAAE+hB,EAAG/hB,IACjB2hB,EAAI3hB,CAAC,QAKT,SAASA,EAAI+hB,EAAG/hB,EAAE8hB,EAAG9hB,IACjB2hB,EAAI3hB,CAAC,GAIpB,CAGL,KAAK,SAAS,MAAM,KAAK,KAMxB,CAED,cAAc+R,EAAM,CAChB,MAAM+P,EAAK,KAAK,MAAM/P,EAAM,KAAK,EAC3BgQ,EAAK,KAAK,MAAMhQ,EAAM,GAAG,EACzBlP,EAAI,KAAK,WACTsf,EAAO,IAAI,IACjB,QAASnhB,EAAE,EAAEA,EAAE,KAAK,WAAW,OAAOA,GAAG,EACrC,GAAI,EAAA6B,EAAE7B,CAAC,EAAE8gB,GAGT,IAAGjf,EAAE7B,CAAC,EAAE+gB,EACJ,MAEJI,EAAK,IAAItf,EAAE7B,EAAE,CAAC,CAAC,EAGnB,OAAOmhB,CAEV,CAMD,cAAc5O,EAAGzN,EAAO0V,EAAIC,EAAI8F,EAAM,CAkBlC,QAhBIa,EACAC,EACAC,EACAC,EACArY,EACAsY,EACAjf,EACAkf,EACAliB,EACAmiB,EACAC,EACAC,EACA3iB,EACA4iB,IAGS,CAaT,GAXAT,EAAYU,EAAQvP,EAAIzN,CAAM,EAC9Buc,EAAWvc,EAASsc,EAAY,EAE5BC,EAAW9O,EAAG,SAKlBgP,EAAQO,EAAQvP,EAAIzN,EAAS,CAAC,EAC9BoE,EAAM4Y,EAAQvP,EAAIzN,EAAS,CAAC,EAEzByc,EAAQ,GACP,OAEC,GAAIA,EAAQhB,GAASrX,EAAMuR,EAC5B,OAEC,GAAI8G,EAAQhB,EACb,SAIJiB,EAAMM,EAAQvP,EAAIzN,EAAS,EAAE,EAE7BvC,EAAKif,EAAM,IAEXC,EAAUK,EAAQvP,EAAIzN,EAAS,EAAE,EACjC,MAAMgJ,GAAQ2T,EAAU,aAAe,GACvCC,EAAKD,EAAU,MAGf,MAAMM,EAAS,EAAEjU,EAAOwR,IAExBqC,EAAOG,EAAQvP,EAAIzN,EAAS,EAAE,EAE9B,MAAOkd,EAAiB,KAAK,IAAIF,EAAQvP,EAAIzN,EAAS,EAAE,CAAC,EAOzD,IAJA7F,EAAI6F,EAAS,GAAKvC,EAElBqf,EAAc,EAETriB,EAAI,EAAGA,EAAImiB,EAAI,EAAEniB,EAAG,CACrB,IAAI0iB,EAAQH,EAAQvP,EAAItT,CAAC,EACrBijB,EAASD,GAAS,EAClBE,EAAQ9C,GAAc4C,EAAQ,EAAG,GACjCE,GAAS,KAAOA,GAAS,MAAQA,GAAS,KAAOA,GAAS,KAAOA,GAAS,KAAOA,GAAS,OAC1FP,GAAeM,GAEnBjjB,GAAK,CAGR,CAED,GAAIiK,EAAM0Y,EAAcpH,EAAK,CACzB1V,EAASuc,EACT,QAEH,CACIU,IACD7Y,EAAMA,EAAI0Y,EACVA,EAAY,CAACA,GAEjB,KAAK,WAAW,KAAK,SAAS,EAAE1Y,EAChC,KAAK,WAAW,KAAK,SAAS,EAAI0Y,EAMlCC,EAAYF,EAAO,GAAM,EAEzB1iB,GAAK4iB,EAEL5iB,GAAK0iB,EAILL,EAAOc,GAAW,IAAI,WAAW7P,EAAG,OAAO,MAAMtT,EAAGoiB,CAAQ,CAAC,CAAC,EAC1D,KAAK,SAASC,EAAK,EAAE,EAGzB,KAAK,WAAW,KAAK,SAAS,EAAE,KAAK,SAASA,EAAK,EAAE,EACrD,KAAK,WAAW,KAAK,SAAS,EAAI,KAAK,IAAIU,CAAc,EAEzD/iB,GAAKoiB,EAGLvc,EAASuc,CAEZ,CAGJ,CAID,MAAM,YAAa,CAEf,IAAIpO,EAAO,KAIP3L,GAFU,MAAM+a,GAAS,IAAI,GAEjB,oBAAsBnC,GAEtC,MAAMoC,EAAmB,MAAM/R,EAAO,gBAAgB0C,EAAK,QAC/C,CACI,QAASA,EAAK,OAAO,QAErB,MAAO,CAAC,MAAO,EAAG,KAAM3L,CAAG,EAE3B,gBAAiB2L,EAAK,OAAO,eACrD,CAAS,EAEE,IAACP,EAAM,IAAIP,GAAOmQ,EAAkBhb,CAAG,EACtCib,EAAQ,IAAI,WAAW7P,CAAG,EAClBoP,EAAQS,EAAO,CAAC,EAK5B,QAJIC,EAAeV,EAAQS,EAAO,CAAC,EAC/BE,EAAY,GAGPziB,EAAI,EAAGA,EAAIwiB,EAAc,EAAExiB,EAChCyiB,GAAa,OAAO,aAAaF,EAAMviB,EAAI,CAAC,CAAC,EAGjD,IAAI0iB,EAAOZ,EAAQS,EAAOC,EAAe,CAAC,EACtCvjB,EAAIujB,EAAe,GAEvBvP,EAAK,WAAa,GAClBA,EAAK,WAAa,GAClB,QAASjT,EAAI,EAAGA,EAAI0iB,EAAM,EAAE1iB,EAAG,CAG3B,QAFI2iB,EAAQb,EAAQS,EAAOtjB,CAAC,EACxB2jB,EAAO,GACF3iB,EAAI,EAAGA,EAAI0iB,EAAQ,EAAG,EAAE1iB,EAC7B2iB,GAAQ,OAAO,aAAaL,EAAMtjB,EAAI,EAAIgB,CAAC,CAAC,EAErC6hB,EAAQS,EAAOtjB,EAAI0jB,EAAQ,CAAC,EAOvC1P,EAAK,WAAW2P,CAAI,EAAI5iB,EACxBiT,EAAK,WAAW,KAAK2P,CAAI,EAEzB3jB,EAAIA,EAAI,EAAI0jB,CACf,CAGJ,CACL,CAOA,MAAME,EAAS,CACV,YAAYjQ,EAAOnI,EAAQ,CAExB,KAAK,OAASmI,EACd,KAAK,OAAOnI,EACZ,KAAK,SAASqY,GACVrY,EAAO,WACP,KAAK,SAAU,cAGnB,KAAK,OAASmI,EAAO,QAAU,IAAImQ,GAEnC,KAAK,QAAUnQ,EAAO,IAEtB,KAAK,QAAUA,EAAO,UAAY,KAAK,QAAU,OACjD,KAAK,SAAWA,EAAO,SAAW,KAAK,QAGvC,KAAK,mBAAqBA,EAAO,qBAAuB,OAAYuN,GAA+BvN,EAAO,mBAC1G,KAAK,cAAgBA,EAAO,gBAAkB,OAAYwN,GAAyBxN,EAAO,cACvF,KAAK,cAAgByN,KACpB,IAAI,IAAI,gEAAgE,EACxE,KAAK,cAAgBA,IAGrBzN,EAAO,YACP,KAAK,eAAiB,GAGtB,KAAK,eAAiBA,EAAO,iBAAmB,OAAY,GAAOA,EAAO,cAGjF,CAED,eAAee,EAAKC,EAASC,EAAO,CAEhC,IAAIZ,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAG1CqS,GAAY/P,CAAI,EAAE,KAAK,SAAUgQ,EAAY,CAEzC,IAAI1C,EAAQ0C,EAAWtP,CAAG,EAEtBuP,EAAqB,IAAIjQ,EAAK,SAASU,EAAKC,EAASC,EAAOZ,EAAK,mBAAoBA,EAAK,cAAeA,EAAK,eAAeA,EAAK,MAAM,EAExIsN,IAAU,OACV7P,EAAQwS,CAAkB,EAG1Bb,GAASpP,CAAI,EAAE,KAAK,SAAUkQ,EAAU,CAEpC,IAAI7E,EAAS6E,EAAS,eAAe5C,EAAO3M,EAASC,CAAK,EACtDuP,EAAW,CAAA,EAGf,GAAI,CAAC9E,EAAQ,CACT5N,EAAQ,IAAI,EACZC,EAAO,yBAAyB,EAChC,MACH,CACD,GAAI2N,EAAO,SAAW,EAAG,CACrB5N,EAAQwS,CAAkB,EAC1B,MACH,CAED5E,EAAO,QAAQ,SAAU/e,EAAG,CAExB6jB,EAAS,KAAK,IAAI,QAAQ,SAAU1S,EAASC,EAAQ,CAEjD,IAAI6P,EAAWjhB,EAAE,KAAK,MAClBkhB,EAAWlhB,EAAE,KAAK,MAAQ2gB,GAC1BnP,EAAQ,CAAC,MAAOyP,EAAU,KAAMC,EAAWD,EAAW,CAAC,EAE3DjQ,EAAO,gBAAgB0C,EAAK,QACxB,CACI,QAASA,EAAK,OAAO,QACrB,MAAOlC,EACP,gBAAiBkC,EAAK,OAAO,eACrE,CAAqC,EAAE,KAAK,SAAUhP,EAAY,CAE9B,IAAIsO,EAAK,IAAI,WAAW,IAAIJ,GAAOlO,CAAU,CAAC,EAC9Cof,EAAiB9Q,EAAIhT,EAAE,KAAK,OAAQ2jB,EAAoBtP,EAASC,EAAO0M,EAAOtN,EAAK,MAAM,EAE1FvC,EAAQwS,CAAkB,CAE9D,CAAiC,EAAE,MAAM,SAAUI,EAAK,CACpB3S,EAAO2S,CAAG,CAC9C,CAAiC,CAEjC,CAA6B,CAAC,CAC9B,CAAyB,EAGD,QAAQ,IAAIF,CAAQ,EAAE,KAAK,SAAUG,EAAS,CAC1CL,EAAmB,OAAM,EACzBxS,EAAQwS,CAAkB,CACtD,CAAyB,EAAE,MAAM,SAAUI,EAAK,CACpB3S,EAAO2S,CAAG,CACtC,CAAyB,CACzB,CAAqB,EAAE,MAAM3S,CAAM,CAEnC,CAAa,EAAE,MAAMA,CAAM,CAC3B,CAAS,EAGD,SAAS0S,EAAiB9Q,EAAIzN,EAAQoe,EAAoB1I,EAAKC,EAAK8F,EAAOiD,EAAQ,CA4B/E,QA1BIpC,EACAC,EACAoC,EACAra,EACAmY,EACArY,EACAsY,EAEAkC,EACAnhB,EACAkf,EACA3T,EACA4T,EACAC,EACAgC,EACAC,EACAC,EACA5jB,EACAhB,EACA2iB,GACAkC,GACAvkB,GACAwkB,EACAC,EACAnC,KAES,CAcT,GAZAT,EAAYU,EAAQvP,EAAIzN,CAAM,EAC9Buc,EAAWvc,EAASsc,EAAY,EAE5BC,EAAW9O,EAAG,SAIlBkR,EAAY,IAAIQ,GAEhB1C,EAAQO,EAAQvP,EAAIzN,EAAS,CAAC,EAC9BoE,EAAM4Y,EAAQvP,EAAIzN,EAAS,CAAC,EAEzByc,EAAQ,GACP,OAEC,GAAIA,EAAQhB,GAASrX,EAAMuR,EAC5B,OAEC,GAAI8G,EAAQhB,EACb,SAsBJ,IAnBAiB,EAAMM,EAAQvP,EAAIzN,EAAS,EAAE,EAE7B4e,GAAMlC,EAAM,QAAW,EACvBjf,EAAKif,EAAM,IAEXC,EAAUK,EAAQvP,EAAIzN,EAAS,EAAE,EACjCgJ,GAAQ2T,EAAU,aAAe,GACjCC,EAAKD,EAAU,MAEfgC,EAAU,MAAQ3V,EAClB2V,EAAU,OAAS,EAAE3V,EAAOwR,IAE5BqC,EAAOG,EAAQvP,EAAIzN,EAAS,EAAE,EAE9B6e,EAAY7B,EAAQvP,EAAIzN,EAAS,EAAE,EACnC8e,EAAU9B,EAAQvP,EAAIzN,EAAS,EAAE,EACjC2e,EAAU,eAAiB3B,EAAQvP,EAAIzN,EAAS,EAAE,EAElD+e,EAAW,GACN5jB,EAAI,EAAGA,EAAIsC,EAAK,EAAG,EAAEtC,EACtB4jB,GAAY,OAAO,aAAatR,EAAGzN,EAAS,GAAK7E,CAAC,CAAC,EAWvD,IAPAhB,EAAI6F,EAAS,GAAKvC,EAElBqf,GAAc,EACdkC,GAAQ,GAGRC,EAAa,CAAA,EACRxkB,GAAI,EAAGA,GAAImiB,EAAI,EAAEniB,GAAG,CACrB,IAAI0iB,GAAQH,EAAQvP,EAAItT,CAAC,EACrBijB,EAASD,IAAS,EAClBE,EAAQ9C,GAAc4C,GAAQ,EAAG,GACjCE,GAAS,KAAOA,GAAS,MAAQA,GAAS,KAAOA,GAAS,KAAOA,GAAS,KAAOA,GAAS,OAC1FP,IAAeM,GACnB4B,GAAQA,GAAQ5B,EAAQC,EACxBljB,GAAK,EAEL8kB,EAAW,KAAK,CAAC,IAAK7B,EAAO,IAAKC,CAAK,CAAC,CAC3C,CAID,GAHAsB,EAAU,MAAQK,GAClBL,EAAU,YAAc7B,GAEpB,EAAA6B,EAAU,MAAQA,EAAU,YAAcjJ,GAK9C,KAFAwJ,EAAM,GACNnC,GAAYF,EAAO,GAAM,EACpB1hB,EAAI,EAAGA,EAAI4hB,GAAU,EAAE5hB,EAAG,CAC3B,IAAIikB,EAAK3R,EAAGtT,EAAIgB,CAAC,EACjB+jB,GAAO5E,IAAgB8E,EAAK,MAAS,CAAC,EACtCF,GAAO5E,GAAgB8E,EAAK,GAC/B,CAOD,GANAF,EAAMA,EAAI,UAAU,EAAGrC,CAAI,EAE3B1iB,GAAK4iB,GACL4B,EAAU,IAAMO,EAGZ,EAAArC,IAAS,GAAK,OAAO,aAAapP,EAAGtT,EAAIgB,CAAC,EAAI,EAAE,IAAM,KAKtD,IADAwjB,EAAU,KAAO,GACZxjB,EAAI,EAAGA,EAAI0hB,EAAM,EAAE1hB,EACpBwjB,EAAU,KAAK,KAAKlR,EAAGtT,EAAIgB,CAAC,CAAC,EAGrChB,GAAK0iB,EAGL8B,EAAU,MAAQva,EAClBua,EAAU,GAAKC,EACfD,EAAU,SAAWI,EACrBJ,EAAU,IAAMxQ,EAAK,WAAWsO,CAAK,EAEjCoC,GAAa,IACbF,EAAU,KAAO,CACb,IAAKxQ,EAAK,WAAW0Q,CAAS,EAC9B,SAAUC,EACV,OAAQ,EAAE9V,EAAOyR,GACzC,GAIgBkE,EAAU,MAAQ,IAAI,WAAWlR,EAAG,OAAO,MAAMtT,EAAGoiB,CAAQ,CAAC,EAC7DpiB,GAAKoiB,GAED,CAAC7G,GAAOiJ,EAAU,OAAShJ,GAC3BgJ,EAAU,MAAQA,EAAU,aAAejJ,GAC3CgJ,EAAO,KAAKC,CAAS,KACjBlD,IAAU,QAAagB,GAAShB,KAChCnX,EAAS+a,EAAWV,EAAWM,CAAU,EACzCN,EAAU,OAASra,EAAO,OAC1Bqa,EAAU,WAAara,EAAO,WAC9B8Z,EAAmB,KAAKO,CAAS,GAGzC3e,EAASuc,EACZ,CAGJ,CAcD,SAAS8C,EAAWC,EAAQL,EAAY,CAapC,QAXI3a,EAAS,CAAA,EACTib,EACAC,EAAY,EACZpb,EAAMkb,EAAO,MACb9c,EAAMyc,EAAW,OACjBQ,EACAC,EACAC,EAIKzkB,EAAI,EAAGA,EAAIsH,EAAKtH,IAAK,CAE1B,IAAIT,EAAIwkB,EAAW/jB,CAAC,EAEpB,OAAQT,EAAE,IAAG,CACT,IAAK,IACD,MACJ,IAAK,IACD,MACJ,IAAK,IACD+kB,GAAa/kB,EAAE,IACfklB,EAAU,IACV,MACJ,IAAK,IACDvb,GAAO3J,EAAE,IACTklB,EAAU,IACV,MACJ,IAAK,IACDvb,GAAO3J,EAAE,IACTklB,EAAU,IACV,MACJ,IAAK,IACDF,EAAWH,EAAO,MAAQ,IAAM,IAAMA,EAAO,IAAI,OAAOE,EAAW/kB,EAAE,GAAG,EACxEilB,EAAaJ,EAAO,KAAOA,EAAO,KAAK,MAAME,EAAW/kB,EAAE,GAAG,EAAI,OAC7D8kB,IAAe,SAAWA,EAAa,IAC3CA,EAAW,KAAK,CAAC,MAAOnb,EAAK,IAAK3J,EAAE,IAAK,IAAKglB,EAAU,KAAMC,CAAU,CAAC,EACzEF,GAAa/kB,EAAE,IACf,MACJ,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IAEDglB,EAAWH,EAAO,MAAQ,IAAM,IAAMA,EAAO,IAAI,OAAOE,EAAW/kB,EAAE,GAAG,EACxEilB,EAAaJ,EAAO,KAAOA,EAAO,KAAK,MAAME,EAAW/kB,EAAE,GAAG,EAAI,OACjE6J,EAAO,KAAK,CAAC,MAAOF,EAAK,IAAK3J,EAAE,IAAK,IAAKglB,EAAU,KAAMC,EAAY,QAASC,CAAO,CAAC,EACvFH,GAAa/kB,EAAE,IACf2J,GAAO3J,EAAE,IAET,MAEJ,QACI,QAAQ,IAAI,mCAAqCA,EAAE,IAAMA,EAAE,GAAG,CACrE,CACJ,CAED,MAAO,CAAC,OAAQ6J,EAAQ,WAAYib,CAAU,CAEjD,CACJ,CAED,YAAa,CAET,IAAIpR,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAE1C0R,GAASpP,CAAI,EAAE,KAAK,SAAUpU,EAAO,CAEjC,IAAIyI,EAAMzI,EAAM,oBAAsBqhB,GAEtC3P,EAAO,gBAAgB0C,EAAK,QACxB,CACI,QAASA,EAAK,OAAO,QAErB,MAAO,CAAC,MAAO,EAAG,KAAM3L,CAAG,EAE3B,gBAAiB2L,EAAK,OAAO,eACrD,CAAqB,EAAE,KAAK,SAAUqP,EAAkB,CAEjC,IAAC5P,EAAM,IAAIP,GAAOmQ,EAAkBhb,CAAG,EACtCib,EAAQ,IAAI,WAAW7P,CAAG,EAClBoP,EAAQS,EAAO,CAAC,EAK5B,QAJIC,EAAeV,EAAQS,EAAO,CAAC,EAC/BE,EAAY,GAGPziB,EAAI,EAAGA,EAAIwiB,EAAc,EAAExiB,EAChCyiB,GAAa,OAAO,aAAaF,EAAMviB,EAAI,CAAC,CAAC,EAGjD,IAAI0iB,EAAOZ,EAAQS,EAAOC,EAAe,CAAC,EACtCvjB,EAAIujB,EAAe,GAEvBvP,EAAK,WAAa,GAClBA,EAAK,WAAa,GAClB,QAASjT,EAAI,EAAGA,EAAI0iB,EAAM,EAAE1iB,EAAG,CAG3B,QAFI2iB,EAAQb,EAAQS,EAAOtjB,CAAC,EACxB2jB,EAAO,GACF3iB,EAAI,EAAGA,EAAI0iB,EAAQ,EAAG,EAAE1iB,EAC7B2iB,GAAQ,OAAO,aAAaL,EAAMtjB,EAAI,EAAIgB,CAAC,CAAC,EAErC6hB,EAAQS,EAAOtjB,EAAI0jB,EAAQ,CAAC,EAOvC1P,EAAK,WAAW2P,CAAI,EAAI5iB,EACxBiT,EAAK,WAAW,KAAK2P,CAAI,EAEzB3jB,EAAIA,EAAI,EAAI0jB,CACf,CAEDjS,GAEpB,CAAiB,EAAE,MAAMC,CAAM,CAC/B,CAAa,EAAE,MAAMA,CAAM,CAC3B,CAAS,CACJ,CAEL,CACI,SAAS0R,GAASjE,EAAK,CAEnB,OAAO,IAAI,QAAQ,SAAU1N,EAASC,EAAQ,CAEtCyN,EAAI,MACJ1N,EAAQ0N,EAAI,KAAK,EAGjBxB,GAAawB,EAAI,QAASA,EAAI,MAAM,EAAE,KAAK,SAAUvf,EAAO,CACxDuf,EAAI,MAAQvf,EAEZ6R,EAAQ0N,EAAI,KAAK,CACrC,CAAiB,EAAE,MAAMzN,CAAM,CAE/B,CAAS,CACJ,CAGD,SAASqS,GAAY5E,EAAK,CAEtB,OAAO,IAAI,QAAQ,SAAU1N,EAASC,EAAQ,CAEtCyN,EAAI,WACJ1N,EAAQ0N,EAAI,UAAU,EAGtBA,EAAI,aAAa,KAAK,UAAY,CAC9B1N,EAAQ0N,EAAI,UAAU,CAC1C,CAAiB,EAAE,MAAMzN,CAAM,CAE/B,CAAS,CACJ,CAED,SAASmR,EAAQvP,EAAIzN,EAAQ,CACzB,OAAQyN,EAAGzN,EAAS,CAAC,GAAK,GAAOyN,EAAGzN,EAAS,CAAC,GAAK,GAAOyN,EAAGzN,EAAS,CAAC,GAAK,EAAMyN,EAAGzN,CAAM,CAC9F,CAED,SAAS4f,GAAUnS,EAAIzN,EAAQ,CAC3B,OAAQyN,EAAGzN,EAAS,CAAC,GAAK,EAAMyN,EAAGzN,CAAM,CAC5C,CAKL,MAAM6f,EAAS,CACX,YAAY/R,EAAOnI,EAAQ,CAEvB,KAAK,OAASmI,EACd,KAAK,mBAAqB,OAC1B,KAAK,QAAUA,EAAO,SAAW,IAC7BA,EAAO,UACP,KAAK,gBAAgB,IAAIgS,GAAchS,EAAO,OAAO,GAEzD,KAAK,OAAOnI,EAEZ,KAAK,gBAAgB,GAGjBmI,EAAO,aAAe,QACtB,KAAK,UAAY,IAAI,IAAI,qBAAqBA,CAAM,EAGpD,KAAK,UAAY,IAAIiQ,GAAUjQ,EAAOnI,CAAM,EAGjD,KAAK,YAAc,EACrB,CAED,eAAeoa,EAAM,CACjB,IAAI5R,EAAO,KAEX,GAAI,KAAK,cAAgB4R,IACrB,KAAK,YAAcA,EAEf,KAAK,oBAAoB,CACzB,IAAI3B,EAAqB,KAAK,mBAC1B4B,EAEAD,EACAC,EAAaC,GAAe7B,EAAmB,mBAAmB,EAGlE4B,EAAaE,GAAiB9B,EAAmB,mBAAmB,EAExEA,EAAmB,oBAAsB+B,GAAkBH,EAAY5B,EAAmB,MAAOA,EAAmB,IAAKjQ,EAAK,OAAO,CAExI,CAER,CAED,cAAcU,EAAKC,EAASC,EAAO,CAE/B,IAAIZ,EAAO,KACX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAEtCsC,EAAK,oBAAsBA,EAAK,mBAAmB,SAASU,EAAKC,EAASC,CAAK,EAC/EnD,EAAQuC,EAAK,kBAAkB,EAG/BA,EAAK,UAAU,eAAeU,EAAKC,EAASC,CAAK,EAAE,KAAK,SAAUqP,EAAoB,CAElF,IAAIgC,EAAUjS,EAAK,OAAO,SAAW,IACjC6R,EAAa5B,EAAmB,WAE/BjQ,EAAK,cACN6R,EAAaE,GAAiB,CAAC,CAAC,WAAYF,CAAU,CAAC,CAAC,GAExD7R,EAAK,OAAO,qBACXiQ,EAAmB,oBAAsB+B,GAAkBH,EAAY5B,EAAmB,MAAOA,EAAmB,IAAKgC,CAAO,GAKrIhC,EAAmB,WAAa,OAChCjQ,EAAK,mBAAqBiQ,EACtBjQ,EAAK,gBACJA,EAAK,gBAAgB,YAAYiQ,EAAmB,IAAKA,EAAmB,MAAOA,EAAmB,GAAG,EAAE,KAC5G,SAAUiC,EAAU,CAGZA,IAEAjC,EAAmB,YAAY,OAASiC,EACxCjC,EAAmB,SAAWiC,EAG9BzU,EAAQwS,CAAkB,EAE1D,CAAyB,EAAE,MAAMvS,CAAM,EAIfD,EAAQwS,CAAkB,CAIlD,CAAiB,EAAE,MAAMvS,CAAM,CAE/B,CAAS,CACJ,CACL,CAEI,SAASoU,GAAeK,EAAM,CAE1B,IAAIC,EAAY,CAAE,EACd/iB,EAAS,CAAA,EAEb,OAAA8iB,EAAK,QAAQ,SAAUE,EAAK,CAExBA,EAAI,WAAW,QAAQ,SAAU7B,EAAW,CAExC,IAAI8B,EAEAC,GAAY/B,CAAS,GAErB8B,EAAkBF,EAAU5B,EAAU,QAAQ,EAC1C8B,GACAA,EAAgB,mBAAmB9B,CAAS,EAC5C4B,EAAU5B,EAAU,QAAQ,EAAI,SAGhC8B,EAAkB,IAAI,IAAI,gBAAgB9B,CAAS,EACnD4B,EAAU5B,EAAU,QAAQ,EAAI8B,EAChCjjB,EAAO,KAAKijB,CAAe,IAK/BjjB,EAAO,KAAKmhB,CAAS,CAEzC,CAAa,CACb,CAAS,EACMnhB,CACV,CAED,SAAS0iB,GAAiBI,EAAM,CAC5B,IAAI9iB,EAAS,CAAA,EACb,OAAA8iB,EAAK,QAAQ,SAAUE,EAAK,CACxBA,EAAI,WAAW,QAAQ,SAAU7B,EAAW,CACpCA,aAAqBgC,IACjBhC,EAAU,gBAAgBnhB,EAAO,KAAKmhB,EAAU,cAAc,EAC9DA,EAAU,iBAAiBnhB,EAAO,KAAKmhB,EAAU,eAAe,GAIpEnhB,EAAO,KAAKmhB,CAAS,CAEzC,CAAa,CACb,CAAS,EACMnhB,CACV,CAED,SAASkjB,GAAY/B,EAAW,CAC5B,OAAOA,EAAU,SAAU,GACvBA,EAAU,aAAc,GACxBA,EAAU,MAAQA,EAAU,KAAK,MAChCA,EAAU,cAAa,GAAMA,EAAU,eAAc,IAAO,EAAEA,EAAU,YAAa,GAAIA,EAAU,gBAAiB,EAC5H,CAGD,SAASwB,GAAkBH,EAAY3kB,EAAOye,EAAKsG,EAAS,CAExD,GAAKJ,EAML,IAJAA,EAAW,KAAK,SAAUjjB,EAAGjD,EAAG,CAC5B,OAAOiD,EAAE,MAAQjD,EAAE,KAC/B,CAAS,EAEGkmB,EAAW,SAAW,EAEtB,MAAO,GAIP,IAAIY,EAAa,CAAE,EACfC,EAAiB,EACjBC,EAAqB,EACrBC,EAAY1lB,EACZ2lB,EACAjnB,EACAknB,EACAtC,EACAuC,EAAiB,EAAI,EACrBC,EAAsB,CAAE,EACxBC,EAAc,KAAK,IAAI/lB,EAAO2kB,EAAW,CAAC,EAAE,KAAK,EAYrD,IAVAA,EAAW,QAAQ,SAAUrB,EAAW,CAEpC,IAAI0C,EAAgB,KAAK,IAAI,EAAG1C,EAAU,MAAQyC,CAAW,EACzDR,EAAWS,CAAa,IAAM,SAC9BT,EAAWS,CAAa,EAAI,IAEhCT,EAAWS,CAAa,EAAE,KAAK1C,CAAS,CACxD,CAAa,EAGMkC,EAAiBb,EAAW,QAAUmB,EAAoB,OAASf,GAAS,CAI/E,IAFAY,EAAe,IAAIM,GAEZP,GAAajH,GAAK,CAIrB,IAFAmH,EAAS,OAEF,CAACA,GAAUF,GAAajH,GAE3B/f,EAAQgnB,EAAYK,EAChBR,EAAW7mB,CAAK,IAAM,OACtB,EAAEgnB,EAEFE,EAASL,EAAW7mB,CAAK,EAKjC,GAAI,CAACknB,EACD,MAEJtC,EAAYsC,EAAO,MACTA,EAAO,SAAb,IACAL,EAAW7mB,CAAK,EAAI,QAGxBinB,EAAa,WAAW,KAAKrC,CAAS,EACtCoC,EAAYpC,EAAU,MAAQA,EAAU,YAAcuC,EACtD,EAAEL,CAEL,CAQD,GANIG,EAAa,WAAW,OAAS,GACjCG,EAAoB,KAAKH,CAAY,EAGzCD,EAAYK,EAERP,IAAmBC,EAAoB,MAE3CA,EAAqBD,CAExB,CAED,OAAOM,EAEd,CAIL,MAAMhC,EAAY,CACd,aAAa,CACT,KAAK,OAAS,EACjB,CAED,UAAW,CACP,OAAQ,KAAK,MAAQvE,KAAuB,CAC/C,CAED,UAAY,CACR,OAAQ,KAAK,MAAQE,KAAqB,CAC7C,CAED,cAAgB,CACZ,OAAQ,KAAK,MAAQC,KAAqB,CAC7C,CAED,eAAgB,CACZ,OAAQ,KAAK,MAAQL,KAAuB,CAC/C,CAED,gBAAiB,CACb,OAAQ,KAAK,MAAQC,KAAwB,CAChD,CAED,aAAc,CACV,OAAQ,KAAK,MAAQK,KAA6B,CACrD,CAED,iBAAkB,CACd,OAAQ,KAAK,MAAQC,KAAiC,CACzD,CAED,2BAA4B,CACxB,OAAQ,KAAK,MAAQC,KAAyC,CACjE,CAED,aAAc,CACV,OAAQ,KAAK,MAAQC,KAAwB,CAChD,CAED,cAAe,CACX,OAAQ,KAAK,MAAQN,KAAuB,CAC/C,CAED,kBAAmB,CACf,OAAQ,KAAK,MAAQL,KAAqB,CAC7C,CAED,sBAAuB,CACnB,OAAQ,KAAK,MAAQC,KAAqB,CAC7C,CAED,MAAO,CAEH,SAAS6C,EAAW7P,EAAI,CAMpB,QAJItT,EAAI,EACJqI,EAAMiL,EAAG,OACT+O,EAAO,CAAA,EAEJriB,EAAIqI,GAAK,CACZ,IAAI+e,EAAM,OAAO,aAAa9T,EAAGtT,CAAC,CAAC,EAAI,OAAO,aAAasT,EAAGtT,EAAI,CAAC,CAAC,EAChE8O,EAAO,OAAO,aAAawE,EAAGtT,EAAI,CAAC,CAAC,EACpCwH,EAEJ,GAAIsH,GAAQ,IACRtH,EAAQ,OAAO,aAAa8L,EAAGtT,EAAI,CAAC,CAAC,EACrCA,GAAK,UACE8O,IAAS,KAAOA,IAAS,IAChCtH,EAAQqb,EAAQvP,EAAItT,EAAI,CAAC,EACzBA,GAAK,UACE8O,IAAS,KAAOA,IAAS,IAChCtH,EAAQ8L,EAAGtT,EAAI,CAAC,EAChBA,GAAK,UACE8O,IAAS,KAAOA,IAAS,IAChCtH,EAAQie,GAAUnS,EAAItT,EAAI,CAAC,EAC3BA,GAAK,UACE8O,IAAS,IAEhBtH,EAAQ6f,GAAU/T,EAAItT,EAAI,CAAC,EAC3BA,GAAK,UACE8O,IAAS,IAGhB,IAFA9O,GAAK,EACLwH,EAAQ,KACE,CACN,IAAI8f,EAAKhU,EAAGtT,GAAG,EACf,GAAIsnB,IAAO,EACP,MAEA9f,GAAS,OAAO,aAAa8f,CAAE,CAEtC,KACE,CAEH9f,EAAQ,uBAAyBsH,EACjCuT,EAAK+E,CAAG,EAAI5f,EACZ,KACH,CACD6a,EAAK+E,CAAG,EAAI5f,CACf,CACD,OAAO6a,CACV,CAED,OAAK,KAAK,UACF,KAAK,OACL,KAAK,QAAUc,EAAW,KAAK,KAAK,EACpC,KAAK,MAAQ,QAEb,KAAK,QAAU,IAGhB,KAAK,OAEf,CAED,UAAUoE,EAAiB,CAIvB,IAAIC,EAAa,CAAA,EAAIC,EAASC,EAE9B,GAAG,KAAK,WACJ,QAAQ3mB,EAAI,EAAGA,EAAI,KAAK,WAAW,OAAQA,GAAK,EAAG,CAC/C,IAAI4mB,EAAY,KAAK,WAAW5mB,CAAC,EAAE,MACnC,GAAGwmB,GAAmBI,GAAaJ,GAAmBI,EAAY,EAC9D,OAAAH,EAAW,KAAK,CAAC,KAAM,YAAa,MAAO,KAAK,WAAWzmB,CAAC,EAAE,GAAK,CAAA,EACnEymB,EAAW,KAAK,CAAC,KAAM,WAAY,MAAOG,CAAS,CAAE,EAC9CH,CAEd,CAGLA,EAAW,KAAK,CAAE,KAAM,YAAa,MAAO,KAAK,QAAQ,CAAE,EAI3DA,EAAW,KAAK,MAAM,EAGtBA,EAAW,KAAK,CAAE,KAAM,kBAAmB,MAAO,IAAI,gBAAgB,EAAI,KAAK,KAAK,EAAG,UAAW,EAAM,CAAA,EAExGA,EAAW,KAAK,CAAE,KAAM,cAAe,MAAiB,KAAK,SAAd,GAAuB,MAAQ,MAAQ,UAAW,EAAM,CAAA,EACvGA,EAAW,KAAK,CAAE,KAAM,QAAS,MAAO,KAAK,KAAK,CAAE,EACpDA,EAAW,KAAK,CAAE,KAAM,SAAU,MAAOI,EAAM,KAAK,UAAU,CAAC,CAAE,EACjEJ,EAAW,KAAK,CAAE,KAAM,kBAAmB,MAAO,KAAK,EAAE,CAAE,EAC3DA,EAAW,KAAK,CAAE,KAAM,YAAa,MAAOI,EAAM,KAAK,aAAa,CAAC,CAAE,EACvEJ,EAAW,KAAK,CAAE,KAAM,gBAAiB,MAAOI,EAAM,KAAK,iBAAiB,CAAC,CAAE,EAC/EJ,EAAW,KAAK,CAAE,KAAM,YAAa,MAAOI,EAAM,KAAK,aAAa,CAAC,CAAE,EACvEJ,EAAW,KAAK,CAAE,KAAM,YAAa,MAAOI,EAAM,KAAK,2BAA2B,CAAC,CAAE,EAEjF,KAAK,aACLJ,EAAW,KAAK,MAAM,EACtBA,EAAW,KAAK,CAAE,KAAM,gBAAiB,MAAO,CAAC,KAAK,eAAgB,EAAE,UAAW,EAAM,CAAA,EACzFA,EAAW,KAAK,CAAE,KAAM,iBAAkB,MAAOI,EAAM,KAAK,cAAc,CAAC,CAAE,EACzE,KAAK,iBACLJ,EAAW,KAAK,CAAE,KAAM,kBAAmB,MAAO,KAAK,KAAK,GAAG,CAAE,EACjEA,EAAW,KAAK,CAAE,KAAM,aAAc,MAAQ,KAAK,KAAK,SAAW,CAAE,CAAC,EACtEA,EAAW,KAAK,CAAE,KAAM,cAAe,MAAiB,KAAK,KAAK,SAAnB,GAA4B,MAAQ,KAAM,CAAC,EAC1FA,EAAW,KAAK,CAAE,KAAM,cAAe,MAAO,KAAK,cAAc,CAAE,IAU3EA,EAAW,KAAK,MAAM,EACtBE,EAAU,KAAK,OACfD,EAAU,GACV,QAAS/gB,KAAOghB,EAERA,EAAQ,eAAehhB,CAAG,IAEtB+gB,GACAD,EAAW,KAAK,CAAE,KAAM9gB,EAAK,MAAOghB,EAAQhhB,CAAG,EAAG,UAAW,EAAM,CAAA,EACnE+gB,EAAU,IAEVD,EAAW,KAAK,CAAE,KAAM9gB,EAAK,MAAOghB,EAAQhhB,CAAG,CAAC,CAAE,GAM9D,OAAO8gB,EAGP,SAASI,EAAMhC,EAAM,CACjB,OAAOA,EAAO,MAAQ,IACzB,CACJ,CACL,CAOI,SAASyB,GAAU/T,EAAIzN,EAAQ,CAE3B,IAAI4S,EAAW,IAAI,SAASnF,EAAG,MAAM,EACjC+E,EAAe,GAEnB,OAAOI,EAAS,WAAW5S,EAAQwS,CAAY,CAElD,CAKL,MAAMyL,EAAS,CAEb,YAAatS,EAAS,CACXA,IAASA,EAAU,IACxB,KAAK,aAAeA,EAAQ,eAAiB,OAAY,GAAOA,EAAQ,aACxE,KAAK,WAAaA,EAAQ,aAAe,OAAY,GAAOA,EAAQ,WACpE,KAAK,UAAYA,EAAQ,WAAa,GACtC,KAAK,cAAgBA,EAAQ,eAAiB,GAC9C,KAAK,YAAcA,EAAQ,cAAgB,OAAY,EAAIA,EAAQ,WACtE,CAED,KAAKgT,EAAW,CAMZ,MAJI,OAAK,cAAgBA,EAAU,0BAA2B,GAC1D,KAAK,YAAcA,EAAU,YAAa,GAC1C,KAAK,WAAaA,EAAU,YAAa,GACzC,KAAK,eAAiBA,EAAU,gBAAiB,GACjDA,EAAU,GAAK,KAAK,YAK3B,CAEL,CAgBA,MAAMtR,EAAM,CACR,YAAYjH,EAAMkH,EAAK,CACnB,QAASvQ,KAAKqJ,EACX,QAAQ,IAAIrJ,CAAC,EAEhB,IAAIyB,EAAa,CAAE,EACf+O,EAAM,CAAC,CAAC,EACR9O,EAAY,EAIhB,IAFA6O,EAAMA,GAAOlH,EAAK,WAAa,GAExBmH,EAAI,CAAC,EAAID,GAAK,CAEjB,IAAIG,EAAK,IAAI,WAAWrH,EAAMmH,EAAI,CAAC,EAAG,EAAE,EAEpCG,EAAQD,EAAG,EAAE,GAAK,EAAMA,EAAG,EAAE,EACvBA,EAAG,EAAE,EACLA,EAAG,EAAE,EACHA,EAAG,EAAE,GAAK,EAAMA,EAAG,EAAE,EACjC,IAAIE,EAASF,EAAG,EAAE,GAAK,EAAMA,EAAG,EAAE,EAAK,EAEnCpS,EAAQ,GAAKqS,EAAOH,EAAI,CAAC,EACzBvT,EAASoM,EAAK,WAAa/K,EAE/B,GAAIrB,EAAU2T,EAAQ,EAAI,MAE1B,IAAIC,EAAMvP,GAAsB+H,EAAM/K,EAAOrB,EAAQuT,CAAG,EAExDA,EAAI,CAAC,GAAK,EAEV9O,GAAamP,EAAI,WACjBpP,EAAW,KAAKoP,CAAG,CACtB,CAGD,GAAIpP,EAAW,QAAU,EACrB,OAAOA,EAAW,CAAC,EAInB,QAFIK,EAAM,IAAI,WAAWJ,CAAS,EAC9BK,EAAS,EACJ5D,EAAI,EAAGA,EAAIsD,EAAW,OAAQ,EAAEtD,EAAG,CACxC,IAAIpB,EAAI,IAAI,WAAW0E,EAAWtD,CAAC,CAAC,EACpCD,EAAUnB,EAAG,EAAG+E,EAAKC,EAAQhF,EAAE,MAAM,EACrCgF,GAAUhF,EAAE,MACf,CACD,OAAO+E,EAAI,MAElB,CACL,CAIA,MAAMmf,EAAkB,CACpB,YAAYnP,EAAKxT,EAAOye,EAAKkI,EAAoBC,EAAeC,EAAevc,EAAQ,CACnF,KAAK,OAAOA,EACZ,KAAK,IAAMkJ,EACX,KAAK,MAAQxT,EACb,KAAK,IAAMye,EACX,KAAK,OAAUA,EAAMze,EAChB,KAAK,OAAO,SAIb,KAAK,YAAa,IAAI,KAAK,OAAO,SAASwT,EAAIxT,EAAMye,EAAInU,CAAM,EAH/D,KAAK,YAAa,IAAIwc,GAAYtT,EAAIxT,EAAMye,EAAInU,CAAM,EAO1D,KAAK,WAAa,GAClB,KAAK,eAAe,GACpB,KAAK,qBAAuB,GAE5B,KAAK,mBAAqBqc,IAAuB,OAAY,IAAMA,EACnE,KAAK,cAAgBC,IAAkB,OAAY,GAAKA,EAExD,KAAK,eAAiBC,EACtB,KAAK,OAAS,GACd,KAAK,WAAa,GAElB,KAAK,iBAAmB,IAAI,IAE5B,KAAK,cAAgB,IAAIE,GAAiB,KAAK,MAAO,KAAK,MAAQ,KAAK,mBAAoB,IAAI,EAEhG,KAAK,OAAS,SAAgBzD,EAAW,CACrC,OAAOA,EAAU,SAAQ,GAAM,CAACA,EAAU,0BAAyB,CACtE,CAEJ,CAED,KAAKA,EAAW,CAER,KAAK,OAAOA,CAAS,IAAM,KAC3BA,EAAU,QACVA,EAAU,MAAMrB,GAAWqB,EAAU,KAAK,GAE1C,KAAK,OAAO,qBACZ,KAAK,eAAe,KAAKA,CAAS,EAGtC,KAAK,YAAY,UAAUA,CAAS,EAC/B,KAAK,OAAO,qBAMb,KAAK,gBAAkB,KAAK,iBAAiB,IAAIA,EAAU,QAAQ,IAInEA,EAAU,OAAS,KAAK,cAAc,MACtC0D,GAAa,KAAK,IAAI,EACtB,KAAK,cAAgB,IAAID,GAAiBzD,EAAU,MAAOA,EAAU,MAAQ,KAAK,mBAAoB,IAAI,GAG9G,KAAK,cAAc,aAAaA,CAAS,IAE5C,CAED,QAAQtH,EAAU,CACd,KAAK,WAAW,QAAQA,CAAQ,CACnC,CAED,QAAS,CAOL,GALI,KAAK,gBAAkB,QACvBgL,GAAa,KAAK,IAAI,EAIvB,KAAK,eAAgB,CACpB,IAAIzhB,EAAM,CAAE,EAAE0hB,EAAK,KAAK,iBAExB,KAAK,WAAW,QAAQ,SAAUvlB,EAAG,CAC5BulB,EAAG,IAAIvlB,EAAE,QAAQ,GAClB6D,EAAI,KAAK7D,CAAC,CAE9B,CAAa,EACD,KAAK,WAAa6D,CACrB,CAED,KAAK,WAAW,KAAK,SAAU7D,EAAGjD,EAAG,CACjC,OAAOiD,EAAE,MAAQjD,EAAE,KAC/B,CAAS,EAED,KAAK,WAAa,OAClB,KAAK,iBAAmB,MAC3B,CAED,SAAS+U,EAAKxT,EAAOye,EAAK,CACtB,OAAO,KAAK,KAAOjL,GACf,KAAK,OAASxT,GACd,KAAK,KAAOye,CACnB,CAED,yBAA0B,CACtB,OAAO,KAAK,sBAAwB,KAAK,qBAAqB,OAAS,CAC1E,CACL,CAEI,SAASuI,IAAe,CACpB,KAAK,WAAa,KAAK,WAAW,OAAO,KAAK,cAAc,UAAU,EAClE,KAAK,cAAc,iBAAmB,GACtC,KAAK,qBAAqB,KAAK,IAAIE,GAC/B,KAAK,cAAc,MACnB,KAAK,cAAc,IACnB,KAAK,cAAc,gBAAgB,CAAC,EAE5C,KAAK,OAAS,KAAK,QAAU,KAAK,cAAc,MACnD,CAQL,MAAMH,EAAgB,CAClB,YAAY/mB,EAAOye,EAAKsE,EAAoB,CAExC,KAAK,MAAQ/iB,EACb,KAAK,IAAMye,EACX,KAAK,WAAa,GAClB,KAAK,iBAAmB,EACxB,KAAK,cAAgBsE,EAAmB,cACxC,KAAK,eAAiBA,EAAmB,eACzC,KAAK,iBAAmBA,EAAmB,iBAC3C,KAAK,WAAaA,EAAmB,UACxC,CAED,aAAaO,EAAW,CAEpB,IAAI6D,EAAc1V,EAAK2V,EAAmBhC,EAEtC,KAAK,WAAW,OAAS,KAAK,cAE1B,KAAK,gBAAkBC,GAAY/B,CAAS,GAC5C8B,EAAkB,KAAK,WAAW9B,EAAU,QAAQ,EAChD8B,GAEAA,EAAgB,mBAAmB9B,CAAS,EAC5C,KAAK,WAAWA,EAAU,QAAQ,EAAI,SAItC8B,EAAkB,IAAIE,GAAgBhC,CAAS,EAC/C,KAAK,OAAS,GACd,KAAK,WAAWA,EAAU,QAAQ,EAAI8B,EACtC,KAAK,WAAW,KAAKA,CAAe,IAIxC,KAAK,WAAW,KAAK9B,CAAS,GAKlC6D,EAAe,KAAK,eAAiB,KAAK,cAAgB,KAAK,iBAAmB,GAE9E,KAAK,OAAQ,EAAGA,GAEhB1V,EAAM,KAAK,MAAM,KAAK,OAAM,GAAM,KAAK,WAAW,OAAS,EAAE,EAC7D2V,EAAoB,KAAK,WAAW3V,CAAG,EAEnC,KAAK,gBAAkB4T,GAAY/B,CAAS,GAEzC,KAAK,WAAW8D,EAAkB,QAAQ,IAAM,SAC/C,KAAK,WAAWA,EAAkB,QAAQ,EAAI,QAGlDhC,EAAkB,IAAIE,GAAgBhC,CAAS,EAC/C,KAAK,OAAS,GACd,KAAK,WAAWA,EAAU,QAAQ,EAAI8B,EACtC,KAAK,WAAW3T,CAAG,EAAI2T,GAIvB,KAAK,WAAW3T,CAAG,EAAI6R,EAE3B,KAAK,iBAAiB,IAAI8D,EAAkB,QAAQ,GAIpD,KAAK,iBAAiB,IAAI9D,EAAU,QAAQ,EAGhD,KAAK,mBAGZ,CACL,CAIA,MAAMwD,EAAW,CACb,YAAYtT,EAAKxT,EAAOye,EAAInU,EAAQ,CAEhC,KAAK,IAAMkJ,EACX,KAAK,QAAUxT,EACf,KAAK,OAAUye,EAAMze,EACrB,KAAK,OAAOsK,EACZ,KAAK,SAAW,IAAI,MAAM,KAAK,MAAM,EAErC,KAAK,QAAU,CAGlB,CAED,UAAUgZ,EAAW,CAEjB,IAAIxQ,EAAO,KAEPwQ,EAAU,SAAW,OAErB+D,EAAc/D,CAAS,EAGvBA,EAAU,OAAO,QAAQ,SAAUpa,EAAO,CACtCme,EAAcne,CAAK,CACnC,CAAa,EAGL,SAASme,EAAcne,EAAO,CAE1B,IAAI1D,EACA8hB,EACAznB,EACAC,EACAR,EAEJ,IAAKO,EAAIqJ,EAAM,MAAQ4J,EAAK,QAAShT,EAAI,EAAGA,EAAIoJ,EAAM,IAAKrJ,IAAKC,IAEvDgT,EAAK,SAASjT,CAAC,IAChBiT,EAAK,SAASjT,CAAC,EAAI,IAAI0nB,IAG3BD,EAAOpe,EAAM,IAAI,OAAOpJ,CAAC,EACzB0F,EAAO8d,EAAU,OAAU,MAAQgE,EAAO,MAAQA,EAClDhoB,EAAI4J,EAAM,KAAKpJ,CAAC,EAEhBgT,EAAK,SAASjT,CAAC,EAAE2F,CAAG,GAAK,EACzBsN,EAAK,SAASjT,CAAC,EAAE,OAASynB,CAAI,GAAKhoB,EAEnCwT,EAAK,SAASjT,CAAC,EAAE,OAAS,EAC1BiT,EAAK,SAASjT,CAAC,EAAE,MAAQP,EAEzBwT,EAAK,QAAU,KAAK,IAAIA,EAAK,SAASjT,CAAC,EAAE,MAAOiT,EAAK,OAAO,CAGnE,CACJ,CACL,CAEAgU,GAAY,UAAY,GACxBA,GAAY,cAAgB,GAE5B,MAAMS,EAAQ,CACV,aAAc,CACV,KAAK,KAAO,EACZ,KAAK,KAAO,EAEZ,KAAK,KAAO,EACZ,KAAK,KAAO,EAEZ,KAAK,KAAO,EACZ,KAAK,KAAO,EACZ,KAAK,KAAO,EAEZ,KAAK,KAAO,EAEZ,KAAK,KAAO,EACZ,KAAK,KAAO,EAEZ,KAAK,IAAM,EACX,KAAK,IAAM,EAEX,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,MAAQ,EAEb,KAAK,KAAO,EAEZ,KAAK,MAAQ,CAChB,CAED,WAAWC,EAAS,CAEhB,IAAIC,EAAS,KACTC,EACAC,EAAYb,GAAY,WAAcA,GAAY,eAAiB,KAAK,KAAQ,KAAK,KAAO,KAAK,OAErG,OAAAY,EAAqB,EACrB,CAAC,IAAK,IAAK,IAAK,GAAG,EAAE,QAAQ,SAAUJ,EAAM,CAErCA,IAASE,IACTE,GAAwBZ,GAAY,eAAiBW,EAAO,KAAQA,EAAO,OAASH,CAAI,EAAKG,EAAO,MAAQH,CAAI,EAAIG,EAAO,MAAQH,CAAI,EAEvJ,CAAS,EAEMI,GAAsBC,CAEhC,CACL,CAEA,MAAMT,EAAmB,CACrB,YAAYlnB,EAAOye,EAAKmJ,EAAQ,CAC5B,KAAK,MAAQ5nB,EACb,KAAK,IAAMye,EACX,KAAK,OAASmJ,CACjB,CAED,UAAUvB,EAAiB,CACvB,MAAO,CACH,CAAC,KAAM,QAAS,MAAO,KAAK,MAAQ,CAAC,EACrC,CAAC,KAAM,MAAO,MAAO,KAAK,GAAG,EAC7B,CAAC,KAAM,iBAAkB,MAAO,KAAK,MAAM,CAAC,CACnD,CACL,CAGA,MAAMf,EAAe,CACjB,YAAYuC,EAAgB,CAExB,KAAK,eAAiBA,EACtB,KAAK,IAAMA,EAAe,IAC1B,KAAK,SAAWA,EAAe,SAE3BA,EAAe,MAAQA,EAAe,KAAK,UAC3C,KAAK,MAAQA,EAAe,MAC5B,KAAK,IAAM,KAAK,IAAIA,EAAe,KAAK,SAAUA,EAAe,MAAQA,EAAe,WAAW,EACnG,KAAK,gBAAkBA,EAAe,MAAQA,EAAe,YAC7D,KAAK,cAAgBA,EAAe,KAAK,WAGzC,KAAK,MAAQA,EAAe,KAAK,SACjC,KAAK,IAAMA,EAAe,MAAQA,EAAe,YACjD,KAAK,gBAAkBA,EAAe,KAAK,SAC3C,KAAK,cAAgBA,EAAe,OAExC,KAAK,YAAc,KAAK,IAAM,KAAK,KAEtC,CAED,mBAAmBvE,EAAW,CAG1B,KAAK,gBAAkBA,EAEnBA,EAAU,MAAQ,KAAK,eAAe,OACtC,KAAK,IAAMA,EAAU,MAAQA,EAAU,YACvC,KAAK,cAAgBA,EAAU,QAG/B,KAAK,MAAQA,EAAU,MACvB,KAAK,gBAAkBA,EAAU,MAAQA,EAAU,aAEvD,KAAK,YAAc,KAAK,IAAM,KAAK,KAGtC,CAED,UAAU+C,EAAiB,CAEvB,IAAIC,EAAa,CAAA,EAEjB,OAAAA,EAAaA,EAAW,OAAO,KAAK,eAAe,UAAUD,CAAe,CAAC,EAEzE,KAAK,kBACLC,EAAW,KAAK,iCAAiC,EACjDA,EAAaA,EAAW,OAAO,KAAK,gBAAgB,UAAUD,CAAe,CAAC,GAE3EC,CACV,CAED,UAAY,CACR,MAAO,EACV,CAED,mBAAqB,CACjB,OAAI,KAAK,eAAe,gBACb,KAAK,eAAe,OAEtB,KAAK,gBACH,KAAK,gBAAgB,OAGrB,KAAK,eAAe,MAElC,CAEL,CAEA,MAAML,EAAgB,CAClB,aAAa,CACT,KAAK,WAAa,GAClB,KAAK,MAAQ,MAChB,CAED,oBAAoBxS,EAASC,EAAO,CAEhC,IAAIoU,EAAkB,OAGtB,YAAK,WAAW,QAAQ,SAASpmB,EAAE,CAEbomB,IAAd,SAEKpmB,EAAE,MAAQA,EAAE,YAAe+R,GAAW/R,EAAE,MAAQgS,IAGjDoU,EAAkBpmB,GAKtC,CAAS,EAEMomB,CACV,CAED,YAAYzB,EAAiB0B,EAAiBC,EAAY,CAEtD,KAAK,MAAQ,KAAK,cAAc3B,EAAkB,EAAIA,EAAkB0B,EAAiBC,CAAU,CAEtG,CAED,cAAcvU,EAASC,EAAOqU,EAAiBC,EAAY,CAEvD,IAAIC,EACA3E,EAGJ,OADAA,EAAY,KAAK,oBAAoB7P,EAASC,CAAK,EACjC4P,IAAd,OACO,OAAO,UAGG0E,EAAW,OAA5B,cAEAC,EAAY,OAEZ3E,EAAU,OAAO,QAAQ,SAAUpa,EAAO,CAEtC,IAAI8b,EAAW+C,EAAgB,SAC3BG,EAAcH,EAAgB,YAC9BI,EACAb,EACAc,EACAvlB,EACAwlB,EAEJ,GAAYnf,EAAM,MAAd,IAEA,QAASrJ,EAAI,EAAGyoB,EAAyBpf,EAAM,MAAQ6e,EAAgB,MAAOQ,EAAkBrf,EAAM,MAAOsf,EAAsBtf,EAAM,IAAI,OACxIrJ,EAAI2oB,EACJ3oB,IAAKyoB,IAA0BC,IAE5B9U,IAAY8U,IAEZJ,EAAYnD,EAAS,OAAOsD,CAAsB,EAClDhB,EAAOpe,EAAM,IAAI,OAAOrJ,CAAC,EAErBynB,IAAS,MACTA,EAAOa,GAGPb,IAAS,IACTW,EAAY,EAEPX,IAASa,EACdF,EAAY,EAEPX,IAAS,KAAOA,IAASa,GAE9BC,EAAWF,EAAY,SAAWK,EAAkBL,EAAY,OAAO,EACvErlB,EAAQulB,EAAU,MAAQd,CAAM,EAAGc,EAAU,MAAQd,GACrDe,EAASD,EAAS,KAAQA,EAAS,KAAO,EAC1CH,EAAY,EAAEplB,EAASwlB,EAAQ,MAE/B,QAAQ,IAAI,sCAAsC,QAS9DJ,EAAY,CAGhC,CAAa,EAEqBA,IAAd,OAA2B,OAAO,UAAYA,GAEpCD,EAAW,OAAxB,SAEE1E,EAAU,OAAS,EAAI,GAEb0E,EAAW,OAAvB,QAEE1E,EAAU,MAGd,OAAO,SAEjB,CACL,CASA,SAASrB,GAAW7P,EAAI,CAMZ,QAJItT,EAAI,EACJqI,EAAMiL,EAAG,OACT+O,EAAO,CAAA,EAEJriB,EAAIqI,GAAK,CACZ,IAAI+e,EAAM,OAAO,aAAa9T,EAAGtT,CAAC,CAAC,EAAI,OAAO,aAAasT,EAAGtT,EAAI,CAAC,CAAC,EAChE8O,EAAO,OAAO,aAAawE,EAAGtT,EAAI,CAAC,CAAC,EACpCwH,EAEJ,GAAIsH,GAAQ,IACRtH,EAAQ,OAAO,aAAa8L,EAAGtT,EAAI,CAAC,CAAC,EACrCA,GAAK,UACE8O,IAAS,KAAOA,IAAS,IAChCtH,EAAQqb,EAAQvP,EAAItT,EAAI,CAAC,EACzBA,GAAK,UACE8O,IAAS,KAAOA,IAAS,IAChCtH,EAAQ8L,EAAGtT,EAAI,CAAC,EAChBA,GAAK,UACE8O,IAAS,KAAOA,IAAS,IAChCtH,EAAQie,GAAUnS,EAAItT,EAAI,CAAC,EAC3BA,GAAK,UACE8O,IAAS,IAEhBtH,EAAQ6f,GAAU/T,EAAItT,EAAI,CAAC,EAC3BA,GAAK,UACE8O,IAAS,IAGhB,IAFA9O,GAAK,EACLwH,EAAQ,KACE,CACN,IAAI8f,EAAKhU,EAAGtT,GAAG,EACf,GAAIsnB,IAAO,EACP,MAEA9f,GAAS,OAAO,aAAa8f,CAAE,CAEtC,KACE,CAEH9f,EAAQ,uBAAyBsH,EACjCuT,EAAK+E,CAAG,EAAI5f,EACZ,KACH,CACD6a,EAAK+E,CAAG,EAAI5f,CACf,CACD,OAAO6a,CACnB,CCzwEA,MAAMsH,EAAa,CACf,YAAYhW,EAAQ,CAChB,KAAK,OAASA,GAAU,EAC3B,CAGD,eAAgB,CACZ,YAAK,WAAW,GACT,IAAI,QAAQ,SAAUlC,EAASC,EAAQ,CAC1CD,GACZ,CAAS,CACJ,CAGD,YAAYiD,EAAIxT,EAAMye,EAAIiK,EAAM3d,EAAK,CAGjC,GAAI,KAAK,WACL,OAAO,KAAK,aAAayI,EAAIxT,EAAMye,EAAIiK,EAAM3d,CAAI,EAGrD,IAAI+H,EAAO,KACX,OAAO,IAAI,QAAQ,SAASvC,EAAQC,EAAO,CACvCsC,EAAK,gBAAgB,KAAK,UAAU,CAChCA,EAAK,aAAaU,EAAIxT,EAAMye,EAAIiK,EAAM3d,CAAI,EAAE,KAAK,SAASyJ,EAAS,CAC/DjE,EAAQiE,CAAQ,CACpC,CAAiB,EAAE,MAAMhE,CAAM,CAC/B,CAAa,EAAE,MAAMA,CAAM,CAC3B,CAAS,CAEJ,CAWD,aAAagD,EAAKC,EAASC,EAAMgV,EAAM3d,EAAM,CACrC0I,IAAU,IACVA,EAAQ,GAEZ,IAAIX,EAAO,KACX,OAAAA,EAAK,KAAK,KAAK,MACR,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CACtCsC,EAAK,cAAgBU,IAAQV,EAAK,aAAa,MAAM,MACrDA,EAAK,aAAa,MAEtB,IAAIiV,EAAkB,IAAIY,GAAgBnV,EAAKC,EAASC,CAAK,EACzDkV,EAAe9V,EAAK,aACpBiS,EAAUjS,EAAK,OAAO,SAAW,IACrC,IAAI+V,EAAc,GASlB,GARKD,EAIGA,EAAa,QAAU,SACvBC,EAAcD,EAAa,MAAM,YAAYb,CAAe,GAJhEc,EAAc,CAAC,IAAI,CAACpV,EAAQC,CAAK,CAAC,EAOlC,CAACmV,EACDtY,EAAQuC,EAAK,aAAa,cAAcU,EAAKC,EAASC,CAAK,CAAC,MAE5D,CACA,IAAIuP,EAAS,CAAA,EACT6F,EAAQ,CAAA,EACZ,QAASlb,KAAQib,EAAc,CAC3B,IAAIjY,EAAOiY,EAAcjb,CAAI,EAC7BqV,EAAS,KAAKnQ,EAAK,iBAAiBU,EAAK5C,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAE8X,EAAM3d,CAAI,CAAC,EACvE+d,EAAQ,KAAK,CAAClb,EAAKgD,CAAK,CAAC,CAC5B,CACD,QAAQ,IAAIqS,CAAQ,EAAE,KAClB,SAAU8F,EAAc,CACpB,IAAIC,EAAkB,CAAA,EAClBlW,EAAK,eACLkW,EAAkBlW,EAAK,aAAa,eAExC,IAAIpU,EAAM,EACV,QAASuqB,KAAeF,EAAa,CAIjC,GAHIE,IAAgB,OAChBA,EAAY,CAAA,GAEZH,EAAQpqB,CAAK,EAAE,CAAC,IAAI,OAAO,CAC3B,IAAI+f,EAAMqK,EAAQpqB,CAAK,EAAE,CAAC,EAAE,CAAC,EAEzBwqB,EAAO,EACX,QAASrqB,EAAEoqB,EAAY,OAAO,EAAEpqB,GAAG,EAAEA,IAC7BoqB,EAAYpqB,CAAC,EAAE,KAAM4f,IACrBwK,EAAYpqB,CAAC,EAAE,OAAO,GACtBqqB,KAIJA,IAAS,IACTD,EAAcA,EAAY,OAAO9a,GAAG,CAACA,EAAE,MAAM,EAGpD,CACD,GAAI2a,EAAQpqB,CAAK,EAAE,CAAC,IAAI,QAAQ,CAC5B,IAAIsB,EAAM8oB,EAAQpqB,CAAK,EAAE,CAAC,EAAE,CAAC,EAEzBmB,EAAE,EACN,IAAKA,EAAE,EAAEA,EAAEopB,EAAY,QACf,EAAAA,EAAYppB,CAAC,EAAE,MAAOG,GADAH,IAC1B,CAIAA,IAAI,GACJopB,EAAY,OAAO,EAAEppB,CAAC,CAE7B,CACDnB,IACAsqB,EAAkBA,EAAkB,OAAOC,CAAW,CACzD,CACD,IAAIE,EAAKrW,EAAK,aAAaA,EAAK,aAAa,MAAMiV,EACnDjV,EAAK,aAAe,IAAIsW,GAAaJ,EAAmBG,CAAE,EAC1DV,GAAc,aAAaO,EAAmBjE,CAAO,EACrDxU,EAAQuC,EAAK,aAAa,cAAcU,EAAKC,EAASC,CAAK,CAAC,CACpF,CAAiB,EAAE,MAAM,SAAS+F,EAAM,CACpBjJ,EAAOiJ,CAAK,CAChC,CAAiB,CACJ,CACb,CAAS,CACJ,CAKD,OAAO,aAAajF,EAAUuQ,EAAS,CAEnC,GAAIvQ,GAAY,MAAQA,EAAS,SAAW,EACxC,OAKJ,IAAI6U,EAAgB,CAAE,EAClBC,EAAO,CAAA,EACX9U,EAAS,QAAQ,SAAUsB,EAAS,CAEhC,IAAItC,EAAMsC,EAAQ,IACdyT,EAAQF,EAAc7V,CAAG,EAExB+V,IACDA,EAAQ,CAAA,EACRF,EAAc7V,CAAG,EAAI+V,EACrBD,EAAK,KAAK9V,CAAG,GAGjB+V,EAAM,KAAKzT,CAAO,CAC9B,CAAS,EAIDwT,EAAK,QAAQ,SAAU9V,EAAK,CAExBgW,EAAKH,EAAc7V,CAAG,EAAGuR,CAAO,CAC5C,CAAS,EAKD,SAASyE,EAAKP,EAAalE,EAAS,CAEhC,IAAIE,EAAO,CAAA,EAEXgE,EAAY,KAAK,SAAUvnB,EAAGjD,EAAG,CAC7B,OAAOiD,EAAE,MAAQjD,EAAE,KACnC,CAAa,EAGDwmB,EAAK,KAAK,IAAK,EACfgE,EAAY,QAAQ,SAAUnT,EAAS,CAEhC,IACCtX,EACA2I,EAAM,KAAK,IAAI8d,EAAK,OAAQF,CAAO,EACnC/kB,EAAQ8V,EAAQ,MAEpB,IAAKtX,EAAI,EAAGA,EAAI2I,EAAK3I,IACjB,GAAIwB,GAASilB,EAAKzmB,CAAC,EAAG,CAClBsX,EAAQ,IAAMtX,EACdymB,EAAKzmB,CAAC,EAAIsX,EAAQ,IAClB,MACH,CAELA,EAAQ,IAAMtX,EACdymB,EAAKzmB,CAAC,EAAIsX,EAAQ,GAGlC,CAAa,CACJ,CACJ,CAEL,CAEA,MAAM2T,WAA8BhB,EAAa,CAC7C,YAAYhW,EAAOiX,EAAgB,CAC/B,MAAMjX,CAAM,EACZ,KAAK,OAAS,IAAIkX,GAAkBlX,EAAOiX,CAAe,CAC7D,CAED,iBAAiBlW,EAAIxT,EAAMye,EAAI,CAC3B,eAAQ,IAAI,mBAAmBjL,EAAIxT,EAAMye,CAAG,EACrC,KAAK,OAAO,aAAajL,EAAIxT,EAAMye,CAAG,CAChD,CAED,eAAgB,CACZ,IAAI3L,EAAO,KACX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAC1CsC,EAAK,OAAO,WAAY,EAAC,KAAK,UAAY,CACtCA,EAAK,WAAW,GAChBvC,GAChB,CAAc,EAAE,MAAMC,CAAM,CAE5B,CAAS,CACJ,CACL,CAEA,MAAMoZ,WAA4BnB,EAAa,CAC3C,YAAYhW,EAAOiX,EAAgB,CACrCjX,EAAO,WAAW,OAClB,MAAMA,CAAM,EACZ,KAAK,OAAO,GACZ,KAAK,eAAe,IAAIY,GAASZ,EAAOiX,CAAe,CACvD,CAED,iBAAiBlW,EAAIC,EAAQC,EAAMgV,EAAM3d,EAAK,CAC7C,OAAO,KAAK,eAAe,YAAYyI,EAAIC,EAAQC,EAAM,GAAM3I,CAAI,CACnE,CACF,CAMA,MAAM8e,GAAyB,MAQ/B,MAAMF,EAAiB,CACnB,YAAYlX,EAAOqX,EAAc,CAI7B,GAFA,KAAK,OAASrX,GAAU,GAEpBA,EAAO,UACP,KAAK,UAAYA,EAAO,UACxB,KAAK,SAAWA,EAAO,UAAU,SAEhC,CAGD,KAAK,IAAMsX,GAActX,EAAO,IAAK,EAAK,EAC1C,KAAK,SAAWA,EAAO,SACvB,KAAK,QAAUA,EAAO,SAAW,KAAK,SAEtC,IAAIuX,EAAW3Q,GAAM,SAAS5G,EAAO,GAAG,EACxC,KAAK,SAAWuX,EAAS,KACzB,KAAK,KAAOA,EAAS,IACxB,CAED,KAAK,OAASvX,EAAO,OAErB,KAAK,OAAS,KAAK,UAAU,KAAK,OAAQqX,CAAY,CACzD,CAGD,UAAUG,EAAQC,EAAQ,CACtB,OAAQD,EAAM,CACV,IAAK,MACD,OAAO,IAAI,UACf,IAAK,MACD,OAAO,IAAI,UACf,QACI,OAAO,IAAIE,GAAcF,EAAQC,EAAQ,KAAK,MAAM,CAC3D,CAEJ,CAGD,aAAc,CACV,IAAIE,EAAiB,KAAK,OAAO,SAC7Bxc,EAAO,KAAK,KACZyc,EAAgB,KAAK,OAAO,QAEhC,OAAOD,GAAmBxc,GAAQ,OAASyc,GAAiB,EAC/D,CAMD,WAAY,CACR,IAAIC,EAAU,KAAK,SACnB,OAAI,KAAK,SAAS,SAAS,KAAK,GACvBA,IAASA,EAAU,KAAK,IAAM,QAE5B7N,GAAa6N,EAAS,KAAK,OAAQ,EAAI,IAGzCA,IAASA,EAAU,KAAK,IAAM,QAC5B,iBAAiBA,EAAS,KAAK,MAAM,EAEnD,CAED,qBAAsB,CAElB,IAAIxX,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAC1C,IAAIwM,EAASlK,EAAK,OACdxC,EAAU,CACN,QAASwC,EAAK,OAAO,QACrB,gBAAiBA,EAAK,OAAO,eACjD,EAEgBA,EAAK,UACL1C,EAAO,mBAAmB0C,EAAK,UAAWxC,CAAO,EAAE,KAAKia,CAAS,EAAE,MAAM/Z,CAAM,EAG/EJ,EAAO,WAAW0C,EAAK,IAAKxC,CAAO,EAAE,KAAKia,CAAS,EAAE,MAAM/Z,CAAM,EAIrE,SAAS+Z,EAAUxf,EAAM,CACrB+H,EAAK,OAASkK,EAAO,YAAYjS,CAAI,EACjC+H,EAAK,kBAAkB,QAAUA,EAAK,OAAO,WAAW,iBAAiB,IACzEA,EAAK,OAAS,QAElBvC,EAAQyM,EAAO,cAAcjS,CAAI,CAAC,CAElD,CAAA,CAAS,CACJ,CAID,sBAAsByI,EAAKxT,EAAOye,EAAK,CACnC,IAAI3L,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAE1C,IAAIvH,EACAvK,EAAQoU,EAAK,MACb6J,EAAQje,GAASA,EAAM,MACvBmf,EAAQlB,EAAQje,EAAM,iBAAiB8U,CAAG,EAAIA,EAC9CyP,EAAW,CAAA,EAGfha,EAAQvK,EAAM,eAAemf,EAAO7d,EAAOye,CAAG,EAE1C,CAACxV,GAAUA,EAAO,SAAW,EAC7BsH,EAAQ,IAAI,GAGZtH,EAAO,QAAQ,SAAUC,EAAO,CACvBA,GAIL+Z,EAAS,KAAK,IAAI,QAAQ,SAAU1S,EAASC,EAAQ,CACjD,IAAIga,EAAWthB,EAAM,KAAK,MACtBmN,EAAcnN,EAAM,KAAK,OACzBuhB,EAASvhB,EAAM,KAAK,OAASxK,EAAM,MAAQmrB,GAAwB,GACnEvZ,EAAU,CACN,QAASwC,EAAK,OAAO,QACrB,MAAO,CAAC,MAAO0X,EAAU,KAAMC,EAASD,EAAW,CAAC,EACpD,gBAAiB1X,EAAK,OAAO,eAChC,EACD4X,EAEJA,EAAU,SAAU3f,EAAM,CAGtB,IAAIjB,EAAU6gB,EAEVjsB,EAAM,MAENoL,EAAWsG,EAAO,oBAAoB4B,GAAOjH,CAAI,CAAC,EAIlDjB,EAAWiB,EAIf4f,EAAatU,EAAcvM,EAAS,MAAMuM,CAAW,EAAIvM,EACzD,IAAI5L,EAAI4U,EAAK,OAAO,cAAc6X,EAAWnX,EAAIxT,EAAMye,CAAG,EAC1DlO,EAAQrS,CAAC,CACrC,EAI4B4U,EAAK,UACL1C,EAAO,mBAAmB0C,EAAK,UAAWxC,CAAO,EAAE,KAAKoa,CAAO,EAAE,MAAMla,CAAM,EAGzE9R,EAAM,MAEN0R,EAAO,gBAAgB0C,EAAK,IAAKxC,CAAO,EAAE,KAAKoa,CAAO,EAAE,MAAMla,CAAM,EAGpEJ,EAAO,WAAW0C,EAAK,IAAKxC,CAAO,EAAE,KAAKoa,CAAO,EAAE,MAAMla,CAAM,CAG/F,CAAqB,CAAC,CACtB,CAAiB,EAED,QAAQ,IAAIyS,CAAQ,EAAE,KAAK,SAAU3O,EAAe,CAEhD,IAAIzU,EAAG6U,EAEP,GAAIJ,EAAc,SAAW,EACzBI,EAAcJ,EAAc,CAAC,MAC1B,CAGH,IAFAI,EAAcJ,EAAc,CAAC,EAExBzU,EAAI,EAAGA,EAAIyU,EAAc,OAAQzU,IAClC6U,EAAcA,EAAY,OAAOJ,EAAczU,CAAC,CAAC,EAGrD6U,EAAY,KAAK,SAAUhT,EAAGjD,EAAG,CAC7B,OAAOiD,EAAE,MAAQjD,EAAE,KAC/C,CAAyB,CACJ,CAED8R,EAAQmE,CAAW,CACvC,CAAiB,EAAE,MAAO3T,GAAI,CACV,QAAQ,IAAIA,CAAC,EACbyP,EAAOzP,CAAC,CAAC,CAC7B,EAEA,CAAS,CAEJ,CAID,UAAW,CAEP,IAAI+R,EAAO,KACX8X,EAAoB,KAAK,cACzB,OAAO,IAAI,QAAQ,SAAUra,EAASC,EAAQ,CAEtCsC,EAAK,UAAY,QAAa8X,EAC9B9X,EAAK,UAAS,EAAG,KAAK,SAAUpU,EAAO,CAC/BA,GACAoU,EAAK,MAAQpU,EACboU,EAAK,QAAU,IAGfA,EAAK,QAAU,GAEnBvC,EAAQuC,EAAK,KAAK,CACtC,CAAiB,EAAE,MAAMtC,CAAM,EAGfD,EAAQuC,EAAK,KAAK,CAGlC,CAAS,CACJ,CAED,YAAa,CAET,IAAIA,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAGtCsC,EAAK,OACLvC,EAAQuC,EAAK,MAAM,EAOpBA,EAAM,SAAQ,EAAG,KAAK,SAAUpU,EAAO,CAElC,GAAIA,EAAO,CAGP,IAAI4R,EAAU,CACN,QAASwC,EAAK,OAAO,QACrB,IAAKpU,EAAM,MACX,MAAO,CAAC,MAAO,EAAG,KAAM,IAAK,EAC7B,gBAAiBoU,EAAK,OAAO,eAChC,EACD4X,EAAU,SAAU3f,EAAM,CACtB+H,EAAK,OAASA,EAAK,OAAO,YAAY/H,CAAI,EAC1CwF,EAAQuC,EAAK,MAAM,CACnD,EAEwB,GAAIA,EAAK,UACL1C,EAAO,mBAAmB0C,EAAK,UAAWxC,CAAO,EAAE,KAAKoa,CAAO,MAE9D,CACD,MAAMra,EAAMyC,EAAK,IACjB1C,EAAO,WAAWC,EAAKC,CAAO,EAAE,KAAKoa,CAAO,EAAE,MAAMla,CAAM,CAC7D,CACJ,MAEGsC,EAAK,oBAAoB,MAAS,EAAE,KAAK,SAAU0B,EAAU,CACzD,IAAIqW,EAAS/X,EAAK,QAAU,GAC5B+X,EAAO,SAAWrW,EAClBjE,EAAQsa,CAAM,CAC1C,CAAyB,EAAE,MAAM,KAAK,CAEtC,CAAiB,EAAE,MAAMra,CAAM,CAE/B,CAAS,CAEJ,CAOD,aAAagD,EAAKxT,EAAOye,EAAK,CAE1B,IAAI3L,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAEtCsC,EAAK,MACLA,EAAK,sBAAsBU,EAAKxT,EAAOye,CAAG,EAAE,KAAKqM,CAAY,EAAE,MAAMta,CAAM,EAG3EsC,EAAK,oBAAmB,EAAG,KAAKgY,CAAY,EAGhD,SAASA,EAAatW,EAAU,CAE5BjE,EAAQiE,CAAQ,CACnB,CAEb,CAAS,CACJ,CAGL,CAMA,MAAMuW,GAAkB,OAAO,UAEzBC,GAAgB,CAAC,OAAQ,YAAa,OAAQ,UAAW,QAAS,OAAO,EAK/E,MAAMb,EAAa,CACf,YAAYF,EAAQgB,EAAaxY,EAAQ,CAIrC,KAAK,OAASwX,EACd,KAAK,UAAYxX,EAASA,EAAO,UAAY,OAC7C,KAAK,SAAW,EAEZwY,GACA,KAAK,UAAY,MAEjB,KAAK,OAAQ,SAASpV,EAAOqV,EAAO,CAChC,IAAIpV,EAAQ,CAAC,IAAID,EAAO,CAAC,EAAE,MAAM,SAASA,EAAO,CAAC,CAAC,EAAE,IAAI,SAASA,EAAO,CAAC,CAAC,CAAC,EAC5E,OAAAoV,EAAYpV,EAAO,MAAM,CAAC,EAAEC,CAAO,EAC5BA,CACvB,GAEiBrD,EAAO,kBAAkB,UAC7B,KAAK,OAAQ,SAASoD,EAAOqV,EAAO,CACjC,IAAIpV,EAAQ,CAAC,IAAID,EAAO,CAAC,EAAE,MAAM,SAASA,EAAO,CAAC,CAAC,EAAE,IAAI,SAASA,EAAO,CAAC,CAAC,CAAC,EAC5E,OAAAC,EAAQ,KAAKD,EAAO,MAAM,CAAC,EACpBC,CACvB,GAGY,KAAK,OAAQrD,EAAO,kBAAoB,gBAAgB0X,GAAc,cAAcA,GAAc,UAClG,KAAK,UAAY,MA6DxB,CAED,YAAYpf,EAAM,CAEd,IAAIogB,EAAQpgB,EAAK,MAAM;AAAA,CAAI,EACvB5D,EAAMgkB,EAAM,OACZC,EACAvrB,EACAgrB,EAEJ,IAAKhrB,EAAI,EAAGA,EAAIsH,EAAKtH,IAEjB,GADAurB,EAAOD,EAAMtrB,CAAC,EACVurB,EAAK,WAAW,OAAO,GAAKA,EAAK,WAAW,GAAG,GAAKA,EAAK,WAAW,SAAS,EACzEA,EAAK,WAAW,OAAO,EACvBP,EAAS,KAAK,eAAeO,CAAI,EAE5BA,EAAK,WAAW,iBAAiB,IACtC,KAAK,OAAS,OACTP,IAAQA,EAAS,IACtBA,EAAO,OAAY,YAGtB,CACDA,EAAO,CAAA,EACP,KACH,CAEL,OAAOA,CACV,CAED,cAAc9f,EAAKyI,EAAIxT,EAAMye,EAAK,CAE9B,GAAI,CAAC1T,EAAM,OAAO,KAEf,IAACsgB,EACAvV,EACAqV,EAAQpgB,EAAK,MAAM;AAAA,CAAI,EACvB5D,EAAMgkB,EAAM,OACZtV,EACAnB,EAAc,CAAA,EACd0W,EACAvrB,EACAyrB,EAAM,EACNxrB,EACS,KAAK,OAC1B,IAAYmqB,EAAS,KAAK,OACfsB,EAAY,KAAK,WAAa,IAGjC,IAAK1rB,EAAI,KAAK,SAAUA,EAAIsH,EAAKtH,IAE7B,GADAurB,EAAOD,EAAMtrB,CAAC,EACV,EAAAurB,EAAK,WAAW,OAAO,GAAKA,EAAK,WAAW,GAAG,GAAKA,EAAK,WAAW,SAAS,GAG5E,IAAInB,IAAW,OAASmB,EAAK,WAAW,WAAW,EAAG,CACvDC,EAAM,KAAK,eAAeD,CAAI,EAC9B,QACH,SACQnB,IAAW,OAASmB,EAAK,WAAW,cAAc,EAAG,CAC1DC,EAAM,KAAK,kBAAkBD,CAAI,EACjC,QACH,CAGD,GADAvV,EAASsV,EAAMtrB,CAAC,EAAE,MAAM0rB,CAAS,EAC7B,EAAA1V,EAAO,OAAS,GAAMoU,IAAS,OAASpU,EAAO,OAAO,KAE1DC,EAAU,KAAK,OAAOD,EAAQwV,CAAG,EAG7BvV,GAAS,CACT,GAAIA,EAAQ,MAAOtC,GAAOsC,EAAQ,IAAI9V,GAAS8V,EAAQ,MAAM2I,EACzD,SAEA/J,EAAY,OAASqW,GACrBrW,EAAY,KAAKoB,CAAO,GAIxBhW,EAAI,KAAK,MAAM,KAAK,OAAM,EAAKwrB,CAAG,EAC9BxrB,EAAIirB,KACJrW,EAAY5U,CAAC,EAAIgW,IAGzBwV,GACH,EAGL,OAAO5W,CACV,CAGD,OAAO,eAAe0W,EAAM,CAExB,IAAIvV,EAASuV,EAAK,MAAM,KAAK,EACzBhF,EAAKvQ,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAC3B2V,EAAK,SAAS3V,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAG,EAAE,EACzC4V,EAAO,SAAS5V,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAG,EAAE,EAC3C6V,EAAQ7V,EAAO,OAAS,EAAK,SAASA,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAG,EAAE,EAAI,EAEzE,MAAO,CAAC,OAAQ,YAAa,MAAOuQ,EAAI,MAAOoF,EAAI,KAAMC,EAAM,KAAMC,EAAM,MAAO,CAAC,CAEtF,CAED,OAAO,kBAAkBN,EAAM,CAE3B,IAAIvV,EAASuV,EAAK,MAAM,KAAK,EACzBhF,EAAKvQ,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAC3B6V,EAAO7V,EAAO,OAAS,EAAI,SAASA,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAG,EAAE,EAAI,EACvE,MAAO,CAAC,OAAQ,eAAgB,MAAOuQ,EAAI,KAAMsF,CAAI,CAExD,CAED,OAAO,eAAeN,EAAM,CACxB,IAAIO,EAAa,CAAE,EACf9V,EAASuV,EAAK,MAAM,uCAAuC,EAC3D7lB,EAAM,CAAE,EACR1F,EAAG+rB,EAAIC,EAGX,IAAKhsB,EAAI,EAAGA,EAAIgW,EAAO,OAAQhW,IACvB,CAACgW,EAAOhW,CAAC,GAAKgW,EAAOhW,CAAC,EAAE,KAAM,EAAC,SAAW,IAE9C+rB,EAAK/V,EAAOhW,CAAC,EAAE,KAAI,EAEf+rB,EAAG,SAAS,GAAG,EAAI,EACnBC,EAAOD,EAEFC,GACLtmB,EAAI,KAAKsmB,EAAOD,CAAE,EAClBC,EAAO,QAGPtmB,EAAI,KAAKqmB,CAAE,GAMnB,OAAArmB,EAAI,QAAQ,SAAU0E,EAAK,CACvB,GAAKA,EACL,KAAI6hB,EAAK7hB,EAAI,MAAM,IAAK,CAAC,EACrB6hB,EAAG,QAAU,IACbH,EAAWG,EAAG,CAAC,CAAC,EAAIA,EAAG,CAAC,GAGxC,CAAS,EAEMH,CACV,CAQD,OAAO,UAAU9V,EAAQqV,EAAQ,CAE7B,IAAI1X,EAAKxT,EAAOye,EAAKsC,EAAI0B,EAAMld,EAAKwmB,EAAQC,EAAWC,EAAWC,EAAYC,EAAOC,EAAMtW,EACvFuW,EAAQC,EAEZ,GAAIzW,EAAO,OAAS,EAAG,OAAO,KAQ9B,GANArC,EAAMqC,EAAO,CAAC,EACd7V,EAAQ,SAAS6V,EAAO,CAAC,CAAC,EAC1B4I,EAAM5I,EAAO,OAAS,EAAI,SAASA,EAAO,CAAC,CAAC,EAAI7V,EAAQ,EAExD8V,EAAU,CAAC,IAAKtC,EAAK,MAAOxT,EAAO,IAAKye,EAAK,MAAO,GAAI,EAEpD5I,EAAO,OAAS,EAAG,CAEnBtQ,EAAMsQ,EAAO,CAAC,EAAE,QAAQ,KAAM,EAAE,EAChCkW,EAASxmB,EAAI,MAAM,GAAG,EACtB,QAAS1F,EAAI,EAAGA,EAAIksB,EAAO,OAAQlsB,IAAK,CACpC,IAAIisB,EAAKC,EAAOlsB,CAAC,EAAE,MAAM,GAAG,EACxBisB,EAAG,CAAC,GAAK,YACT/K,EAAK+K,EAAG,CAAC,GAETA,EAAG,CAAC,GAAK,cACTrJ,EAAOqJ,EAAG,CAAC,EAElB,CACDhW,EAAQ,GAAKiL,GAAUxb,EACvBuQ,EAAQ,KAAO2M,GAAcld,CAChC,CAkBD,GAhBIsQ,EAAO,OAAS,IAChBC,EAAQ,MAAQ,WAAWD,EAAO,CAAC,CAAC,GAEpCA,EAAO,OAAS,IAChBC,EAAQ,OAASD,EAAO,CAAC,GAEzBA,EAAO,OAAS,IAChBC,EAAQ,QAAU,SAASD,EAAO,CAAC,CAAC,GAEpCA,EAAO,OAAS,IAChBC,EAAQ,MAAQ,SAASD,EAAO,CAAC,CAAC,GAElCA,EAAO,OAAS,EAIhBA,EAAO,OAAS,GAAI,CACpBmW,EAAY,SAASnW,EAAO,CAAC,CAAC,EAC9BoW,EAAYpW,EAAO,EAAE,EAAE,MAAM,GAAG,EAChCqW,EAAarW,EAAO,EAAE,EAAE,MAAM,GAAG,EACjCsW,EAAQ,CAAA,EAER,QAAStsB,EAAI,EAAGA,EAAImsB,EAAWnsB,IAAK,CAChCwsB,EAASrsB,EAAQ,SAASksB,EAAWrsB,CAAC,CAAC,EACvCysB,EAAOD,EAAS,SAASJ,EAAUpsB,CAAC,CAAC,EACrC,IAAIusB,EAAO,CAAC,MAAOC,EAAQ,IAAKC,CAAI,GAEhCxW,EAAQ,QAAUwW,GAAQxW,EAAQ,MAAQA,EAAQ,WAASsW,EAAK,IAAM,IACtEtW,EAAQ,SAAWuW,GAAUvW,EAAQ,SAAWwW,IAAMF,EAAK,QAAUtW,EAAQ,SAC7EA,EAAQ,OAASuW,GAAUvW,EAAQ,OAASwW,IAAMF,EAAK,MAAQtW,EAAQ,OAE3EqW,EAAM,KAAKC,CAAI,CAClB,CAEDtW,EAAQ,MAAQqW,CACnB,CASD,OAAOrW,CAEV,CAQD,OAAO,cAAcD,EAAQqV,EAAQ,CAEjC,GAAIrV,EAAO,OAAS,GAAI,OAAO,KAC/B,GAAIA,EAAO,EAAE,IAAM,OACf,eAAQ,IAAIA,EAAO,CAAC,CAAC,EACd,KAkBX,QAfIC,EAAU,CACN,IAAKD,EAAO,CAAC,EACb,MAAO,SAASA,EAAO,CAAC,CAAC,EACzB,IAAK,SAASA,EAAO,CAAC,CAAC,EACvB,GAAIA,EAAO,CAAC,EACZ,KAAMA,EAAO,CAAC,EACd,OAAQA,EAAO,CAAC,EAChB,QAAS,SAASA,EAAO,CAAC,CAAC,EAC3B,MAAO,SAASA,EAAO,CAAC,CAAC,CAC5B,EACDmW,EAAY,SAASnW,EAAO,CAAC,CAAC,EAC9BqW,EAAarW,EAAO,CAAC,EAAE,MAAM,GAAG,EAChC0W,EAAW1W,EAAO,EAAE,EAAE,MAAM,GAAG,EAC/BsW,EAAQ,CAAA,EAEHtsB,EAAI,EAAGA,EAAImsB,EAAWnsB,IAAK,CAEhC,IAAIusB,EAAQ,CAAC,MAAM,SAASF,EAAWrsB,CAAC,CAAC,EAAG,IAAK,SAAS0sB,EAAS1sB,CAAC,CAAC,CAAC,GAClEiW,EAAQ,QAAUsW,EAAK,KAAOtW,EAAQ,MAAQA,EAAQ,WAASsW,EAAK,IAAM,IAC1EtW,EAAQ,SAAWsW,EAAK,OAAStW,EAAQ,SAAWsW,EAAK,MAAKA,EAAK,QAAUtW,EAAQ,SACrFA,EAAQ,OAASsW,EAAK,OAAStW,EAAQ,OAASsW,EAAK,MAAKA,EAAK,MAAQtW,EAAQ,OACnFqW,EAAM,KAAKC,CAAI,CAClB,CAED,OAAAtW,EAAQ,MAAQqW,EAETrW,CAEV,CAED,OAAO,WAAWD,EAAQqV,EAAQ,CAE9B,IAAIsB,EAAYhZ,EAAKxT,EAAOye,EAAKmD,EAAQa,EAAMgK,EAAOC,EAAQC,EAAQC,EAGtE,OADAJ,EAAa3W,EAAO,OAChB2W,EAAa,EACN,MAGXhZ,EAAMqC,EAAO,CAAC,EACd7V,EAAQ,SAAS6V,EAAO,CAAC,CAAC,EAC1B4I,EAAM,SAAS5I,EAAO,CAAC,CAAC,EACxB4M,EAAO5M,EAAO,CAAC,EACf4W,EAAQ,WAAW5W,EAAO,CAAC,CAAC,EAC5B+L,EAAS/L,EAAO,CAAC,EAAE,KAAI,EACvB8W,EAAS,WAAW9W,EAAO,CAAC,CAAC,EAC7B+W,EAAS,WAAW/W,EAAO,CAAC,CAAC,EAC7B6W,EAAS,WAAW7W,EAAO,CAAC,CAAC,EAEzB4W,IAAU,IAAGA,EAAQE,GAElB,CACH,IAAKnZ,EAAK,MAAOxT,EAAO,IAAKye,EAAK,KAAMgE,EAAM,MAAOgK,EAAO,OAAQ7K,EAAQ,OAAQ+K,EACpF,OAAQC,EAAQ,OAAQF,CACpC,EACK,CAED,OAAO,eAAe7W,EAAQqV,EAAQ,CAElC,IAAI1X,EAAKxT,EAAOye,EAAKnY,EAErB,OAAIuP,EAAO,OAAS,EAAU,MAE9BrC,EAAMqC,EAAO,CAAC,EACd7V,EAAQ,SAAS6V,EAAO,CAAC,CAAC,EAC1B4I,EAAM,SAAS5I,EAAO,CAAC,CAAC,EAExBvP,EAAQ,WAAWuP,EAAO,CAAC,CAAC,EAErB,CAAC,IAAKrC,EAAK,MAAOxT,EAAO,IAAKye,EAAK,MAAOnY,CAAK,EACzD,CAED,OAAO,UAAUuP,EAAQwV,EAAK,CAE1B,IAAIG,EACAqB,EACAvmB,EAEJ,OAAI+kB,EAAI,SAAW,aAEfG,EAAMH,EAAI,MAAQA,EAAI,KAAQA,EAAI,MAClCwB,EAAKrB,EAAKH,EAAI,KACd/kB,EAAQ,WAAWuP,EAAO,CAAC,CAAC,EAC5B,EAAGwV,EAAI,MACA,MAAM/kB,CAAK,EAAI,KAAO,CAAC,IAAK+kB,EAAI,MAAO,MAAOG,EAAI,IAAKqB,EAAI,MAAOvmB,CAAK,GAEzE+kB,EAAI,SAAW,eAEhBxV,EAAO,OAAS,EAAU,MAE9B2V,EAAK,SAAS3V,EAAO,CAAC,EAAG,EAAE,EAC3BgX,EAAKrB,EAAKH,EAAI,KACd/kB,EAAQ,WAAWuP,EAAO,CAAC,CAAC,EACrB,MAAMvP,CAAK,EAAI,KAAO,CAAC,IAAK+kB,EAAI,MAAO,MAAOG,EAAI,IAAKqB,EAAI,MAAOvmB,CAAK,GAIvE,eAAeuP,CAAM,CAEnC,CAED,OAAO,WAAWA,EAAQqV,EAAQ,CAE9B,IAAI1X,EAAKxT,EAAOye,EAAK3I,EAGrB,OAAID,EAAO,OAAS,EAAU,MAE9BrC,EAAMqC,EAAO,CAAC,EACd7V,EAAQ,SAAS6V,EAAO,CAAC,CAAC,EAC1B4I,EAAM5I,EAAO,OAAS,EAAI,SAASA,EAAO,CAAC,CAAC,EAAI7V,EAAQ,EAExD8V,EAAU,CAAC,IAAKtC,EAAK,MAAOxT,EAAO,IAAKye,CAAG,EAEvC5I,EAAO,OAAS,IAChBC,EAAQ,MAAQ,WAAWD,EAAO,CAAC,CAAC,EACpCC,EAAQ,MAAQA,EAAQ,OAI5BA,EAAQ,UAAY,UAAY,CAC5B,MAAO,CAAC,CAAC,KAAM,OAAQ,MAAOA,EAAQ,IAAI,CAAC,CACvD,EAEeA,EAEV,CAED,OAAO,qBAAqBD,EAAQqV,EAAQ,CA0BxC,IAAI1X,EAAMqC,EAAO,CAAC,EACdiX,EAAcjX,EAAO,CAAC,EACtBkX,EAAgB,SAASlX,EAAO,CAAC,CAAC,EAClCmX,EAAiB,SAASnX,EAAO,CAAC,CAAC,EACnCoX,EAAqB,SAASpX,EAAO,CAAC,CAAC,EACvCqX,EAAqB,SAASrX,EAAO,CAAC,CAAC,EAEvCsX,EAA4BtX,EAAO,CAAC,EAEpCC,EAAU,CACV,IAAKtC,EACL,KAAMsZ,EACN,cAAeC,EACf,eAAgBC,EAChB,mBAAoBC,EACpB,mBAAoBC,EACpB,qBAAsB,CAAE,EAExB,MAAO,GACP,IAAK,EACjB,EAEYE,EAAYL,EACZM,EAAYL,EAEhB,GAAIE,EAAqB,EAIrB,QAFII,EAAcH,EAA0B,MAAM,GAAG,EAE5CttB,EAAI,EAAGA,EAAIytB,EAAY,OAAQztB,IAAK,CACzC,IAAI0tB,EAAeD,EAAYztB,CAAC,EAAE,MAAM,GAAG,EAEvC2tB,EAAYD,EAAa,CAAC,EAC1BE,EAAaF,EAAa,CAAC,EAE3BC,EAAYJ,IACZA,EAAYI,GAEZC,EAAaJ,IACbA,EAAYI,GAEhB3X,EAAQ,qBAAqB,KAAK,CAAC,KAAM0X,EAAW,MAAOC,CAAU,CAAC,CAEzE,CAGL,OAAA3X,EAAQ,MAAQsX,EAChBtX,EAAQ,IAAMuX,EAGdvX,EAAQ,UAAY,UAAY,CAC5B,MAAO,CAAC,CAAC,KAAM,OAAQ,MAAOA,EAAQ,IAAI,CAAC,CACvD,EAEeA,CAEV,CAED,OAAO,eAAeD,EAAQqV,EAAQ,CAG/B,IAACsB,EAAYhZ,EAAKxT,EAAOye,EAA0CmO,EAGtE,OADAJ,EAAa3W,EAAO,OAChB2W,EAAa,EACN,MAGXhZ,EAAMqC,EAAO,CAAC,EACd7V,EAAQ,SAAS6V,EAAO,CAAC,CAAC,EAAI,EAC9B4I,EAAM,SAAS5I,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,EAKtC+W,EAAS,WAAW/W,EAAO,CAAC,CAAC,EAKtB,CAAC,IAAKrC,EAAK,MAAOxT,EAAO,IAAKye,EAAK,OAAQmO,CAAM,EAC3D,CASD,OAAO,UAAU/W,EAAQqV,EAAQ,CAE1B,IAACsB,EAAYhZ,EAAKxT,EAAOye,EAAKmD,EAAQhU,EAAM6e,EAAciB,EAAiB3M,EAAIzW,EAAQqjB,EAAOlL,EAC9E5iB,EACfoqB,EAAS,KAAK,OAGlB,GADAuC,EAAa3W,EAAO,OAChB2W,EAAa,EACb,OAAO,KAGXhZ,EAAMqC,EAAO,CAAC,EACdjI,EAAOiI,EAAO,CAAC,EACf7V,EAAQ,SAAS6V,EAAO,CAAC,CAAC,EAAI,EAC9B4I,EAAM,SAAS5I,EAAO,CAAC,CAAC,EACxB4W,EAAgB5W,EAAO,CAAC,IAAhB,IAAoB,EAAI,WAAWA,EAAO,CAAC,CAAC,EACpD+L,EAAS/L,EAAO,CAAC,EACDA,EAAO,CAAC,IAAhB,KAAwB,SAASA,EAAO,CAAC,CAAC,EAClD6X,EAAkB7X,EAAO,CAAC,EAG1B,IAAI8F,EAAoBsO,IAAX,OAAqB,IAAM,MACpC2D,EAAa,CAAA,EAmBjB,GAlBAF,EAAgB,MAAM,GAAG,EAAE,QAAQ,SAAU5B,EAAI,CAC7C,IAAI9qB,EAAI8qB,EAAG,OAAO,MAAMnQ,EAAO,CAAC,EAAGnW,EAAKc,EACpCtF,EAAE,QAAU,IACZwE,EAAMxE,EAAE,CAAC,EAAE,KAAI,EACfsF,EAAQtF,EAAE,CAAC,EAAE,KAAI,EAEbsF,EAAM,WAAW,GAAG,GAAKA,EAAM,SAAS,GAAG,IAC3CA,EAAQA,EAAM,OAAO,EAAGA,EAAM,OAAS,CAAC,GAE/BtF,EAAE,CAAC,IAAZ,KAAe+f,EAAK/f,EAAE,CAAC,EACLA,EAAE,CAAC,IAAhB,SAAmBsJ,EAAStJ,EAAE,CAAC,EACnBA,EAAE,CAAC,EAAE,YAAa,IAA9B,QAAgC2sB,EAAQ,IAAI,kBAAkB3sB,EAAE,CAAC,CAAC,EAC9CA,EAAE,CAAC,IAAvB,kBAA0B+f,EAAK/f,EAAE,CAAC,GAC3C4sB,EAAWpoB,CAAG,EAAIc,EAElC,CAAS,EAGG,KAAK,UACLmc,EAAOmL,EAAW,KAAK,SAAS,MAGhC,KAAK/tB,EAAI,EAAGA,EAAImrB,GAAc,OAAQnrB,IAClC,GAAI+tB,EAAW,eAAe5C,GAAcnrB,CAAC,CAAC,EAAG,CAC7C,KAAK,UAAYmrB,GAAcnrB,CAAC,EAChC4iB,EAAOmL,EAAW,KAAK,SAAS,EAGhC,KACH,CAKT,MAAO,CACH,GAAI7M,EACJ,OAAQzW,EACR,KAAMmY,EACN,KAAM7U,EACN,IAAK4F,EACL,MAAOxT,EACP,IAAKye,EACL,MAAOgO,EACP,OAAQ7K,EACR,MAAO+L,EACP,gBAAiBD,EACjB,UAAW,UAAY,CACnB,IAAIG,EAAM,KAAK,gBAAgB,MAAM,GAAG,EACpCC,EAAK,CAAE,EACPtoB,EAAKc,EACT,OAAAunB,EAAI,QAAQ,SAAU/B,EAAI,CACtB,IAAI9qB,EAAI8qB,EAAG,KAAI,EAAG,MAAMnQ,EAAO,CAAC,EAC5B3a,EAAE,SAAW,GAAKA,EAAE,CAAC,IAAM,SAC3BwE,EAAMxE,EAAE,CAAC,EAAE,KAAI,EACfsF,EAAQtF,EAAE,CAAC,EAAE,KAAI,EAEbsF,EAAM,WAAW,GAAG,GAAKA,EAAM,SAAS,GAAG,IAC3CA,EAAQA,EAAM,OAAO,EAAGA,EAAM,OAAS,CAAC,GAE5CwnB,EAAG,KAAK,CAAC,KAAMtoB,EAAK,MAAOc,CAAK,CAAC,EAEzD,CAAiB,EACMwnB,CACV,CAEb,CACK,CAQD,aAAajY,EAAQqV,EAAQ,CAEzB,IAAIpV,EACAtC,EAAKxT,EAAOye,EACZwL,EAAS,KAAK,OACd8D,EAAS9D,EAAO,QAAU,EAE9B,OAAIpU,EAAO,OAAS,EAAU,MAE9BrC,EAAMqC,EAAOoU,EAAO,GAAG,EACvBjqB,EAAQ,SAAS6V,EAAOoU,EAAO,KAAK,CAAC,EAAI8D,EACzCtP,EAAMwL,EAAO,MAAQ,OAAY,SAASpU,EAAOoU,EAAO,GAAG,CAAC,EAAIjqB,EAAQ,EAExE8V,EAAU,CAAC,IAAKtC,EAAK,MAAOxT,EAAO,IAAKye,CAAG,EAEvCwL,EAAO,QACPA,EAAO,OAAO,QAAQ,SAAU+D,EAAOtvB,EAAO,CACtCA,GAASurB,EAAO,KAAOvrB,GAASurB,EAAO,OAASvrB,GAASurB,EAAO,MAChEnU,EAAQkY,CAAK,EAAInY,EAAOnX,CAAK,EAEjD,CAAa,EAGEoX,EAEV,CAGL,CAcA,MAAMsT,EAAY,CACd,YAAYH,EAAarY,EAAO,CAC5B,KAAK,QAAUwY,GAAa,aAAaH,CAAW,EACpD,KAAK,MAAQrY,CAChB,CAED,cAAc4C,EAAKxT,EAAOye,EAAK,CAG3B,IAAIwK,EAAagF,EAAkBnY,EAAS3O,EAAKtH,EAAGquB,EAAMC,EAI1D,OAFAD,EAAO,KAAK,QAAQ1a,CAAG,EAElB0a,GAELC,EAAYD,EAAK,gBAAgBluB,EAAOye,CAAG,EAEvC0P,EAAU,QAAU,EACb,IAOPlF,EAAc,CAAA,EAEdkF,EAAU,QAAQ,SAAUC,EAAU,CAGlC,IAFAH,EAAmBG,EAAS,MAC5BjnB,EAAM8mB,EAAiB,OAClBpuB,EAAI,EAAGA,EAAIsH,IACZ2O,EAAUmY,EAAiBpuB,CAAC,EACxB,EAAAiW,EAAQ,MAAQ2I,IAFH5e,IAGRiW,EAAQ,KAAO9V,GACpBipB,EAAY,KAAKnT,CAAO,CAGhD,CAAa,EACMmT,IAzBO,EA4BrB,CAED,aAAc,CAEV,IAAIvU,EAAc,CAAA,EACd2Z,EAAU,KAAK,QACnB,GAAIA,GACA,QAAS7oB,KAAO6oB,EACZ,GAAIA,EAAQ,eAAe7oB,CAAG,EAAG,CAE7B,IAAI0oB,EAAOG,EAAQ7oB,CAAG,EACtB0oB,EAAK,aAAa,SAAUE,EAAU,CAClC1Z,EAAcA,EAAY,OAAO0Z,EAAS,KAAK,CACvE,CAAqB,CACJ,EAGT,OAAO1Z,CAEV,CAED,OAAO,aAAauU,EAAa,CAE1B,IAACL,EAAe,CAAA,EACf0F,EAAc,CAAA,EACdD,EAAU,CAAA,EAGd,GAAIpF,EAAa,CAEbA,EAAY,QAAQ,SAAUnT,EAAS,CAEnC,IAAItC,EAAMsC,EAAQ,IACdyY,EAKJA,EAAW3F,EAAapV,CAAG,EAEtB+a,IACDD,EAAY,KAAK9a,CAAG,EACpB+a,EAAW,CAAA,EACX3F,EAAapV,CAAG,EAAI+a,GAGxBA,EAAS,KAAKzY,CAAO,CAErC,CAAa,EAKD,QAASjW,EAAI,EAAGA,EAAIyuB,EAAY,OAAQzuB,IAAK,CACzC,IAAI2T,EAAM8a,EAAYzuB,CAAC,EACvBwuB,EAAQ7a,CAAG,EAAG4V,GAAa,kBAAkBR,EAAapV,CAAG,CAAC,CACjE,CACJ,CAED,OAAO6a,CACV,CAQD,OAAO,kBAAkBpF,EAAa,CAElC,IAAIppB,EAAGkB,EAAGytB,EAAQC,EAAMP,EAAMQ,EAAWvnB,EAAKwnB,EAW9C,IATAT,EAAO,IAAIU,GACXznB,EAAM8hB,EAAY,OAElByF,EAAY,KAAK,IAAI,GAAI,KAAK,MAAMvnB,EAAM,GAAG,CAAC,EAE9C8hB,EAAY,KAAK,SAAU4F,EAAIC,EAAI,CAC/B,OAAQD,EAAG,QAAUC,EAAG,MAAQ,EAAKD,EAAG,MAAQC,EAAG,MAAQ,EAAI,EAC3E,CAAS,EAEIjvB,EAAI,EAAGA,EAAIsH,EAAKtH,GAAK6uB,EACtB3tB,EAAI,KAAK,IAAIoG,EAAKtH,EAAI6uB,CAAS,EAC/BC,EAAW1F,EAAY,MAAMppB,EAAGkB,CAAC,EACjCytB,EAASG,EAAS,CAAC,EAAE,MAErBF,EAAOD,EACPG,EAAS,QAAQ,SAAU7Y,EAAS,CAChC2Y,EAAO,KAAK,IAAIA,EAAM3Y,EAAQ,GAAG,CACjD,CAAa,EACDoY,EAAK,OAAOM,EAAQC,EAAME,CAAQ,EAGtC,OAAOT,CACV,CAGL,CAKA,MAAMa,GAAQ,EACRC,GAAM,EAEZ,IAAIC,EAAM,CAAE,EACZA,EAAI,MAAQF,GACZE,EAAI,OAASA,EACbA,EAAI,KAAOA,EACXA,EAAI,MAAQA,EAGZ,MAAML,EAAY,CACd,aAAc,CACV,KAAK,KAAOK,CACf,CAGD,OAAOjvB,EAAOye,EAAKnY,EAAO,CAEtB,IAAI8nB,EAAW,IAAIc,GAASlvB,EAAOye,EAAKnY,CAAK,EACzC6H,EAAI,IAAIghB,GAAKf,CAAQ,EAGzB,IAFA,KAAK,WAAWjgB,CAAC,EACjBA,EAAE,MAAQ6gB,GACH7gB,GAAK,KAAK,MAAQA,EAAE,OAAO,OAAS6gB,IACvC,GAAI7gB,EAAE,QAAUA,EAAE,OAAO,OAAO,KAAM,CAClC,IAAInM,EAAImM,EAAE,OAAO,OAAO,MACpBnM,EAAE,OAASgtB,IACX7gB,EAAE,OAAO,MAAQ4gB,GACjB/sB,EAAE,MAAQ+sB,GACV5gB,EAAE,OAAO,OAAO,MAAQ6gB,GACxB7gB,EAAIA,EAAE,OAAO,SAETA,GAAKA,EAAE,OAAO,QACdA,EAAIA,EAAE,OACN,KAAK,WAAWA,CAAC,GAErBA,EAAE,OAAO,MAAQ4gB,GACjB5gB,EAAE,OAAO,OAAO,MAAQ6gB,GACxB,KAAK,YAAY7gB,EAAE,OAAO,MAAM,EAEpD,KAAmB,CACH,IAAInM,EAAImM,EAAE,OAAO,OAAO,KACpBnM,EAAE,OAASgtB,IACX7gB,EAAE,OAAO,MAAQ4gB,GACjB/sB,EAAE,MAAQ+sB,GACV5gB,EAAE,OAAO,OAAO,MAAQ6gB,GACxB7gB,EAAIA,EAAE,OAAO,SAETA,GAAKA,EAAE,OAAO,OACdA,EAAIA,EAAE,OACN,KAAK,YAAYA,CAAC,GAEtBA,EAAE,OAAO,MAAQ4gB,GACjB5gB,EAAE,OAAO,OAAO,MAAQ6gB,GACxB,KAAK,WAAW7gB,EAAE,OAAO,MAAM,EAEtC,CAEL,KAAK,KAAK,MAAQ4gB,EACrB,CASD,gBAAgB/uB,EAAOye,EAAK,CAGxB,IAAI2Q,EAAiB,IAAIF,GAASlvB,EAAOye,EAAK,CAAC,EAE/C,GAAI,KAAK,OAASwQ,EAAK,MAAO,CAAA,EAE9B,IAAId,EAAY,KAAK,UAAUiB,EAAgB,KAAK,KAAM,CAAA,CAAE,EAE5D,OAAGjB,EAAU,OAAS,GAClBA,EAAU,KAAK,SAASkB,EAAIC,EAAI,CAC3B,OAAOD,EAAG,IAAMC,EAAG,GACpC,CAAa,EAGEnB,CACV,CAKD,cAAe,CAEXoB,EAAQ,KAAK,KAAM,CAAC,EAEpB,SAASA,EAAQlY,EAAMmY,EAAQ,CAG3B,QADIC,EAAQ,GACJ5vB,EAAE,EAAGA,EAAE2vB,EAAQ3vB,IAAK4vB,GAAS,IACrC,QAAQ,IAAIA,EAAQpY,EAAK,SAAS,IAAM,IAAMA,EAAK,SAAS,IAAI,EAEhEmY,GAAU,EAEPnY,EAAK,MAAQ4X,GAAKM,EAAQlY,EAAK,KAAMmY,CAAM,EAC3CnY,EAAK,OAAS4X,GAAKM,EAAQlY,EAAK,MAAOmY,CAAM,CACnD,CAEJ,CAGD,aAAaE,EAAM,CAEfC,EAAc,KAAK,IAAI,EAEvB,SAASA,EAActY,EAAM,CAEzBqY,EAAKrY,EAAK,QAAQ,EAEfA,EAAK,MAAQ4X,GAAKU,EAActY,EAAK,IAAI,EACzCA,EAAK,OAAS4X,GAAKU,EAActY,EAAK,KAAK,CACjD,CACJ,CAED,UAAU+W,EAAU/W,EAAMuY,EAAS,CAE/B,OAAIvY,EAAK,SAAS,SAAS+W,CAAQ,GAC/BwB,EAAQ,KAAKvY,EAAK,QAAQ,EAG1BA,EAAK,MAAQ4X,GAAO5X,EAAK,KAAK,KAAO+W,EAAS,KAC9C,KAAK,UAAUA,EAAU/W,EAAK,KAAMuY,CAAO,EAG3CvY,EAAK,OAAS4X,GAAO5X,EAAK,MAAM,KAAO+W,EAAS,MAChD,KAAK,UAAUA,EAAU/W,EAAK,MAAOuY,CAAO,EAGzCA,CACV,CAED,WAAWzhB,EAAG,CACV,IAAInM,EAAImM,EAAE,MACVA,EAAE,MAAQnM,EAAE,KACRA,EAAE,MAAQitB,IACVjtB,EAAE,KAAK,OAASmM,GAEpBnM,EAAE,OAASmM,EAAE,OACTA,EAAE,QAAU8gB,EACZ,KAAK,KAAOjtB,EAERmM,EAAE,OAAO,MAAQA,EACjBA,EAAE,OAAO,KAAOnM,EAEhBmM,EAAE,OAAO,MAAQnM,EAGzBA,EAAE,KAAOmM,EACTA,EAAE,OAASnM,EAEX,KAAK,YAAYmM,CAAC,CAGrB,CAGD,YAAYA,EAAG,CACX,IAAInM,EAAImM,EAAE,KACVA,EAAE,KAAOnM,EAAE,MACPA,EAAE,OAASitB,IACXjtB,EAAE,MAAM,OAASmM,GAErBnM,EAAE,OAASmM,EAAE,OACTA,EAAE,QAAU8gB,EACZ,KAAK,KAAOjtB,EAERmM,EAAE,OAAO,OAASA,EAClBA,EAAE,OAAO,MAAQnM,EAEjBmM,EAAE,OAAO,KAAOnM,EAGxBA,EAAE,MAAQmM,EACVA,EAAE,OAASnM,EAGX,KAAK,YAAYmM,CAAC,CAGrB,CAQF,WAAWA,EAAG,CAGT,QAFIkJ,EAAO,KAAK,KACZrV,EAAIitB,EACD5X,GAAQ4X,GACXjtB,EAAIqV,EACAlJ,EAAE,SAAS,KAAOkJ,EAAK,SAAS,IAChCA,EAAOA,EAAK,KAEZA,EAAOA,EAAK,MAGpBlJ,EAAE,OAASnM,EAEPA,GAAKitB,GACL,KAAK,KAAO9gB,EACZA,EAAE,KAAOA,EAAE,MAAQ8gB,GAEf9gB,EAAE,SAAS,KAAOnM,EAAE,SAAS,IAC7BA,EAAE,KAAOmM,EAETnM,EAAE,MAAQmM,EAIlB,KAAK,YAAYA,CAAC,CACrB,CAID,YAAakJ,EAAM,CACf,KAAOA,GAAQ4X,GAAK,CAChB,IAAIY,EAAUxY,EAAK,KAAK,IAAMA,EAAK,MAAM,IAAMA,EAAK,KAAK,IAAMA,EAAK,MAAM,IACtEyY,EAAezY,EAAK,SAAS,KACjCA,EAAK,IAAMwY,EAAUC,EAAeD,EAAUC,EAE9C,IAAIC,EAAU1Y,EAAK,KAAK,IAAMA,EAAK,MAAM,IAAMA,EAAK,KAAK,IAAMA,EAAK,MAAM,IACtE2Y,EAAc3Y,EAAK,SAAS,IAChCA,EAAK,IAAM0Y,EAAUC,EAAcD,EAAUC,EAE7C3Y,EAAOA,EAAK,MACf,CACJ,CAEL,CAGA,MAAM6X,EAAS,CACX,YAAYe,EAAKC,EAAM5pB,EAAO,CAC1B,KAAK,IAAM2pB,EACX,KAAK,KAAOC,EACZ,KAAK,MAAQ5pB,CAChB,CAGD,OAAO6pB,EAAO,CACV,OAAKA,EAGD,MAAQA,EACD,GAEH,KAAK,KAAO,cAAc,KAC9B,KAAK,MAAQ,cAAc,KANpB,EAQd,CAGD,UAAUA,EAAO,CACb,OAAI,KAAK,IAAMA,EAAM,IACV,GACP,KAAK,IAAMA,EAAM,IACV,EAEP,KAAK,KAAOA,EAAM,KACX,GACP,KAAK,KAAOA,EAAM,KACX,EAEJ,CACV,CAKD,SAASA,EAAO,CACZ,GAAI,CACA,OAAQ,KAAK,KAAOA,EAAM,MAAQA,EAAM,KAAO,KAAK,IACvD,OAAQpvB,EAAG,CAER,IAAI,aAAaA,CAAC,CACrB,CACJ,CACL,CAEA,MAAMouB,EAAI,CACN,YAAYf,EAAU,CAClB,KAAK,OAASa,EACd,KAAK,KAAOA,EACZ,KAAK,MAAQA,EACb,KAAK,SAAWb,EAChB,KAAK,MAAQY,EAChB,CACL,CAEA,MAAMrG,EAAe,CAEpB,YAAYnV,EAAKxT,EAAOye,EAAKjK,EAAU,CAChC,KAAK,IAAMhB,EACX,KAAK,MAAQxT,EACb,KAAK,IAAMye,EACX,KAAK,SAAWjK,CACnB,CAED,SAAUhB,EAAKxT,EAAOye,EAAK,CACvB,OAAO,KAAK,KAAOjL,GACf,KAAK,OAASxT,GACd,KAAK,KAAOye,CACnB,CAED,cAAc7N,EAAO,CACjB,OAAO,KAAK,MAAQA,EAAM,KACtB,KAAK,OAASA,EAAM,OACpB,KAAK,KAAOA,EAAM,GACzB,CACD,YAAYA,EAAM,CACd,IAAIwf,EAAY,GACZC,EAAO,CAAA,EAqBX,OApBI,KAAK,MAAQzf,EAAM,KACnByf,EAAO,IAAI,CAACzf,EAAM,MAAMA,EAAM,GAAG,EACjCwf,EAAY,GACZ,KAAK,MAAMxf,EAAM,MACjB,KAAK,IAAIA,EAAM,MAIXA,EAAM,MAAM,KAAK,QACjByf,EAAO,KAAK,CAACzf,EAAM,MAAM,KAAK,KAAK,EACnCwf,EAAY,GACZ,KAAK,MAAMxf,EAAM,OAGjBA,EAAM,IAAI,KAAK,MACfyf,EAAO,MAAM,CAAC,KAAK,IAAIzf,EAAM,GAAG,EAChCwf,EAAY,GACZ,KAAK,IAAIxf,EAAM,MAGlBwf,EAGEC,EAFI,EAGd,CACL,CAIA,MAAM5L,EAAa,CAEf,YAAYpU,EAAK,CAEb,KAAK,KAAOA,EACZ,KAAK,QAAU,GACX,KAAK,UACL,KAAK,UAAY,KAAK,KAAO,OAIpC,CAEF,MAAM,CAED,IAAIyC,EAAO,KAEX,OAAIA,EAAK,QAEE,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAE1CsC,EAAK,SAAQ,EAAG,KAAK,SAAUpU,EAAO,CAClC,IAAI4xB,EAAQ,EACZxd,EAAK,YAAc,GACnBA,EAAK,gBAAgB,QAAQ,SAAUyd,EAAS,CAC5C,IAAIC,EAAW1d,EAAK,MAAMyd,CAAO,EAAE,KACnCzd,EAAK,YAAYyd,CAAO,EAAI,IAAI,IAAI,WAAWA,EAASD,IAASE,CAAQ,CACjG,CAAqB,EAIDjgB,GACpB,CAAiB,EAAE,MAAMC,CAAM,CAC/B,CAAa,EAGMsC,EAAK,SAGnB,CAED,YAAYU,EAAKxT,EAAOye,EAAK,CAEzB,OAAI,KAAK,QACE,KAAK,mBAAmBjL,EAAKxT,EAAOye,CAAG,EAGvC,sBAAsB,KAAKjL,EAAKxT,EAAOye,CAAG,CAIxD,CAED,mBAAmBjL,EAAKxT,EAAOye,EAAK,CAEhC,IAAI3L,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAC1C,IAAI4d,EAAWtb,EAAK,SAEpB,GAAIsb,GAAYA,EAAS,SAAS5a,EAAKxT,EAAOye,CAAG,EAE7ClO,EAAQkgB,EAAwBrC,EAAUpuB,EAAOye,CAAG,CAAC,MAEpD,CAKD,IAAIiS,EAAS1wB,EACT2wB,EAAOlS,EACX,GAAKA,EAAMze,EAAS,IAAQ,CACxB,IAAIjC,EAAK0gB,EAAMze,EACX4wB,EAAS,KAAK,MAAM5wB,EAAQjC,EAAI,CAAC,EACrC2yB,EAAS,KAAK,IAAI,EAAGE,EAAS,GAAK,EACnCD,EAAOC,EAAS,GACnB,CAGD9d,EAAK,aAAaU,EAAKkd,EAAQC,CAAI,EAAE,KAAK,SAAUjP,EAAU,CAC1D5O,EAAK,SAAW,IAAI6V,GAAgBnV,EAAKkd,EAAQC,EAAMjP,CAAQ,EAC/DnR,EAAQkgB,EAAwB3d,EAAK,SAAU9S,EAAOye,CAAG,CAAC,CAC9E,CAAiB,EAAE,MAAMjO,CAAM,CAClB,CAED,SAASigB,EAAwBrC,EAAUpuB,EAAOye,EAAK,CACnD,IAAI9Z,EAAS3E,EAAQouB,EAAS,MAC1BvvB,EAAI4f,EAAMze,EACV6jB,EAAMuK,EAAS,SAAWA,EAAS,SAAS,OAAOzpB,EAAQ9F,CAAC,EAAI,KACpE,OAAOglB,CACV,CACb,CAAS,CACJ,CAGD,sBAAsBrQ,EAAKxT,EAAOye,EAAK,CAEnC,IAAI3L,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAC1C,IAAIqT,EAAM/Q,EAAK,UAAUU,CAAG,EACxBqQ,GAAOA,EAAI,OAASpF,GACpBlO,EAAQsT,EAAI,UAAU7jB,EAAOye,CAAG,CAAC,CAEjD,CAAS,CAEJ,CAED,UAAW,CAEP,IAAI3L,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAEtCsC,EAAK,MACLvC,EAAQuC,EAAK,KAAK,EAElB1C,EAAO,KAAK0C,EAAK,UAAU,CAAA,CAAE,EAAE,KAAK,SAAU/H,EAAM,CAChD,IAAIogB,EAAQpgB,EAAK,MAAM;AAAA,CAAI,EACvB5D,EAAMgkB,EAAM,OACZ0F,EAAS,EAIb,IAFA/d,EAAK,gBAAkB,GACvBA,EAAK,MAAQ,GACN+d,EAAS1pB,GAAK,CAEjB,IAAI0O,EAASsV,EAAM0F,GAAQ,EAAE,MAAM,GAAI,EACnCC,EAAUjb,EAAO,OACrB,GAAIib,GAAW,EAAG,CAEd,IAAItd,EAAMqC,EAAO,CAAC,EACd9R,EAAO,SAAS8R,EAAO,CAAC,CAAC,EACzBnL,EAAW,SAASmL,EAAO,CAAC,CAAC,EAC7Bkb,EAAe,SAASlb,EAAO,CAAC,CAAC,EACjCmb,EAAe,SAASnb,EAAO,CAAC,CAAC,EAEjCob,EAAa,CACb,KAAMltB,EAAM,SAAU2G,EAAU,aAAcqmB,EAAc,aAAcC,CAC1G,EAE4Ble,EAAK,gBAAgB,KAAKU,CAAG,EAC7BV,EAAK,MAAMU,CAAG,EAAIyd,CACrB,CACJ,CAEG1gB,GACAA,EAAQuC,EAAK,KAAK,CAE1C,CAAiB,EAAE,MAAMtC,CAAM,CAE/B,CAAS,CACJ,CAED,SAAS,CAEL,IAAIsC,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAC1CsC,EAAK,gBAAkB,GACvBA,EAAK,YAAc,GACnBA,EAAK,UAAY,GAEjB1C,EAAO,KAAK0C,EAAK,KAAM,CACnB,gBAAiBA,EAAK,eAEtC,CAAa,EAAE,KAAK,SAAU/H,EAAM,CAWpB,QATIogB,EAAQpgB,EAAK,WAAY,EACzB5D,EAAMgkB,EAAM,OACZ0F,EAAS,EACTK,EACAC,EAAa,GACbC,EACAd,EAAQ,EAGLO,EAAS1pB,GACZ+pB,EAAW/F,EAAM0F,GAAQ,EAAE,KAAI,EAC3B,EAAAK,EAAS,WAAW,GAAG,GAAKA,EAAS,SAAW,KAG3CA,EAAS,WAAW,GAAG,GACxBC,IACAre,EAAK,gBAAgB,KAAKse,CAAU,EACpCte,EAAK,UAAUse,CAAU,EAAID,EAC7Bre,EAAK,YAAYse,CAAU,EAAI,IAAI,IAAI,WAAWA,EAAYd,IAASa,EAAW,MAAM,GAE5FC,EAAaF,EAAS,OAAO,CAAC,EAAE,MAAM,MAAM,EAAE,CAAC,EAC/CC,EAAa,IAGbA,GAAcD,GAItB3gB,GAEhB,CAAa,CACb,CAAS,CACJ,CAED,aAAaiD,EAAKkd,EAAQC,EAAM,CAG5B,IAAI7d,EAAO,KAEX,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CAC1CsC,EAAK,WAAW,KAAK,UAAY,CAE7B,IAAIue,EAAWve,EAAK,MAAMU,CAAG,EAC7B,GAAI,CAAC6d,EACD,QAAQ,IAAI,2BAA6B7d,CAAG,EAG5CV,EAAK,SAAW,IAAI6V,GAAgBnV,EAAKkd,EAAQC,EAAM,IAAI,EAC3DpgB,EAAQ,IAAI,MAET,CAEH,IAAIvQ,EAAQ,KAAK,IAAI,EAAG0wB,CAAM,EAC1BjS,EAAM,KAAK,IAAI4S,EAAS,KAAMV,CAAI,EAClCK,EAAeK,EAAS,aACxBN,EAAeM,EAAS,aACxB3mB,EAAW2mB,EAAS,SACpBC,EAAYN,EAAeD,EAE3BQ,EAAY,KAAK,MAAMvxB,EAAQ+wB,CAAY,EAC3CS,EAAU,KAAK,MAAM/S,EAAMsS,CAAY,EAEvCU,EAAQF,EAAYR,EAEpBpsB,EAAS3E,EAAQyxB,EAEjBC,EAAYhnB,EAAW6mB,EAAYP,EAAersB,EAElDgtB,EAAQH,EAAUT,EAClBa,EAAUnT,EAAMkT,EAChBE,EAAUnnB,EAAW8mB,EAAUR,EAAeY,EAAU,EACxDE,EAAYD,EAAUH,EAAY,EAClCI,GAAa,GACbvhB,EAAQ,IAAI,EAGhBH,EAAO,KAAK0C,EAAK,KAAM,CACnB,MAAO,CAAC,MAAO4e,EAAW,KAAMI,CAAS,CACjE,CAAqB,EAAE,KAAK,SAAUC,EAAU,CAErB,IAACC,EACAtQ,EAAW,GACXuQ,EAAS,EAETC,EAAiBH,EAAS,OAS9B,IAPIptB,EAAS,IACTqtB,EAAS,KAAK,IAAIvT,EAAMze,EAAO+wB,EAAepsB,CAAM,EACpD+c,GAAYqQ,EAAS,OAAOE,EAAQD,CAAM,EAC1CC,GAAWD,EAASV,GAIjBW,EAASC,GACZF,EAAS,KAAK,IAAIjB,EAAcmB,EAAiBD,CAAM,EACvDvQ,GAAYqQ,EAAS,OAAOE,EAAQD,CAAM,EAC1CC,GAAWD,EAASV,EAIxB/gB,EAAQmR,CAAQ,CACxC,CAAqB,EAAE,MAAMlR,CAAM,CAClB,CACjB,CAAa,EAAE,MAAMA,CAAM,CAC3B,CAAS,CACJ,CACL,CCrgEA,MAAM2hB,CAAQ,CACb,YAAY1f,EAAO,CAClB,KAAK,OAAOA,CACZ,CAED,mBAAmB,CAElB,CAED,UAAU2f,EAAI,CAEb,CAED,WAAW,CACV,OAAO,KAAK,MAAM,KAAK,UAAU,KAAK,MAAM,CAAC,CAC7C,CAED,mBAAmBC,EAAU/rB,EAAM,CAC5B,GAAIA,GAAS,KAAK,CACd,OAAO,KAAK,OAAO+rB,CAAS,EAC5B,MACH,CACP,KAAK,OAAOA,CAAS,EAAE/rB,EAChB+rB,IAAY,OACf,KAAK,kBAAiB,CAEvB,CAED,iBAAiB3C,EAAK,CACxB,KAAK,eAAeA,CACpB,CACE,aAAarJ,EAAiB7S,EAAI8e,EAAS3d,EAAW,CACrD,OAAO,IACP,CAED,UAAUlC,EAAO,CACZ,KAAK,OAAO,MAAQA,EAAO,KAC9B,KAAK,OAAOA,EACZ,KAAK,kBAAiB,GAGtB,KAAK,kBAAiB,CAEvB,CAYJ,YAAae,EAAKC,EAASC,EAAMgV,EAAM3d,EAAM,CAC5C,OAAO,KAAK,eAAe,YAAYyI,EAAIC,EAAQC,EAAMgV,EAAM3d,CAAI,CACnE,CAGE,YAAYwnB,EAAM,CACd,MAAO,CACH,CACI,KAAK,OACL,MAAM,QACN,cAAc,KAAK,OAAO,YAC1B,KAAKpkB,GAAG,CACJ,KAAK,mBAAmB,cAAcA,CAAC,EACvCokB,EAAM,OAAM,CACf,CAEJ,EACD,CACI,KAAK,SACL,IAAI,GACJ,IAAI,IACJ,MAAM,SACN,cAAc,KAAK,OAAO,OAC1B,KAAKpkB,GAAG,CACJ,KAAK,mBAAmB,SAASA,CAAC,EAClCokB,EAAM,OAAM,CAEf,CACJ,EACD,CACI,KAAK,eACL,MAAM,QACN,cAAc,KAAK,OAAO,MAC1B,KAAKpkB,GAAG,CACJ,KAAK,mBAAmB,QAAQA,CAAC,EACjCokB,EAAM,OAAQ,CAEjB,CACJ,EACD,CACI,KAAK,SACL,MAAM,SACN,KAAK,IAAI,CACLA,EAAM,YAAY,KAAK,OAAO,QAAQ,CACzC,CACJ,CACJ,CACJ,CAGJ,OAAO,eAAeliB,EAAI,CACrB,OAAOA,GAAQ,WAClBA,EAAMA,EAAI,CAAC,GAEZ,IAAImQ,EAAKnQ,EAAI,MAAM,GAAG,EAClBmiB,EAAOhS,EAAIA,EAAI,OAAO,CAAC,EAC3B,OAAAA,EAAKgS,EAAM,MAAM,GAAG,EACpBA,EAAQhS,EAAI,CAAC,EACNgS,CACP,CAED,iBAAiB9Y,EAAI6Y,EAAM,CAC1B,CAED,OAAO,eAAeliB,EAAI,CACzB,IAAIoC,EAAO,CAAE,EACb,OAAI,OAAOpC,GAAQ,WAGdA,EAAI,SAAS,IAAI,GACpBoC,EAAO,KAAK,SACZA,EAAO,OAAO,OAGNpC,EAAI,SAAS,SAAS,GAC9BoC,EAAO,KAAK,MACZA,EAAO,OAAO,WAGNpC,EAAI,SAAS,KAAK,GAAK,CAAEoC,EAAO,MACxCA,EAAO,KAAK,SACZA,EAAO,OAAO,WAGNpC,EAAI,SAAS,QAAQ,GAC7BoC,EAAO,KAAK,QACZA,EAAO,OAAO,YAENpC,EAAI,SAAS,MAAM,IAC3BoC,EAAO,KAAK,MACZA,EAAO,OAAO,cAETA,CAEP,CAED,OAAO,YAAYggB,EAAI,CACtB,IAAIhgB,EAAS,KAAK,MAAM,KAAK,UAAUggB,CAAG,CAAC,EAE3C,GAAI,CAAEhgB,EAAO,MAASA,EAAO,IAAI,CAChC,IAAIigB,EAAOP,EAAS,eAAe1f,EAAO,GAAG,EACzCigB,EAAK,OACRjgB,EAAO,KAAKigB,EAAK,KACjBjgB,EAAO,OAAOigB,EAAK,OAEpB,CACD,OAAIjgB,EAAO,OAAO,OAASA,EAAO,OAAO,YACxCA,EAAO,OAAO,WAEX,CAACA,EAAO,aAAeA,EAAO,MACjCA,EAAO,YAAY0f,EAAS,eAAe1f,EAAO,GAAG,GAGjDA,EAAO,WACXA,EAAO,SAASA,EAAO,KAGpBA,EAAO,SAAS,YACnBA,EAAO,YAAcA,EAAO,aAAe,YACrCA,EAAO,iBAAmB,QAC1BA,EAAO,mBAAqBA,EAAO,oBAAsB,GACzDA,EAAO,mBAAqBA,EAAO,oBAAsB,GACzDA,EAAO,cAAcA,EAAO,eAAiB,KAIhDA,EAAO,SAAS,OAASA,EAAO,OAAO,YACrCA,EAAO,QACXA,EAAO,MAAM,WAETA,EAAO,QACXA,EAAO,MAAM,GAETA,EAAO,QACXA,EAAO,MAAM,KAETA,EAAO,SACXA,EAAO,OAAO,MAGZA,EAAO,OAAO,QACZA,EAAO,gBACXA,EAAO,cAAc,KAGlBA,EAAO,SACXA,EAAO,OAAO,KAGVA,EAAO,OACPA,EAAO,OAAO,QACjBA,EAAO,MAAM,WAMVA,EAAO,UACXA,EAAO,QAAQ,GAGTA,CACP,CAEE,YAAYnC,EAAQ,CAChB,MAAM8hB,EAAM9hB,EAAQ,QACpB8hB,EAAI,KAAI,EACRA,EAAI,KAAK,eACT,MAAMO,EAAMP,EAAI,YAAY9hB,EAAQ,QAAQ,EACtCtO,EAAGsO,EAAQ,IAAKA,EAAQ,OAAO,EAAG,GACxC8hB,EAAI,UAAY9hB,EAAQ,UACxB,QAASnC,EAAE,EAAEA,EAAEmC,EAAQ,WAAWnC,GAAGwkB,EAAI,MAAM,GAC3CP,EAAI,SAAS9hB,EAAQ,SAAUnC,EAAGnM,CAAC,EAEvCowB,EAAI,QAAO,CACd,CAMJ,OAAO,SAAS3f,EAAO,CACtBA,EAAO0f,EAAS,YAAY1f,CAAM,EAClC,IAAImgB,EAAIT,EAAS,YAAY1f,EAAO,IAAI,EACxC,GAAI,CAACmgB,EACJ,MAAM,IAAI,MAAM,cAAengB,EAAO,KAAK,iBAAiB,EAI7D,OAAO,IAAImgB,EAAG,MAASngB,CAAM,CAE7B,CAEF,CAEA0f,EAAS,cAAc,CAAA,EAEvBA,EAAS,YAAY,CAAE,EASvB,MAAMU,WAAmBV,CAAQ,CAChC,YAAY1f,EAAO,CACbA,IACJA,EAAO,CAAC,SAAW,QAAQogB,GAAW,MAAM,OAAO,QAAQ,YAAY,QAAQ,KAAK,OAAO,GAE5F,MAAMpgB,CAAM,EACN,KAAK,OAAS,GACd,KAAK,OAAO,OAAO,GACnB,KAAK,KAAO,GAEZ,KAAK,eAAiB,GACtB,KAAK,gBAAkB,GACvB,KAAK,MAAQ,CAAC,OAAO,UAErBogB,GAAW,OACd,CAED,YAAYrf,EAAKC,EAASC,EAAO,CAE7B,OAAO,IAAI,QAAQ,SAAUnD,EAASC,EAAQ,CAC1CD,EAAQ,CAAE,CAAA,CACtB,CAAS,CACJ,CAED,aAAaD,EAAS,CAElB,MAAM8hB,EAAM9hB,EAAQ,QACdwiB,EAAY,CAAE,UAAW,SAAU,KAAM,eAAgB,UAAWxiB,EAAQ,UAAW,YAAaA,EAAQ,SAAS,EAErHM,EAAQ,KAAK,MAAM,KAAON,EAAQ,UAAU,EAC5CyiB,EAAKF,GAAW,YAAYjiB,CAAK,EACjCoiB,EAAUD,EAAG,UAGnB,IAAIE,EAAQ,KAAK,MAAM3iB,EAAQ,QAAU0iB,CAAO,EAAI,EAChD7kB,EAAI,EACV+kB,EAAM5iB,EAAQ,IAAI,KAAK,OAErB6iB,EAAS,cAAcf,EAAKU,GAC5B,MAAMM,EAAO,EACb,KAAOjlB,EAAImC,EAAQ,YAAY,CAE3B,MAAMzO,EAAI,KAAK,MAAMoxB,EAAQD,CAAO,EAEpC7kB,EAAI,KAAK,OAAQtM,EAAI,EAAKyO,EAAQ,QAAU,IAAOA,EAAQ,UAAU,EACrE,MAAM+iB,EAAcC,EAAazxB,EAAIkxB,EAAG,eAAgB,CAAC,EAAI,IAAMA,EAAG,UAElEE,EAAQ,GAAK,GACbE,EAAS,SAASf,EAAKiB,EAAallB,EAAG+kB,EAAQ,EAAE,EAGrDC,EAAS,WAAWf,EAAKjkB,EAAG+kB,EAAQ,GAAI/kB,EAAG+kB,EAAQE,CAAI,EAEvDH,GACH,CACDE,EAAS,WAAWf,EAAK,EAAGc,EAAQE,EAAM9iB,EAAQ,WAAY4iB,EAAQE,CAAI,EAG1E,SAASE,EAAaC,EAAQC,EAAS,CAInC,IAAIC,EAAU,GACd,OAAQD,EAAO,CACX,IAAK,GACDC,EAAU,EACV,MACJ,IAAK,GACDA,EAAU,GACV,MACJ,IAAK,GACDA,EAAU,IACV,MACJ,QACIA,EAAU,GACjB,CAID,IAAIC,EAAU,GAFE,KAAK,IAAK,KAAK,MAAMH,EAASE,CAAO,EAAIA,GAIrDC,EAAQ,QAAQ,GAAG,GAAK,KACxBA,GAAW,KAGf,IAAIC,EAAOD,EAAQ,UAAU,EAAGA,EAAQ,QAAQ,GAAG,CAAC,EACpD,MAAME,EAAOD,EAAO,EACpB,IAAIE,EAAOH,EAAQ,UAAUA,EAAQ,QAAQ,GAAG,CAAC,EAEjD,KAAOG,EAAK,OAAS,EAAIL,GACrBK,GAAQ,IAMZ,GAHIA,GAAQ,MAAKA,EAAO,IAGpBD,GAAQ,IAAM,CACd,IAAIE,EAAOH,EAAK,OAChBA,EAAO,SAAS,GAAMC,EAAO,GAAK,EAAI,IAAMD,EAAK,UAAUG,EAAO,EAAGA,CAAI,CAC5E,CAGGF,GAAQ,MACRE,EAAOH,EAAK,OACZA,EAAO,SAAS,GAAMC,EAAO,GAAQ,EAAI,IAAMD,EAAK,UAAUG,EAAO,EAAGA,CAAI,GAEhF,IAAIC,EAASJ,EAAOE,EAEpB,OAAIN,EAAS,IACTQ,EAAS,IAAMA,EAAS,KAKrBA,CACV,CACD,OAAOb,CAGV,CACD,OAAO,YAAYc,EAAU,CAEzB,GAAIA,EAAW,GACX,OAAO,IAAIC,GAAY,EAAG,GAAI,CAAC,EAKnC,IAAIC,EAAU,KAAK,MAAMC,EAAMH,CAAQ,CAAC,EACpCI,EAAY,GACZC,EAAiB,EACjBH,EAAU,IACVE,EAAY,KACZC,EAAiB,KAEjBH,EAAU,GACVE,EAAY,KACZC,EAAiB,KACVH,EAAU,IACjBE,EAAY,KACZC,EAAiB,KAGrB,IAAIC,EAAcN,EAAW,KAAK,IAAI,GAAIE,EAAU,CAAC,EACrD,GAAII,EAAc,GACd,OAAO,IAAIL,GAAY,KAAK,IAAI,GAAIC,EAAU,CAAC,EAAGE,EAAWC,CAAc,EAE3E,OAAO,IAAIJ,GAAY,KAAK,IAAI,GAAIC,CAAO,EAAI,EAAGE,EAAWC,CAAc,EAG/E,SAASF,EAAMhmB,EAAG,CACd,IAAIomB,EAAK,KAAK,IAAI,EAAE,EACpB,OAAO,KAAK,IAAIpmB,CAAC,EAAIomB,CACxB,CACJ,CAEL,CAEA1B,GAAW,MAAM,EAEjBV,EAAS,YAAY,MAAS,CAC7B,MAAQU,GACR,KAAK,OAEN,EAEA,MAAMoB,EAAW,CAChB,YAAYO,EAAWJ,EAAWC,EAAgB,CAC3C,KAAK,UAAYG,EACjB,KAAK,UAAYJ,EACjB,KAAK,eAAiBC,CACzB,CAEL,CAGA,MAAMI,WAAoBtC,CAAQ,CACjC,YAAY1f,EAAO,CAClB,MAAMA,CAAM,EACZ,KAAK,kBAAiB,EACtB,KAAK,gBAAgB,KACrB,KAAK,eAAe,IAEpB,CAED,mBAAmB,CAClB,KAAK,eAAgB,IAAIgX,GAAsB,KAAK,MAAM,CAC1D,CAED,kBAAkBiG,EAAK,CACtB,KAAK,gBAAgBA,CACrB,CAGD,mBAAmBlc,EAAIxT,EAAMye,EAAI,CAChC,OAAO,KAAK,eAAe,aAAa,cAAcjL,EAAIxT,EAAMye,CAAG,CACnE,CAED,aAAanO,EAAS,CACrB,IAAIokB,EAAU,EACL,IACFC,EACG1L,EAAc3Y,EAAQ,SACtB8hB,EAAM9hB,EAAQ,QACdqE,EAAarE,EAAQ,WACrBmD,EAAUnD,EAAQ,QAClBskB,EAAatkB,EAAQ,WACPA,EAAQ,YAEtB,IAAAoD,EAAQD,EAAUmhB,EAAajgB,EAAa,EACrD,IAAIiF,EAAI,EACAtJ,EAAQ,MACRsJ,EAAItJ,EAAQ,KAEf,KAAK,IAAIsJ,EACT,IAAIib,EAAO,KAAK,OACZC,EAAU,EACVC,EAAWD,EAAUF,EAEzB,KAAK,OAAO,mBAAqB,KAAK,OAAO,cAAc,GAC3D,KAAK,OAAO,mBAAsB,KAAK,OAAO,cAAc,EAAG,EAC/D,IAAII,EAAG,KAOP,GANI/L,EAAY,OAAO,MACtB+L,EAAG,KAAK,MAAM/L,EAAY,OAAO,GAAK,EAAE,GAKrCA,EAAa,CAChB,IAAIgM,EAAU,KAAK,OAAO,QAAQ,KAAK,OAAO,QAAQ,EACtD7C,EAAI,YAAY6C,EAEb,QAASC,EAAMr1B,EAAI,EAAGsH,EAAM8hB,EAAY,OAAQppB,EAAIsH,EAAKtH,IAAK,CAC7D,GAAIm1B,GAAMn1B,EAAEm1B,IAAK,EAChB,SAGE,GADAE,EAAOjM,EAAYppB,CAAC,EAChB,KAAK,iBAAmB,CAAC,KAAK,gBAAgBq1B,CAAI,EAAE,CACvDA,EAAK,QAAQ,GACb,QACA,CAED,GADAA,EAAK,QAAQ,GACTA,EAAK,IAAMzhB,EAAS,SACxB,GAAIyhB,EAAK,MAAQxhB,EAAO,MACxB,IAAIyhB,EAAQ,KAAK,4BAA4BD,EAAMzhB,EAAQkB,CAAU,EACjE/S,EAAIizB,EAAK,cACTA,EAAK,cAAgB,YAAcK,EAAK,KAAO,MACrDtzB,EAAIizB,EAAK,cAAgB,EACzBF,EAAKE,EAAK,mBAAqBK,EAAK,IAAM,GACnCL,EAAK,cAAgB,YAAcK,EAAK,KAAO,KACtDP,EAAKE,EAAK,mBAAqBK,EAAK,IAAM,EAGzCP,EAAK,EAEVA,GAAI/a,EACA+a,EAAG/yB,EAAE8yB,IACRA,EAAUC,EAAG/yB,GAEduzB,EAAM,GAAGR,EACTQ,EAAM,EAAEvzB,EACR,IAAI8wB,EAAK,CAAC,WAAW/d,EAAW,QAAQlB,EAAQ,WAAWmhB,CAAU,EACjE,KAAK,iBACRM,EAAK,MAAM,KAAK,eAAeA,CAAI,GAG9B,KAAK,cAAcA,EAAKC,EAAM/C,EAAIM,EAAKpiB,EAAQ,SAAS,EACxD,KAAK,mBAAmB8hB,EAAK8C,EAAMC,EAAM,GAAIA,EAAM,IAAKR,EAAIG,EAASC,EAASzkB,EAAQ,SAAS,CAClG,CACD8hB,EAAI,YAAY,CACnB,MAEG,QAAQ,IAAI,iBAAiB,EAEjC,YAAK,OAAOsC,EACR,KAAK,OAAO,cAAc,cAC7BA,GAAW,IAERA,CACP,CAmBJ,mBAAmBtC,EAAKtc,EAASsf,EAAUC,EAAWC,EAAUR,EAASC,EAASQ,EAAc,CAC/F,IAAI7C,EAAO,KAAK,OACV,IAAI8C,EAAeC,EACfC,EAAMC,EACNC,EAAQC,EACRC,EAGAT,EAAYP,GAAWM,EAAWL,GAClCW,EAAON,EACPO,EAAQN,IAGRK,EAAO,KAAK,IAAIN,EAAUN,CAAO,EACjCa,EAAQ,KAAK,IAAIN,EAAWN,CAAQ,GAGxC,IAAIgB,EAAMjgB,EAAQ,KACd,KAAK,iBACRigB,EAAK,KAAK,eAAejgB,CAAO,GASjCggB,EAAiBH,EAAQD,EAAQtD,EAAI,YAAY2D,CAAI,EAAE,MAGlDD,GAAkBpD,EAAK,aAAe,YAAcqD,IACrDP,EAAgB,CACZ,KAAM,eACN,UAAW,SACX,UAAW9C,EAAK,OAAS6C,EACzB,YAAa7C,EAAK,OAAS6C,CAC3C,EAEgB7C,EAAK,cAAgB,aAAeA,EAAK,mBAAqB,UAC9D+C,EAAY,CAAC,OAAQ,CAAC,MAAO,EAAE,CAAC,EAChC,OAAOD,EAAc,WAGzBI,EAASF,GAASC,EAAQD,GAAQ,EAClCG,EAASG,EAAiBV,EAAUG,CAAS,EAE7CtC,EAAS,SAASf,EAAK2D,EAAMH,EAAQC,EAAQL,EAAeC,CAAS,GAEzE,SAASO,EAAiBV,EAAUG,EAAW,CAC9C,OAAOA,EAAYH,EAAW5C,EAAK,cAAc,GAAK4C,EAAW5C,EAAK,cAAc,CACvF,CACD,CAIJ,4BAA4B5c,EAASrC,EAASwiB,EAAQ,CAClD,IAAIC,EAAK,KAAK,OAAOpgB,EAAQ,MAAM,EAAIrC,GAAWwiB,CAAM,EACrDE,EAAM,KAAK,OAAOrgB,EAAQ,IAAMrC,GAAWwiB,CAAM,EACjDG,EAAKD,EAAMD,EAEX,OAAIE,EAAK,IACRA,EAAK,EACFF,GAAM,GAGH,CACN,GAAIA,EACD,IAAKC,EACL,GAAIC,CAChB,CACE,CAcD,cAActgB,EAASqf,EAAM/C,EAAIM,EAAK6C,EAAa,CAClD,IAAIx0B,EAAEoN,EAAGkoB,EAAIC,EAAWlK,EAAMmK,EAAKC,EAAMC,EAAMC,EAAKC,EAAKC,EAC/CnL,EAAO,GACPkC,EAAQ,KAAK,OAAO,OAAS4H,EAC7Bzf,EAAQ,QACR6X,EAAQ7X,EAAQ,OAGpBsc,EAAI,UAAYzE,EAChByE,EAAI,YAAczE,EAGlB0I,EAAKlB,EAAM,GAAKA,EAAM,EAAI,EAC1ByB,EAAKzB,EAAM,EAAI,EACfwB,EAAMN,EAAKO,EAAK,EAEtB,IAAI5K,EAAYlW,EAAQ,MAAQA,EAAQ,MAAM,OAAS,EACtD,GAAIkW,GAAa,EAEPoG,EAAI,SAAS+C,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,CAAC,MAEnD,CASA,IAPAA,EAAM,GAAG,KAAK,IAAIA,EAAM,GAAG,CAAC,EAC5BA,EAAM,IAAI,KAAK,IAAIA,EAAM,IAAIzC,EAAK,UAAU,EAC5CS,EAAS,WAAWf,EAAK+C,EAAM,GAAK,EAAGkB,EAAIlB,EAAM,IAAM,EAAGkB,CAAE,EAC5DC,EAAYxgB,EAAQ,QAAU,IAAM,EAAI,GAIlC3H,EAAEgnB,EAAM,GAAK1J,EAAO,EAAGtd,EAAKgnB,EAAM,IAAKhnB,GAAKsd,EAG9C0H,EAAS,WAAWf,EAAKjkB,EAAImoB,EAAY,EAAGD,EAAK,EAAGloB,EAAGkoB,CAAE,EACzDlD,EAAS,WAAWf,EAAKjkB,EAAImoB,EAAY,EAAGD,EAAK,EAAGloB,EAAGkoB,CAAE,EAE7D,IAAKt1B,EAAI,EAAGA,EAAIirB,EAAWjrB,IAOvB,GALAqrB,EAAOtW,EAAQ,MAAM/U,CAAC,EACtBw1B,EAAM,KAAK,OAAOnK,EAAK,MAAQsG,EAAK,SAAWA,EAAK,UAAU,EAC9D8D,EAAO,KAAK,OAAOpK,EAAK,IAAMsG,EAAK,SAAWA,EAAK,UAAU,EAC7DgE,EAAM,KAAK,IAAI,EAAGF,EAAOD,CAAG,EAExBnK,EAAK,IACLgG,EAAI,SAASmE,EAAKI,EAAKD,EAAKE,CAAE,UAG1BxK,EAAK,UACLqK,EAAO,KAAK,OAAOrK,EAAK,QAAUsG,EAAK,SAAWA,EAAK,UAAU,EACjEN,EAAI,SAASmE,EAAKI,EAAKF,EAAOF,EAAKK,CAAE,EACrCF,GAAQD,EAAOF,EACfA,EAAME,GAGNrK,EAAK,QACLqK,EAAO,KAAK,OAAOrK,EAAK,MAAQsG,EAAK,SAAWA,EAAK,UAAU,EAC/DN,EAAI,SAASqE,EAAME,EAAKH,EAAOC,EAAMG,CAAE,EACvCF,GAAQF,EAAOC,EACfD,EAAOC,GAGXrE,EAAI,SAASmE,EAAKpB,EAAM,GAAIuB,EAAKvB,EAAM,CAAC,EAGpCuB,EAAMjL,EAAO,EAAG,CAGhB,IAFA2G,EAAI,UAAY,QAChBA,EAAI,YAAc,QACbjkB,EAAIooB,EAAM9K,EAAO,EAAGtd,EAAIqoB,EAAMroB,GAAKsd,EAEpC0H,EAAS,WAAWf,EAAKjkB,EAAImoB,EAAY,EAAGD,EAAK,EAAGloB,EAAGkoB,CAAE,EACzDlD,EAAS,WAAWf,EAAKjkB,EAAImoB,EAAY,EAAGD,EAAK,EAAGloB,EAAGkoB,CAAE,EAE7DjE,EAAI,UAAYzE,EAChByE,EAAI,YAAczE,CAErB,CAGZ,CAEP,CAED,aAAatH,EAAiB7S,EAAK2hB,EAAOxgB,EAAY,CACrD,IAAI2d,EAAQ6C,EAAM,EAAE,KAAK,IAGnB,GAAI,KAAK,eAAe,aAAc,CAG/B,IAAI0B,EAAY,EAAIliB,EACnBsU,EAAc,KAAK,eAAe,aAAa,cAAczV,EAAK6S,EAAkBwQ,EAAWxQ,EAAkBwQ,CAAS,EAC1H1R,EAEJ,GAAI,KAAK,OAAO,aAAe,YAC3BA,EAAO,KAAK,MAAO,KAAK,OAAO,cAAgB,WAAamN,EAAU,KAAK,OAAO,mBAAqBA,EAAU,KAAK,OAAO,kBAAkB,UAG3IA,EAAQ,GAAKA,EAAQ,EAAE,KAAK,OAAO,cACnC,OAKR,GAAIrJ,GAAeA,EAAY,OAAS,GAIpC,QAASnT,KAAWmT,EAChB,GAAInT,EAAQ,KAAOuQ,EAAkBwQ,GACjC/gB,EAAQ,OAASuQ,EAAkBwQ,IAG9B1R,IAAQ,QAAarP,EAAQ,MAAQ,QAAaqP,IAAQrP,EAAQ,MAAQA,EAAQ,QACpF,OAAOA,EASzB,CAED,OAAO,IACV,CAEL,CAEAqc,EAAS,YAAY,IAAO,CAC3B,MAAQsC,GACR,KAAK,YACN,EAGA,MAAMqC,WAAuBrC,EAAW,CACvC,YAAYhiB,EAAO,CAClB,MAAMA,CAAM,CAEZ,CACD,mBAAmB,CAClB,KAAK,eAAe,IAAImX,GAAoB,KAAK,MAAM,CACvD,CAEF,CAEAuI,EAAS,YAAY,OAAU,CAC9B,MAAQ2E,GACR,KAAO,QAER,EAMA,MAAMC,WAAoB5E,CAAQ,CACjC,YAAY1f,EAAO,CAClBA,EAAO,OAAO,MACd,MAAMA,CAAM,EACZ,KAAK,kBAAiB,CACtB,CAED,mBAAmB,CAClB,KAAK,eAAe,IAAIY,GAAS,KAAK,MAAM,CAC5C,CACE,YAAYkf,EAAO,CACf,MAAO,CACH,GAAG,MAAM,YAAYA,CAAK,EAC1B,CACI,KAAM,QACN,MAAO,kBACP,MAAO,KAAK,OAAO,cACnB,KAAM9wB,GAAK,CACP,KAAK,mBAAmB,gBAAiBA,CAAC,EAC1C8wB,EAAM,OAAM,CACf,CACJ,CACJ,CACJ,CAEJ,UAAUyE,EAAa5E,EAAImD,EAAa,CACvC,GAAI,KAAK,OAAO,eAAiB,KAAK,OAAO,MAC5C,OAGD,IAAI3b,EAAI,KAAK,IACTqd,EAAM,KAAK,OAEf7E,EAAI,UAAUmD,EACRnD,EAAI,YAAYmD,EAEtBnD,EAAI,UAAS,EACbA,EAAI,OAAO,EAAExY,CAAG,EAChBwY,EAAI,OAAO,EAAE6E,CAAG,EAChB7E,EAAI,OAAO,EAAExY,CAAG,EAChBwY,EAAI,OAAO,GAAGxY,CAAG,EACjBwY,EAAI,OAAO,EAAE6E,CAAG,EAChB7E,EAAI,OAAO,GAAG6E,CAAG,EACjB7E,EAAI,KAAK,aACTA,EAAI,OAAM,EACVA,EAAI,aAAa,MAEb,KAAK,OAAS,OACdA,EAAI,SAAS,KAAK,MAAM,QAAQ,CAAC,EAAE,GAAGxY,CAAG,EACzCwY,EAAI,aAAa,aACjBA,EAAI,SAAS,KAAK,MAAM,GAAG6E,CAAG,EAGlC,CAQD,aAAa3mB,EAAS,CACrB,IAAIwC,EAAO,KACR0B,EAAWlE,EAAQ,SACnBqd,EAAM,KAAK,OAAO,MAClByE,EAAM9hB,EAAQ,QACdqE,EAAarE,EAAQ,WACrBmD,EAAUnD,EAAQ,QAClBskB,EAAatkB,EAAQ,WACrB4mB,EAAa5mB,EAAQ,YACrB6mB,EAAS7mB,EAAQ,IACjBoD,EAAQD,EAAUmhB,EAAajgB,EAAa,EAC5CyiB,EAYG,GAXC,KAAK,OAAO,MACTF,EAAY5mB,EAAQ,OAG1B4mB,EAAY,KAAK,OAAO,OAEpBvJ,IACJA,EAAM,SAEP,KAAK,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,EAElBnZ,EAAU,CACV,GAAI,KAAK,cAAe,CACpB,IAAIxT,EAAI,KAAK,cAAc,OACvBA,IACA,KAAK,OAAO,MAAQA,EAAE,MACtB,KAAK,MAAQ,KAAK,cAAc,MAChC,KAAK,MAAQ,KAAK,cAAc,MAEvC,SACQ,KAAK,UACV,KAAK,MAAQ,KAAK,UAAU,IAC5B,KAAK,MAAQ,KAAK,UAAU,YAEtB,KAAK,QAAU,QAAa,KAAK,OAAO,QAAU,aAAgB,KAAK,OAAO,QAAU,UAAW,CACzG,IAAIH,EAAIw2B,EAAU7iB,CAAQ,EAC1B,KAAK,MAAQ3T,EAAE,IACf,KAAK,MAAQA,EAAE,GAClB,MACQ,KAAK,OAAO,QAAU,UAC3B,KAAK,MAAQ,KAAK,OAAO,MACzB,KAAK,MAAQ,KAAK,OAAO,OAgB7B,GAbAu2B,EAAoB,KAAK,MAAQ,KAAK,MAWtChF,EAAI,YAAc,KAAK,OAAO,QAAU,KAAK,OAAO,QAAU,EAE1D,KAAK,QAAS,CACd,IAAIpwB,GAAK,EAAM,KAAK,OAAO,MAAQo1B,GAAqBF,EACxD/D,EAAS,WAAWf,EAAK,EAAGpwB,EAAG4yB,EAAY5yB,EAAG,CAAE,YAAe,KAAK,OAAO,MAAO,UAAa,KAAK,OAAO,MAAQ,KAAK,OAAO,MAAQ,CAAC,CAAE,CAC7I,KAEI,CAED,GAAI,CAAC,MAAM,QAAQwS,CAAQ,EACvB,MAAMA,EAEVA,EAAS,QAAQ8iB,CAAa,EAC1B,KAAK,OAAO,gBACZlF,EAAI,KAAI,EACR5d,EAAS,QAAQtW,GAAK,CAClBA,EAAE,SAAWA,EAAE,MACfA,EAAE,MAAQA,EAAE,MACpC,CAAqB,EACDk0B,EAAI,aAAe,GACnB5d,EAAS,QAAQ8iB,CAAa,EAC9B9iB,EAAS,QAAQtW,GAAKA,EAAE,MAAQA,EAAE,MAAM,EACxCsW,EAAS,QAAQ8iB,CAAa,EAC9B9iB,EAAS,QAAQtW,GAAKA,EAAE,MAAQA,EAAE,QAAQ,EAC1Ck0B,EAAI,QAAO,EAElB,CAGD,GADAA,EAAI,YAAc,EACd,KAAK,OAAO,UAAW,CACvB,IAAIpwB,EAAIm1B,GAAY,EAAM,KAAK,OAAO,UAAYC,GAAqBF,EACvE/D,EAAS,WAAWf,EAAK,EAAGpwB,EAAG4yB,EAAY5yB,EAAG,CAAE,YAAe,QAAS,UAAa,CAAG,CAAA,CAC3F,CACJ,CACD,SAASs1B,EAAcxhB,EAAS,CAE5B,IAAIyhB,EACAC,EACArpB,EACAnM,EACAy1B,EACAC,EACAC,EAEJ,GAAI,EAAA7hB,EAAQ,IAAMrC,IACd,EAAAqC,EAAQ,MAAQpC,GAyCpB,GAxCQoC,EAAQ,MAAMA,EAAQ,QAC1BA,EAAQ,OAAO,GAInB3H,EAAI,KAAK,OAAO2H,EAAQ,MAAQrC,GAAWkB,CAAU,EAErDgjB,EAAU,KAAK,OAAO7hB,EAAQ,IAAMrC,GAAWkB,CAAU,EACzD8iB,EAAQ,KAAK,IAAI,EAAGE,EAAUxpB,CAAC,EAM3BypB,EAAY9kB,EAAK,MAAOA,EAAK,KAAK,EAE9BgD,EAAQ,MAAQ,GAChByhB,EAAYzkB,EAAK,MAAOskB,EACxBI,EAAiB,CAAC1hB,EAAQ,MAAQshB,IAElCG,GAAczkB,EAAK,MAAQgD,EAAQ,OAASshB,EAC5CI,EAAiB1hB,EAAQ,MAAQshB,GAIhCtkB,EAAK,MAAQ,GAClBykB,EAAY,EACZC,EAAiB,CAAC1hB,EAAQ,MAAQshB,IAGlCG,EAAY,GAAQzhB,EAAQ,MAAMhD,EAAK,OAASskB,EAChDI,GAAkB1hB,EAAQ,MAAMhD,EAAK,OAASskB,GAGlDp1B,EAAKu1B,EAAUL,EAAaC,EAC5Bn1B,EAAEA,EAAEm1B,EAASA,EAASn1B,EACtB01B,EAAOF,EAAiBN,EACxBQ,EAAOA,EAAOR,EAAYA,EAAYQ,EAGlC5kB,EAAK,OAAO,UAAU,OAClBA,EAAK,YAAY,GACjBqgB,EAAS,WAAWf,EAAIjkB,EAAEnM,EAAE8Q,EAAK,YAAY,EAAEA,EAAK,YAAY,EAAE,CAAC,YAAc6a,EAAM,UAAY,CAAC,CAAC,EAEzG7a,EAAK,YAAY,EAAI3E,EACrB2E,EAAK,YAAY,EAAI9Q,MAErB,CAEA,MAAM61B,EAAK/kB,EAAK,OAAO,WACvB,GAAG+kB,EAAG,CACF,MAAM9uB,EAAO4L,EAAWxG,EAAGsF,EAC3B,GAAI1K,EAAK8uB,EAAG,IAAM9uB,EAAK8uB,EAAG,GAAG,CACzB,MAAMC,EAAMD,EAAG,MAAMH,EACrBvE,EAAS,SAASf,EAAKjkB,EAAGnM,EAAGy1B,EAAOK,EAAK,CAAC,UAAW,MAAM,CAAC,EAC5D3E,EAAS,SAASf,EAAKjkB,EAAGnM,EAAE81B,EAAKL,EAAOC,EAAOI,EAAK,CAAC,UAAW,KAAK,CAAC,CACzE,MAEG3E,EAAS,SAASf,EAAKjkB,EAAGnM,EAAGy1B,EAAOC,EAAQ,CAAC,UAAW/J,CAAK,CAAC,CAErE,MAEGwF,EAAS,SAASf,EAAKjkB,EAAGnM,EAAGy1B,EAAOC,EAAQ,CAAC,UAAW/J,CAAK,CAAC,CAErE,CACJ,CACD,SAAS0J,EAAU7iB,EAAU,CACzB,IAAI6F,EAAM,OAAO,UAAWC,EAAM,CAAC,OAAO,UAC1C,OAAK,MAAM,QAAQ9F,CAAQ,GAI3BA,EAAS,QAAQ,SAAUtW,EAAG,CAC1Bmc,EAAM,KAAK,IAAIA,EAAKnc,EAAE,KAAK,EAC3Boc,EAAM,KAAK,IAAIA,EAAKpc,EAAE,KAAK,CAC3C,CAAa,EACM,CAAC,IAAKmc,EAAK,IAAKC,CAAG,IAPtB,QAAQ,KAAK,0BAA0B,EAChC,CAAC,IAAK,EAAG,IAAK,GAAG,EAO/B,CAED,SAASsd,EAAYl2B,EAAGjD,EAAG,CACvB,OAAQiD,EAAI,GAAKjD,EAAI,GAAKiD,EAAI,GAAKjD,EAAI,CAC1C,CACD,YAAK,IAAI04B,EACT,KAAK,OAAOA,EAASD,EAEd,KAAK,MAClB,CACF,CAIA/E,EAAS,YAAY,OAAU,CAC9B,MAAQ4E,GACR,KAAK,QACN,EAGC,MAAMgB,WAAkBhB,EAAW,CAClC,YAAYtkB,EAAO,CAClB,MAAMA,CAAM,EACZ,KAAK,QAAQ,EACb,CAED,YAAYe,EAAKC,EAASC,EAAO,CAChC,OAAO,IAAI,QAAQ,SAAUnD,EAASC,EAAQ,CAC7CD,EAAQ,CAAE,CAAA,CACd,CAAO,CACJ,CAGD,CAEF4hB,EAAS,YAAY,KAAQ,CAC5B,MAAQ4F,GACR,KAAK,YACN,EAKA,MAAMC,WAAsB7F,CAAQ,CAChC,YAAY1f,EAAO,CACrB,MAAMA,CAAM,EACN,KAAK,kBAAkBA,CAAM,EAC7B,KAAK,aAAeA,EAAO,cAAgB,MAC3C,KAAK,OAAS,EACjB,CAED,kBAAkBA,EAAO,CACxB,KAAK,eAAiB,IAAIgS,GAAchS,EAAO,GAAG,CAClD,CAID,YAAYe,EAAKC,EAASC,EAAMgV,EAAM3d,EAAM,CAC9C,IAAI+H,EAAO,KACL,OAAO,IAAI,QAAQ,SAAUvC,EAASC,EAAQ,CACtCzF,EAAK,WAAa,EAClBwF,EAAQ,IAAI,EAGZuC,EAAK,eAAe,YAAYU,EAAKC,EAASC,CAAK,EAAE,KAAKnD,CAAO,EAAE,MAAMC,CAAM,CAE/F,CAAS,CACJ,CAGD,aAAaF,EAAS,CAClB,IAAI0U,EAAW1U,EAAQ,SACnB8hB,EAAM9hB,EAAQ,QACdqE,EAAarE,EAAQ,WACrBmD,EAAUnD,EAAQ,QAClBskB,EAAatkB,EAAQ,WACrBoD,EAAQD,EAAUmhB,EAAajgB,EAAa,EAC5CxN,EAAKpJ,EAAGiE,EAAG+G,EAAKpE,EAAQlG,EAAGw5B,EAAIC,EAAIC,EAAI/4B,EAE3C,IAAIg5B,EAAO9nB,EAAQ,IAGnB,GAAI0U,EAKA,IAJA7d,EAAM6d,EAAS,OACfjnB,EAAI,EAAI4W,EAER3S,EAAIo2B,EAAO,KAAK,OAAS,EACpBrvB,EAAM0K,EAAS1K,GAAO2K,EAAO3K,IAC9BpE,EAASoE,EAAM0K,EACX9O,EAASwC,IAET1I,EAAIumB,EAASrgB,CAAM,EACnBszB,EAAK,KAAK,MAAMtzB,EAAS5G,CAAC,EAC1Bm6B,EAAK,KAAK,OAAOvzB,EAAS,GAAK5G,CAAC,EAChCo6B,EAAK,KAAK,OAAOF,EAAKC,GAAM,CAAC,EAEzB,KAAK,MACL94B,EAAI,KAAK,MAEM,KAAK,eAAf,MACLA,EAAI+zB,EAAS,iBAAiB10B,CAAC,EAG/BW,EAAI,iBAGHA,IAAGA,EAAI,QAERuV,EAAY,IACZwe,EAAS,SAASf,EAAK6F,EAAIG,EAAQF,EAAKD,EAAI,GAAI,CAAC,UAAW74B,CAAC,CAAC,EAG9D+zB,EAAS,WAAWf,EAAK3zB,EAAG05B,EAAIn2B,EAAG,CAC/B,YAAa5C,EACb,KAAM,oBACN,UAAW,QACvC,CAAyB,GAKjB,OAAOg5B,EAAO,EACjB,CAEL,CAGAjG,EAAS,YAAY,MAAS,CAC7B,MAAQ6F,GACR,KAAK,OACN,EAOA,MAAM7E,CAAQ,CAGP,OAAO,cAAcf,EAAKzG,EAAY,CAEjC,QAASnmB,KAAOmmB,EACZ,GAAIA,EAAW,eAAenmB,CAAG,EAAG,CAChC,IAAIc,EAAQqlB,EAAWnmB,CAAG,EAC1B4sB,EAAI5sB,CAAG,EAAIc,CACd,CAER,CAED,OAAO,WAAY8rB,EAAKiG,EAAIC,EAAIC,EAAIC,EAAI7M,EAAY,CAEhD0M,EAAK,KAAK,MAAMA,CAAE,EAAI,GACtBC,EAAK,KAAK,MAAMA,CAAE,EAAI,GACtBC,EAAK,KAAK,MAAMA,CAAE,EAAI,GACtBC,EAAK,KAAK,MAAMA,CAAE,EAAI,GAItBpG,EAAI,KAAI,EACJzG,GAAYwH,EAAS,cAAcf,EAAKzG,CAAU,EAEtDyG,EAAI,UAAS,EACbA,EAAI,OAAOiG,EAAIC,CAAE,EACjBlG,EAAI,OAAOmG,EAAIC,CAAE,EACjBpG,EAAI,OAAM,EACVA,EAAI,QAAO,CACd,CAED,OAAO,SAASA,EAAKjkB,EAAGnM,EAAGjE,EAAG6D,EAAG+pB,EAAY,CAGzCxd,EAAI,KAAK,MAAMA,CAAC,EAChBnM,EAAI,KAAK,MAAMA,CAAC,EAEZ2pB,IACAyG,EAAI,KAAI,EACRe,EAAS,cAAcf,EAAKzG,CAAU,GAG1CyG,EAAI,SAASjkB,EAAGnM,EAAGjE,EAAG6D,CAAC,EAEnB+pB,GAAYyG,EAAI,SACvB,CAED,OAAO,YAAYA,EAAKjkB,EAAGnM,EAAG2pB,EAAY,CACtCyG,EAAI,KAAI,EACJzG,GAAcwH,EAAS,cAAcf,EAAKzG,CAAU,EACxDwH,EAAS,OAAOf,EAAKjkB,EAAGnM,CAAC,EACzBowB,EAAI,KAAI,EACRA,EAAI,QAAO,CACd,CAED,OAAO,cAAcA,EAAKjkB,EAAGnM,EAAG2pB,EAAY,CACxCyG,EAAI,KAAI,EACJzG,GAAcwH,EAAS,cAAcf,EAAKzG,CAAU,EACxDwH,EAAS,OAAOf,EAAKjkB,EAAGnM,CAAC,EACzBowB,EAAI,OAAM,EACVA,EAAI,QAAO,CACd,CAED,OAAO,SAASA,EAAK2D,EAAM5nB,EAAGnM,EAAG2pB,EAAY8M,EAAY,CAWrD,GATI9M,IACAyG,EAAI,KAAI,EACRe,EAAS,cAAcf,EAAKzG,CAAU,GAI1CyG,EAAI,KAAI,EAERA,EAAI,UAAUjkB,EAAGnM,CAAC,EACdy2B,EAEA,QAAShD,KAAagD,EAAY,CAC9B,IAAInyB,EAAQmyB,EAAWhD,CAAS,EAG5BA,GAAa,aACbrD,EAAI,UAAU9rB,EAAM,EAAMA,EAAM,CAAI,EAEpCmvB,GAAa,UACbrD,EAAI,OAAO9rB,EAAM,MAAW,KAAK,GAAK,GAAG,CAEhD,CAIL8rB,EAAI,SAAS2D,EAAM,EAAG,CAAC,EACvB3D,EAAI,QAAO,EAEPzG,GAAYyG,EAAI,SAEvB,CAED,OAAO,WAAWA,EAAK2D,EAAM5nB,EAAGnM,EAAG2pB,EAAY8M,EAAY,CAUvD,GAPArG,EAAI,KAAI,EACJzG,GACAwH,EAAS,cAAcf,EAAKzG,CAAU,EAI1CyG,EAAI,UAAUjkB,EAAGnM,CAAC,EACdy2B,EAEA,QAAShD,KAAagD,EAAY,CAC9B,IAAInyB,EAAQmyB,EAAWhD,CAAS,EAG5BA,GAAa,aACbrD,EAAI,UAAU9rB,EAAM,EAAMA,EAAM,CAAI,EAEpCmvB,GAAa,UACbrD,EAAI,OAAO9rB,EAAM,MAAW,KAAK,GAAK,GAAG,CAEhD,CAIL8rB,EAAI,WAAW2D,EAAM,EAAG,CAAC,EACzB3D,EAAI,QAAO,CAEd,CAED,OAAO,aAAaA,EAAKjkB,EAAGnM,EAAG02B,EAAQ,CAEnCtG,EAAI,UAAS,EACbA,EAAI,IAAIjkB,EAAGnM,EAAG02B,EAAQ,EAAG,EAAI,KAAK,EAAE,EACpCtG,EAAI,OAAM,CACb,CAED,OAAO,WAAYA,EAAKjkB,EAAGnM,EAAG02B,EAAQ,CAElCtG,EAAI,UAAS,EACbA,EAAI,IAAIjkB,EAAGnM,EAAG02B,EAAQ,EAAG,EAAI,KAAK,EAAE,EACpCtG,EAAI,KAAI,CACX,CAED,OAAO,cAAcA,EAAKjkB,EAAGnM,EAAG+B,EAAM40B,EAAW,CAE7CvG,EAAI,KAAI,EACHruB,IACDA,EAAO,GAEP40B,IACAvG,EAAI,UAAYuG,GAEpBvG,EAAI,UAAS,EACbA,EAAI,OAAOjkB,EAAGnM,EAAI+B,EAAO,CAAC,EAC1BquB,EAAI,OAAOjkB,EAAGnM,EAAI+B,EAAO,CAAC,EAC1BquB,EAAI,OAAOjkB,EAAIpK,EAAM/B,CAAC,EACtBowB,EAAI,OAAOjkB,EAAGnM,EAAI+B,EAAO,CAAC,EAC1BquB,EAAI,UAAS,EACbA,EAAI,KAAI,EACRA,EAAI,QAAO,CACd,CAED,OAAO,WAAWA,EAAKiG,EAAIC,EAAIC,EAAIC,EAAII,EAASjN,EAAY,CACxDyG,EAAI,KAAI,EACRiG,EAAK,KAAK,MAAMA,CAAE,EAClBC,EAAK,KAAK,MAAMA,CAAE,EAClBC,EAAK,KAAK,MAAMA,CAAE,EAClBC,EAAK,KAAK,MAAMA,CAAE,EAClBI,EAAU,KAAK,MAAMA,CAAO,EAC5B,IAAI,YAAY,EACZjN,GAAYwH,EAAS,cAAcf,EAAKzG,CAAU,EAElDiN,GAAW,OAAWA,EAAU,GACpCxG,EAAI,OAAOiG,EAAIC,CAAE,EASjB,QAPIO,EAAKN,EAAKF,EACVS,EAAKN,EAAKF,EACVS,EAAS,KAAK,MAAM,KAAK,KAAKF,EAAKA,EAAKC,EAAKA,CAAE,EAAIF,CAAO,EAC1DI,EAAQH,EAAKE,EACbE,EAAQH,EAAKC,EAEbz5B,EAAI,EACDA,IAAMy5B,GACTV,GAAMW,EACNV,GAAMW,EACN7G,EAAI9yB,EAAI,GAAK,EAAI,SAAW,QAAQ,EAAE+4B,EAAIC,CAAE,EAEhDlG,EAAI9yB,EAAI,GAAK,EAAI,SAAW,QAAQ,EAAEi5B,EAAIC,CAAE,EAE5CpG,EAAI,QAAO,CACd,CAKD,OAAO,OAAOA,EAAKjkB,EAAGnM,EAAG,CAGxB,IAAInC,EAAGsH,EAAMgH,EAAE,OACf,IAAKtO,EAAI,EAAGA,EAAIsH,EAAKtH,IACpBsO,EAAEtO,CAAC,EAAI,KAAK,MAAMsO,EAAEtO,CAAC,CAAC,EACtBmC,EAAEnC,CAAC,EAAI,KAAK,MAAMmC,EAAEnC,CAAC,CAAC,EAKvB,IAFAuyB,EAAI,UAAS,EACbA,EAAI,OAAOjkB,EAAE,CAAC,EAAGnM,EAAE,CAAC,CAAC,EAChBnC,EAAI,EAAGA,EAAIsH,EAAKtH,IACpBuyB,EAAI,OAAOjkB,EAAEtO,CAAC,EAAGmC,EAAEnC,CAAC,CAAC,EAEtBuyB,EAAI,UAAS,CACb,CAET,CAEAe,EAAS,iBAAiB,CACzB,EAAI,QACJ,EAAI,MACJ,EAAI,OACJ,EAAI,OACJ,EAAI,QACJ,EAAI,MACJ,EAAI,OACJ,EAAI,MAEL,EC73CA,IAAI+F,GAAqB,EACrBC,GAAoB,EACpBC,GAAsB,EAC1B,MAAMC,GAAgC,GA+CtC,MAAMC,WAAiBnH,CAAQ,CAE3B,YAAY1f,EAAQ,CACXA,EAAO,QACRA,EAAO,MAAM,WAEjB,MAAMA,CAAM,EACZ,KAAK,kBAAiB,EAClB,KAAK,OAAO,SACZ,KAAK,aAAe,IAAIskB,GAAY,CAChC,IAAI,KAAK,OAAO,OAChB,KAAK,SACL,SAAS,GACT,MAAM,UACN,MAAM,UACN,OAAO,GACvB,CAAa,GAKL,KAAK,OAAOtkB,EAETA,EAAO,sBAAwB,SAC9BA,EAAO,oBAAsB4mB,IAKjC,KAAK,iBAAmB5mB,EAAO,kBAAoB,IAEnD,KAAK,YAAc,GAEnB,KAAK,eAAiBA,EAAO,iBAAmB,OAEhD,KAAK,MAAQA,EAAO,OAAS,qBAG7B,KAAK,WAAaA,EAAO,YAAc,CAAC,KAAM,YAAY,EAC1D,KAAK,cAAgB,GAGrB,KAAK,aAAeA,EAAO,cAAgB,CAAC,KAAM,iBAAkB,OAAQ,CAAC,GAAI,MAAS,CAAC,EAC3F,KAAK,mBAAmB,EAE3B,CAED,mBAAmB,CACf,KAAK,eAAe,IAAI+R,GAAU,KAAK,OAAO,IAAI,EAClD,KAAK,eAAe,eAAe,EAAI,EAE3C,KAAK,cAAgB,IAAI+U,GAAc,KAAK,OAAQ,IAAI,EACpD,KAAK,eAAiB,IAAIC,GAAe,KAAK,OAAQ,IAAI,CAC7D,CAED,YAAYhmB,EAAKC,EAASC,EAAMgV,EAAM3d,EAAM,CACxC,OAAI2I,EAAOD,EAAQ,KAAU,KAAK,cAC9B,KAAK,YAAY,GACV,KAAK,aAAa,YAAYD,EAAKC,EAASC,EAAMgV,EAAM3d,CAAI,IAEvE,KAAK,YAAY,GACV,KAAK,eAAe,cAAcyI,EAAKC,EAASC,CAAK,EAC/D,CAGD,SAAS2S,EAAiBjV,EAAO,CAE7B,KAAK,eAAe,kBAAkBiV,EAAiB,KAAK,UAAU,EAEtE,KAAK,UAAU,WAAW,KAAK,cAAc,kBAAkB,EAC/D,EAAE,KAAK,UAAU,WAAW,EAAE,UAAU,CAAC,EAEzC,KAAK,cAAgB,CAAC,KAAK,aAC9B,CAUD,mBAAmBtD,EAAoB,CAEnC,OAAO,KAAK,cAAc,mBAAmBA,CAAkB,EAC3D,KAAK,eAAe,mBAAmBA,CAAkB,CAEhE,CAED,aAAazS,EAAS,CAElB,GADA,KAAK,IAAIA,EAAQ,IACb,KAAK,aACL,YAAK,OAAO,KAAK,IAAI,KAAK,OAAO,OAC1B,KAAK,OAEhB,GAAI,KAAK,YAAY,CACjB,KAAK,OAAO,KAAK,aAAa,aAAaA,CAAO,EAClD,MACH,CACD,OAAG,KAAK,cAAc,OAAS,GAC3B,KAAK,cAAc,KAAKA,CAAO,EAIlC,KAAK,OAAS,KAAK,eAAe,KAAKA,CAAO,EACvC,KAAK,MAChB,CAED,UAAU8hB,EAAKwC,EAAYsC,EAAa,CAEpC,KAAK,cAAc,UAAU9E,EAAKwC,EAAY,KAAK,mBAAmB,CAEzE,CACD,aAAavO,EAAgB7S,EAAI7O,EAAOgQ,EAAW,CAC/C,GAAI,CAAC,KAAK,eAAe,mBACrB,OAAO,KAEd,IAAImR,EAAsB,KAAK,eAAe,mBAAmB,oBAC1D2T,EAAuB,KAAK,eAAe,mBAAmB,qBAC9DC,EACA/T,EACAgU,EACA95B,EAAGsH,EAAK5B,EACZ,GAAI,CAACugB,EACD,OAAO,KAIX,GAFA4T,EAAwB,KAAK,OAAQ/0B,EAAO,EAAG,KAAK,IAAI,KAAK,cAAc,OAAWu0B,IAAuB,KAAK,OAAO,aAAa,EAElIQ,EAAwB,GAExB,IAAK75B,EAAI,EAAGsH,EAAMsyB,EAAqB,OAAQ55B,EAAIsH,EAAKtH,IAGpD,GAAI45B,EAAqB55B,CAAC,EAAE,OAASwmB,GAAoBoT,EAAqB55B,CAAC,EAAE,KAAOwmB,EAAkB,CACtGsT,EAAgBF,EAAqB55B,CAAC,EACtC,KACH,UAIA65B,EAAwB5T,EAAoB,QAMjD,IAJAH,EAAeG,EAAoB4T,CAAqB,EAExDC,EAAgB,OAEX95B,EAAI,EAAGsH,EAAMwe,EAAa,WAAW,OAAQpgB,EAAK1F,EAAIsH,EAAKtH,IAI5D,GAFA0F,EAAMogB,EAAa,WAAW9lB,CAAC,EAE3B0F,EAAI,OAAS8gB,GAAoB9gB,EAAI,MAAQA,EAAI,aAAe8gB,EAAkB,CAClFsT,EAAgBp0B,EAChB,KACH,EAKT,OAAOo0B,CAEV,CAGD,UAAUtT,EAAiBuT,EAAStH,EAAS,CAEzC,OAAIA,GAAW,KAAK,cAAc,KAAOA,EAAU,KAAK,cAAc,OAC3D,KAAK,cAAc,UAAUjM,EAAiBuT,EAAS,KAAK,cAAc,GAAG,EAG7E,KAAK,eAAe,UAAUvT,EAAiBuT,EAAStH,EAAU,KAAK,eAAe,GAAG,CAGvG,CAED,eAAeuH,EAAS,CAEpB,IAAI/mB,EAAO,KACPgnB,EACAC,EAAY,CAAE,EACdC,EAAmB,CAAE,EACrBC,EAAW,OAASnnB,EAAK,eAAe,WAAa,KAAOA,EAAK,eAAe,WAAa,IAAM,IACnGonB,EAGJ,OAAAF,EAAiB,KAAK,CAAC,IAAK,OAAQ,MAAO,aAAa,CAAC,EAErDlnB,EAAK,aACLknB,EAAiB,KAAK,CAAC,IAAK,SAAU,MAAO,aAAa,CAAC,EAE3DlnB,EAAK,gBAAkBA,EAAK,eAAe,UAC3CknB,EAAiB,KAAK,CAAC,IAAK,oBAAqB,MAAO,sBAAsB,CAAC,EAEnFA,EAAiB,KAAK,CAAC,IAAK,MAAO,MAAOC,CAAQ,CAAC,EAEnDF,EAAU,KAAK,IAAI,oBAAoBF,EAAS,KAAK,SAAS,CAAC,EAE/DE,EAAU,KAAK,+EAA+E,EAE9FC,EAAiB,QAAQ,SAAUzlB,EAAM,CACrC2lB,EAAWpnB,EAAK,eAAe,UAAYyB,EAAK,IAChDwlB,EAAU,KAAKI,EAAc5lB,EAAM2lB,CAAQ,CAAC,CACxD,CAAS,EAGDJ,EAAO,CAAA,EACHhnB,EAAK,gBAAkBA,EAAK,eAAe,WAC3CgnB,EAAK,KAAK,6DAA6D,EACvEA,EAAK,KAAchnB,EAAK,cAAd,GAA4B,wCAA0C,uDAAuD,EACvIgnB,EAAK,KAAK,MAAM,EAChBA,EAAK,KAAK,eAAe,EACzBA,EAAK,KAAK,QAAQ,EAClBC,EAAU,KAAK,CACX,OAAQ,EAAED,EAAK,KAAK,EAAE,CAAC,EACvB,MAAO,UAAY,CACf,IAAIM,EAAM,EAAE,IAAI,EAAE,KAAK,GAAG,EAE1BP,EAAQ,KAAI,EAEZ/mB,EAAK,YAAc,CAACA,EAAK,YAEZA,EAAK,cAAd,GACAsnB,EAAI,YAAY,iBAAiB,EAEjCA,EAAI,SAAS,iBAAiB,EAGlCtnB,EAAK,cAAc,eAAeA,EAAK,WAAW,EAClDA,EAAK,UAAU,QAClB,CACjB,CAAa,GAGEinB,EAEP,SAASI,EAAcE,EAAUC,EAAW57B,EAAO,CAE/C,IAAI67B,EAAQ,CAAE,EACVhmB,EAAO,CAAA,EAIX,OAAAgmB,EAAM,KAAK,mCAAmC,EAE9CA,EAAM,KAAKD,EAAY,4CAA8C,2DAA2D,EAM5HD,EAAS,MAAQ,MACjBE,EAAM,KAAK,0BAA0B,EAErCA,EAAM,KAAK,QAAQ,EAEvBA,EAAM,KAAKF,EAAS,KAAK,EACzBE,EAAM,KAAK,SAAS,EAEpBA,EAAM,KAAK,QAAQ,EAEnBhmB,EAAK,OAAS,EAAEgmB,EAAM,KAAK,EAAE,CAAC,EAE9BhmB,EAAK,MAAQ,UAAY,CAErB,IAAI,QAAQ,OAEE8lB,EAAS,MAAnB,OAEA,IAAI,OAAO,UAAU,UAAY,CACzB,MAAO,UACV,EAEDvnB,EAAK,eAAe,WAAaA,EAAK,eAAe,WAAa,GAElE,UAAY,CACR,IAAIoT,EAAM,IAAI,OAAO,aAAa,IAAG,EAAG,OACxCpT,EAAK,eAAe,QAAU,MAE3BoT,IAAQpT,EAAK,eAAe,aAC3BA,EAAK,eAAe,WAAa,IAAI,OAAO,aAAa,MAAM,OAC/DA,EAAK,eAAe,UAAY,IAAI,IAAI,kBAAkB,MAAM,EAChE,EAAE,eAAe,EAAE,KAAKA,EAAK,eAAe,UAAU,GAG1DA,EAAK,UAAU,QAC3C,CAAyB,EAEL,IAAI,OAAO,KAAK,EAAEA,EAAK,UAAU,QAAQ,CAAC,IAG1CA,EAAK,eAAe,QAAUunB,EAAS,IACvCvnB,EAAK,UAAU,SAEnC,EAEmByB,CACV,CACJ,CAIL,CAEC,SAASimB,GAAgBC,EAAMC,EAAYrU,EAAiB,CAElD,IAACsH,EACApU,EACAohB,EAAO,EACPC,EAAO,GACPC,EAAiB,CAAC,EAAE,IAAI,GAAG,EAS/B,GAAKA,EAEL,OAAIJ,EAAOE,EACPphB,EAAQ,GAERA,EAAQ,KAAK,IAAI,GAAK,KAAK,IAAI,EAAK,GAAM,IAAOkhB,EAAOE,IAASC,EAAOD,EAAK,CAAC,EAGlFphB,EAAQ,KAAK,MAAMA,EAAQ,EAAE,EAAI,GAE7BA,GAAS,EACToU,EAAQwF,EAAS,iBAAiBuH,CAAU,EAG5C/M,EAAQ,QAAUkN,EAAgB,CAAC,EAAI,IAAMA,EAAgB,CAAC,EAAI,IAAMA,EAAgB,CAAC,EAAI,IAAMthB,EAAQ,IAExGoU,CACV,CAGL,MAAM4L,EAAa,CAClB,YAAY9mB,EAAQnI,EAAQ,CAErB,KAAK,OAASA,EACd,KAAK,cAAgBA,EAAO,cAI5B,KAAK,OAAS,GACd,KAAK,UAAY,CAAC,IAAK,CAAC,CAE3B,CAED,mBAAmByY,EAAoB,CACnC,OAAO,KAAK,MACf,CAED,KAAKzS,EAAS,CAEV,IAAIwC,EAAO,KACPiQ,EAAqBzS,EAAQ,SAC7B8hB,EAAM9hB,EAAQ,QACdqE,EAAarE,EAAQ,WACrBmD,EAAUnD,EAAQ,QAClBskB,EAAatkB,EAAQ,WACrBoD,EAAQD,EAAUmhB,EAAajgB,EAAa,EAC5CuT,EAAcnF,EAAmB,YACjC+X,EACA3sB,EACAnM,EACAjE,EACA6D,EACA4lB,EACA3nB,EACAsH,EACAoN,EACAwmB,EACA/V,EAIAkD,EAAY,SAAQlD,EAAWkD,EAAY,OAAO,eAEtD,KAAK,UAAU,IAAMA,EAAY,QACjC,IAAItO,EAAKtJ,EAAQ,IAIjB,IAHAA,EAAQ,KAAK,KAAK,OAElBvS,EAAI,KAAK,IAAI,EAAG,KAAK,KAAK,EAAM4W,CAAU,CAAC,EACtC9U,EAAI,EAAGsH,EAAM+gB,EAAY,SAAS,OAAQroB,EAAIsH,EAAKtH,IAGpD,GADAi7B,EAAM5S,EAAY,QAAUroB,EACxB,EAAAi7B,EAAKrnB,GACT,IAAIqnB,EAAKpnB,EAAO,MAEhBa,EAAO2T,EAAY,SAASroB,CAAC,EACxB0U,IAEL3S,EAAI,KAAK,MAAO2S,EAAK,MAAQ,KAAK,UAAU,IAAO,KAAK,MAAM,EAC9DvS,EAAI,KAAK,OAASJ,EAClBuM,EAAI,KAAK,OAAO2sB,EAAKrnB,GAAWkB,CAAU,EAE1Cwe,EAAS,cAAcf,EAAK,CAAC,UAAW,KAAK,OAAO,OAAO,MAAO,YAAa,KAAK,KAAK,CAAC,EAC1Fe,EAAS,SAASf,EAAKjkB,EAAGnM,EAAE4X,EAAK7b,EAAG6D,CAAC,GAIzC,GAAIojB,GACA,IAAKnlB,EAAI,EAAGsH,EAAM+gB,EAAY,SAAS,OAAQroB,EAAIsH,EAAKtH,IAGpD,GADAi7B,EAAM5S,EAAY,QAAUroB,EACxB,EAAAi7B,EAAKrnB,GACT,IAAIqnB,EAAKpnB,EAAO,MAEhBa,EAAO2T,EAAY,SAASroB,CAAC,EACxB0U,IAEL3S,EAAK2S,EAAK,MAAQ,KAAK,UAAU,IAAO,KAAK,OAC7CvS,EAAI,KAAK,OAASJ,EAClBuM,EAAI,KAAK,OAAO2sB,EAAKrnB,GAAWkB,CAAU,EAE1C6S,EAAUxC,EAASnlB,CAAC,EAChB0U,EAAK,WAAWiT,CAAO,IAEvB2L,EAAS,cAAcf,EAAK,CAAC,UAAWe,EAAS,iBAAiB3L,CAAO,CAAC,CAAC,EAC3E2L,EAAS,SAASf,EAAKjkB,EAAGnM,EAAE4X,EAAK7b,EAAG6D,CAAC,EAErCm5B,EAAoB,EACpB,CAAC,IAAK,IAAK,IAAK,GAAG,EAAE,QAAQ,SAAUL,EAAY,CAE/C,IAAI73B,EACAm4B,EAEJn4B,EAAQ0R,EAAK,MAAQmmB,CAAU,EAAInmB,EAAK,MAAQmmB,CAAU,EAI1DM,EAAMn4B,EAAQiQ,EAAK,UAAU,IAAOA,EAAK,OAEzC9Q,EAAK8Q,EAAK,OAASkoB,EAAMD,EACzBA,GAAqBC,EAErB7H,EAAS,cAAcf,EAAK,CAAC,UAAWe,EAAS,iBAAiBuH,CAAU,CAAC,CAAC,EAC9EvH,EAAS,SAASf,EAAKjkB,EAAGnM,EAAE4X,EAAK7b,EAAGi9B,CAAE,CAC9D,CAAqB,KAKhB,CAGD,UAAU3U,EAAiBuT,EAAStH,EAAS,CAEzC,IAAIpK,EAAc,KAAK,cAAc,mBAAmB,YACpD+S,EACA7S,EACA9B,EAAa,CAAA,EAGjB,OAAA2U,EAAmB5U,EAAkB6B,EAAY,QACjDE,EAAWF,EAAY,SAAS+S,CAAgB,EAE5C7S,IAGA9B,EAAW,KAAK,IAAI,QAAQ,eAAe,IAAM,IAAM,IAAI,gBAAgB,EAAID,CAAe,CAAC,EAE/FC,EAAW,KAAK,CAAC,KAAM,cAAe,MAAO8B,EAAS,KAAK,CAAC,EAG5D,IAAMA,EAAS,KAAOA,EAAS,KAC3B,IAAM,IAAI,IAAM,IAAI,WAAa,KAAO,KAAK,OAAQA,EAAS,KAAOA,EAAS,MAAQA,EAAS,MAAS,GAAK,EAAI,MACrH9B,EAAW,KAAK,CAAC,KAAM,IAAK,MAAO,GAAG,CAAC,EAIvC,IAAM8B,EAAS,KAAOA,EAAS,KAC3B,IAAM,IAAI,IAAM,IAAI,SAAU,EAAG,KAAO,KAAK,MAAO,IAAMA,EAAS,MAAS,GAAK,EAAI,MACzF9B,EAAW,KAAK,CAAC,KAAM,IAAK,MAAO,GAAG,CAAC,EAGvC,IAAM8B,EAAS,KAAOA,EAAS,KAC3B,IAAM,IAAI,IAAM,IAAI,SAAU,EAAG,KAAO,KAAK,MAAO,IAAMA,EAAS,MAAS,GAAK,EAAI,MACzF9B,EAAW,KAAK,CAAC,KAAM,IAAK,MAAO,GAAG,CAAC,EAGvC,IAAM8B,EAAS,KAAOA,EAAS,KAC3B,IAAM,IAAI,IAAM,IAAI,SAAU,EAAG,KAAO,KAAK,MAAO,IAAMA,EAAS,MAAS,GAAK,EAAI,MACzF9B,EAAW,KAAK,CAAC,KAAM,IAAK,MAAO,GAAG,CAAC,EAGvC,IAAM8B,EAAS,KAAOA,EAAS,KAC3B,IAAM,IAAI,IAAM,IAAI,SAAU,EAAG,KAAO,KAAK,MAAO,IAAMA,EAAS,MAAS,GAAK,EAAI,MACzF9B,EAAW,KAAK,CAAC,KAAM,IAAK,MAAO,GAAG,CAAC,GAKpCA,CAEV,CACL,CAEA,MAAMkT,EAAc,CACnB,YAAY/mB,EAAQnI,EAAQ,CACxB,KAAK,OAAOmI,EAET,KAAK,OAASnI,EACd,KAAK,cAAgBA,EAAO,eAE5B,KAAK,mBAAqBmI,EAAO,oBAAsB,EAEvD,KAAK,eAAiBA,EAAO,gBAAkB,4BAC/C,KAAK,eAAiBA,EAAO,gBAAkB,4BAC/C,KAAK,eAAiBA,EAAO,gBAAkB,oBAC/C,KAAK,cAAgBA,EAAO,eAAiB,QAC7C,KAAK,aAAeA,EAAO,cAAgB,qBAE3C,KAAK,QAAUA,EAAO,SAAW,OACjC,KAAK,WAAaA,EAAO,WACzB,KAAK,YAAcA,EAAO,cAAgB,OAAY,KAAOA,EAAO,YAGpE,KAAK,WAAaA,EAAO,YAAc,CAAC,KAAM,YAAY,EAE1D,KAAK,cAAgB,GAErB,KAAK,SAAW,EAEnB,CAED,mBAAmBsQ,EAAoB,CAEnC,GAAIA,EAAmB,oBAAqB,CACxC,IAAInhB,EAAI,EACR,OAAImhB,EAAmB,4BACnBnhB,GAAKw3B,GAAsBD,IAExBv3B,EAAK,KAAK,OAAO,cAAgBmhB,EAAmB,oBAAoB,OAAU,CAC5F,KAEG,QAAO,KAAK,MAGnB,CAED,KAAKzS,EAAS,CAEV,IAAIwC,EAAO,KACPiQ,EAAqBzS,EAAQ,SAC7B8hB,EAAM9hB,EAAQ,QACdqE,EAAarE,EAAQ,WACrBmD,EAAUnD,EAAQ,QAClBskB,EAAatkB,EAAQ,WACrBoD,EAAQD,EAAUmhB,EAAajgB,EAAa,EAC5CmR,EAAsB/C,EAAmB,oBACzCiC,EAAWjC,EAAmB,SAC9BmY,EAAU,WAAW,KAAK,OAAO,cAAc,GAAG,WACtD,GAAI,CAACpV,EACD,OAEJ,IAAIlM,EAAMtJ,EAAQ,IACd0U,IACAA,EAAWA,EAAS,eAGpBjC,EAAmB,2BACnBmW,GAAqBE,GAAsBD,GAE3CpW,EAAmB,qBAAqB,QAAQ,SAAUqL,EAAU,CAChE,IAAI+M,GAAe/M,EAAS,MAAQ3a,GAAWkB,EAC3CymB,GAAahN,EAAS,IAAM3a,GAAWkB,EAEvCymB,EAAYD,EAAc,IAC1BA,GAAe,EACfC,GAAa,GAEjBjI,EAAS,SAASf,EAAK+I,EAAa,EAAIC,EAAYD,EAAc/B,GAAsB,EAAG,CAAC,UAAW,OAAO,CAAC,CAC/H,CAAa,GAIDF,GAAqB,EAGrBpT,GAEAA,EAAoB,QAAQ,SAA4BH,EAAc9lB,EAAG,CAElE,IAACw7B,EAAQnC,GAAsBpmB,EAAK,OAAO,cAAgBjT,EAAG+Z,EAC7D0hB,EAAkBxoB,EAAK,OAAO,cAAgB,EAC9CjT,EAEAyjB,EAEJ,IAAKzjB,EAAI,EAAGA,EAAI8lB,EAAa,WAAW,OAAQ9lB,IAM5C,GAJAyjB,EAAYqC,EAAa,WAAW9lB,CAAC,EAErCiT,EAAK,SAAWA,EAAK,UAAYwQ,EAAU,SAAQ,EAE9C,EAAAA,EAAU,MAAQA,EAAU,YAAe7P,GAChD,IAAI6P,EAAU,MAAQ5P,EAAO,MAGhB4P,EAAU,SAAnB,KAIAA,aAAqBgC,IAErBiW,EAAkBjY,EAAW+X,EAAOC,CAAe,EAEnDE,EAAoBlY,EAAU,eAAgB+X,EAAOC,CAAe,EAEhEhY,EAAU,iBACVkY,EAAoBlY,EAAU,gBAAiB+X,EAAOC,CAAe,GAKzEE,EAAoBlY,EAAW+X,EAAOC,CAAe,GAI7E,CAAa,EAKL,SAASC,EAAkBjY,EAAW+X,EAAOC,EAAiB,CAG1D,IAAIG,EAAiB3oB,EAAK,kBAAkBwQ,EAAU,cAAc,EAChEoY,EAAeD,EACfN,GAAe7X,EAAU,gBAAkB7P,GAAWkB,EACtDymB,GAAa9X,EAAU,cAAgB7P,GAAWkB,EAClDgnB,EAAeN,EAAQC,EAAkB,EAExChY,EAAU,cAAiB7P,GAAW6P,EAAU,gBAAkB5P,IAEnE4P,EAAU,IAAM,IAChBmY,EAAiBpiB,GAAM,cAAcoiB,EAAgB,MAAM,GAG/DtI,EAAS,cAAcf,EAAK,CAAC,UAAWqJ,EAAgB,YAAaC,CAAY,CAAC,EAElFvI,EAAS,WAAWf,EAAK+I,EAAaQ,EAAcP,EAAWO,CAAY,EAE9E,CAGD,SAASH,EAAoBlY,EAAW+X,EAAOC,EAAiB,CAG5D,IAAIG,EAAiB3oB,EAAK,kBAAkBwQ,CAAS,EACjDoY,EAAeD,EACfG,EACA3yB,EAASqa,EAAU,OACnBpa,EACAzK,EAOJ,GAJIg9B,IACJA,EAAe,QAGVnY,EAAU,MAAQA,EAAU,YAAe7P,GAAW6P,EAAU,MAAQ5P,EAAO,OAQpF,IANI4P,EAAU,IAAM,IAChBmY,EAAiBpiB,GAAM,cAAcoiB,EAAgB,MAAM,GAG/DtI,EAAS,cAAcf,EAAK,CAAC,UAAWqJ,EAAgB,YAAaC,CAAY,CAAC,EAE7Ej9B,EAAI,EAAGA,EAAIwK,EAAO,OAAQxK,IAI3B,GAFAyK,EAAQD,EAAOxK,CAAC,EAEX,EAAAyK,EAAM,MAAQA,EAAM,IAAOuK,GAIhC,IAFAooB,EAAU3yB,CAAK,EAEVA,EAAM,MAAQA,EAAM,IAAOwK,EAAO,MAGnC4P,EAAU,YACVA,EAAU,WAAW,QAAQ,SAAUpa,EAAO,CAC1C,IAAI4yB,EAAY5yB,EAAM,MAAQuK,EAC1B0nB,EAAcW,EAAYnnB,EAAa,EACvConB,EAAa,EACjB5I,EAAS,SAASf,EAAK+I,EAAaE,EAAQ,EAAGU,EAAYT,EAAkB,EAAG,CAAC,UAAWxoB,EAAK,cAAc,CAAC,CACxI,CAAqB,EAKT,SAAS+oB,EAAU3yB,EAAO,CACtB,IAAIib,EAAYjb,EAAM,MAAQ6Z,EAAmB,MAC7CoY,GAAejyB,EAAM,MAAQuK,GAAWkB,EACxCymB,GAAclyB,EAAM,MAAQA,EAAM,IAAOuK,GAAWkB,EACpDonB,EAAa,KAAK,IAAI,EAAGX,EAAYD,CAAW,EAChDa,EAAiBlpB,EAAK,OAAO,cAAgB,EAC7CsR,EAAWlb,EAAM,IAAI,YAAa,EAClC+yB,GAAenpB,EAAK,aACpBopB,GAAgBppB,EAAK,cACrBqpB,GACAC,EACAC,EACAC,GACAC,GACAC,EACAruB,EACAnM,EACAnC,EACA87B,GAAeN,EAAQC,EAAkB,EAiE7C,GA/DIpyB,EAAM,UAAY,QAAakyB,IAAc,QAAaQ,IAAiB,SAC/D1yB,EAAM,UAAd,IACAiqB,EAAS,WAAWf,EAAKwJ,EAAcD,GAAcR,EAAaQ,GAAc,CAAC,YAAaO,EAAa,CAAC,EAG5G/I,EAAS,WAAWf,EAAKwJ,EAAcD,GAAcR,EAAaQ,GAAc,CAAC,YAAaM,EAAY,CAAC,GAGnHL,EAAeR,EAEF9X,EAAU,SAAnB,IAA6B7kB,IAAMwK,EAAO,OAAS,GAEnDkF,EAAI,CACAgtB,EACAC,EACAA,EAAYY,EACZZ,EACAD,EACAA,CAAW,EACfn5B,EAAI,CACAq5B,EACAA,EACAA,EAASC,EAAkB,EAC3BD,EAAQC,EACRD,EAAQC,EACRD,CAAK,EACTlI,EAAS,YAAYf,EAAKjkB,EAAGnM,EAAG,CAAC,UAAWy5B,CAAc,CAAC,EACvDnY,EAAU,IAAM,GAChB6P,EAAS,cAAcf,EAAKjkB,EAAGnM,EAAG,CAAC,YAAa05B,CAAY,CAAC,GAGlDpY,EAAU,SAApB,IAA8B7kB,IAAM,GAEzC0P,EAAI,CACAitB,EACAD,EACAA,EAAca,EACdb,EACAC,EACAA,CAAS,EACbp5B,EAAI,CACAq5B,EACAA,EACAA,EAASC,EAAkB,EAC3BD,EAAQC,EACRD,EAAQC,EACRD,CAAK,EACTlI,EAAS,YAAYf,EAAKjkB,EAAGnM,EAAG,CAAC,UAAWy5B,CAAc,CAAC,EACvDnY,EAAU,IAAM,GAChB6P,EAAS,cAAcf,EAAKjkB,EAAGnM,EAAG,CAAC,YAAa05B,CAAY,CAAC,IAKjEvI,EAAS,SAASf,EAAK+I,EAAaE,EAAOU,EAAYT,EAAiB,CAAC,UAAWG,CAAc,CAAC,EAC/FnY,EAAU,IAAM,IAChB8O,EAAI,KAAI,EACRA,EAAI,YAAcsJ,EAClBtJ,EAAI,WAAW+I,EAAaE,EAAOU,EAAYT,CAAe,EAC9DlJ,EAAI,QAAO,IAIfpN,GAAYZ,IAAa,IACzB,QAASvkB,EAAI,EAAGsH,GAAMid,EAAS,OAAQvkB,EAAIsH,GAAKtH,IAC5Cu8B,EAAWhY,EAAS,OAAOvkB,CAAC,EAC5Bs8B,GAAUnX,EAAS,OAAOb,EAAYtkB,CAAC,EACnCu8B,IAAa,MACbA,EAAWD,KAEXC,IAAa,KAAOD,KAAYC,KAC5BlzB,EAAM,MAAQA,EAAM,KAAK,OAASrJ,GAClCw8B,EAAWnzB,EAAM,KAAKrJ,CAAC,EACvB28B,EAAYhC,GAAgB6B,EAAUD,EAAUv8B,EAAIqJ,EAAM,KAAK,GAG/DszB,EAAYrJ,EAAS,iBAAiBiJ,CAAQ,EAE9CI,IACAF,IAAUpzB,EAAM,MAAQrJ,EAAK4T,GAAWkB,EACxC4nB,GAAY,KAAK,IAAI,EAAG,EAAI5nB,CAAU,EAClCA,EAAW,IACbwe,EAAS,WAAWf,EAAKgK,EAAUE,GAAMC,GAAU,EAAGlB,EAAM,EAAG,CAC7D,YAAamB,EACb,KAAMtB,EACN,UAAW,SACX,aAAa,SACjD,CAAiC,EAGD/H,EAAS,SAASf,EAAKkK,GAAOjB,EAAOkB,GAAWjB,EAAiB,CAAC,UAAWkB,CAAS,CAAC,GAM1G,CACJ,CACD,OAAOtD,GAAsBpmB,EAAK,OAAO,cAAgBgT,EAAoB,OAAQlM,CAExF,CAED,kBAAkByM,EAAiB2B,EAAY,CAE3C,IAAIlV,EAAO,KACPiQ,EAAqB,KAAK,cAAc,mBACxC0Z,EAAgB1Z,EAAmB,oBAEvC0Z,EAAc,QAAQ,SAAU9W,EAAc,CAC1CA,EAAa,YAAYU,EAAiBtD,EAAoBiF,CAAU,CACpF,CAAS,EAEDyU,EAAc,KAAK,SAAU/6B,EAAGjD,EAAG,CAC/B,OAAOqU,EAAK,cAAgBpR,EAAE,MAAQjD,EAAE,MAAQA,EAAE,MAAQiD,EAAE,KACxE,CAAS,CAEJ,CAED,OAAO,oBAAoB2kB,EAAiB0B,EAAiBC,EAAY0U,EAAe,CAEpF,IAAID,EAAgB1U,EAAgB,oBAChC/C,EAAW+C,EAAgB,SAE/B,GAAI/C,EACAA,EAAWA,EAAS,kBACjB,CACH,QAAQ,IAAI,2CAA2C,EACvD,MACH,CAEDyX,EAAc,QAAQ,SAAU9W,EAAc,CAC1CA,EAAa,YAAYU,EAAiB0B,EAAiBC,CAAU,CACjF,CAAS,EAEDyU,EAAc,KAAK,SAAU/6B,EAAGjD,EAAG,CAC/B,OAAOi+B,EAAgBh7B,EAAE,MAAQjD,EAAE,MAAQA,EAAE,MAAQiD,EAAE,KACnE,CAAS,CAEJ,CAED,UAAU2kB,EAAiBuT,EAAStH,EAAS,CAEzC,IAAIxM,EAAsB,KAAK,cAAc,mBAAmB,oBAC5D2T,EAAuB,KAAK,cAAc,mBAAmB,qBAC7DC,EACA/T,EACAgU,EACA95B,EAAGsH,EAAK5B,EAIZ,GAFAm0B,EAAwB,KAAK,OAAOpH,EAAW4G,IAAuB,KAAK,OAAO,aAAa,EAE3FQ,EAAwB,GAExB,IAAK75B,EAAI,EAAGsH,EAAMsyB,EAAqB,OAAQ55B,EAAIsH,EAAKtH,IAGpD,GAAI45B,EAAqB55B,CAAC,EAAE,OAASwmB,GAAoBoT,EAAqB55B,CAAC,EAAE,KAAOwmB,EAAkB,CACtGsT,EAAgBF,EAAqB55B,CAAC,EACtC,KACH,UAIA65B,EAAwB5T,EAAoB,QAMjD,IAJAH,EAAeG,EAAoB4T,CAAqB,EAExDC,EAAgB,OAEX95B,EAAI,EAAGsH,EAAMwe,EAAa,WAAW,OAAQpgB,EAAK1F,EAAIsH,EAAKtH,IAI5D,GAFA0F,EAAMogB,EAAa,WAAW9lB,CAAC,EAE3B0F,EAAI,OAAS8gB,GAAoB9gB,EAAI,MAAQA,EAAI,aAAe8gB,EAAkB,CAClFsT,EAAgBp0B,EAChB,KACH,EAKT,OAAIo0B,EACOA,EAAc,UAAUtT,CAAe,EAGvC,EAGd,CAGD,kBAAkB/C,EAAW,CAEzB,GAAI,KAAK,OAAO,eACZ,OAAO,KAAK,OAAO,eAAeA,CAAS,EAG5C,IAACqZ,EAAiB,KACjBC,EAASD,EAAe,QACxBE,EAAUlP,EAKd,OAFAA,EAAQgP,EAAe,OAAO,OAAO,MAE7BC,EAAM,CAEV,IAAK,SACDjP,EAAQrK,EAAU,OAASqZ,EAAe,eAAiBA,EAAe,eAC1E,MACJ,IAAK,oBAEErZ,aAAqBgC,GACpBqI,EAAQrK,EAAU,kBAAmB,EAAGqZ,EAAe,eAAiBA,EAAe,eAElFrZ,EAAU,aAEXA,EAAU,gBACVqK,EAAQrK,EAAU,OAASqZ,EAAe,eAAiBA,EAAe,eAErErZ,EAAU,iBACfqK,EAAQrK,EAAU,OAASqZ,EAAe,eAAiBA,EAAe,eAG1E,QAAQ,IAAI,sDAAsD,GAG1E,MAEJ,IAAK,MAEDE,EAAWvZ,EAAU,KAAM,EAACqZ,EAAe,UAAU,EACjDE,IAAa,SAETF,EAAe,cAAgBA,EAAe,WAE9ChP,EAAQ,OAASkP,EAAW,IAG5BlP,EAAQgP,EAAe,UAAU,SAASE,CAAQ,GAG1D,MACJ,QACIlP,EAAQgP,EAAe,OAAO,OAAO,KAC5C,CACD,OAAOhP,CAEV,CAEL,CAIA2L,GAAS,QAAU,CAEX,KAAM,UAAY,CACd,OAAO,SAAUhW,EAAW,CACxB,MAAO,EACvB,CACS,EAED,OAAQ,SAAU1B,EAAQ,CACtB,OAAO,SAAU0B,EAAW,CACxB,OAAOA,EAAU,SAAW1B,CAC5C,CACS,EAED,eAAgB,SAAUkb,EAAOC,EAAO,CACpC,OAAO,SAAUzZ,EAAW,CAMxB,MAJI,GAAAwZ,GAASxZ,EAAU,GAAKwZ,GAIxBC,GAASzZ,EAAU,GAAKyZ,EAK/B,CACJ,CACT,EAEA5K,EAAS,cAAc,IAAOmH,GAE9BnH,EAAS,YAAY,IAAO,CAC3B,MAAQmH,GACR,KAAK,KACN,ECtjCA,MAAM0D,WAAoB7K,CAAQ,CAE9B,YAAY1f,EAAO,CACf,MAAMA,CAAM,EACZ,KAAK,WAAW,GAChB,KAAK,OAAO,MAAO,KAAK,OAAO,OAAS,GACxC,KAAK,OAAO,YAAc,KAAK,OAAO,YAAY,GAClD,KAAK,OAAO,eAAiB,KAAK,OAAO,iBAAiB,OAAU,GAAMA,EAAO,eAC5E,KAAK,OAAO,MACb,KAAK,OAAO,IAAI,MAIpB,KAAK,eAAgB,IAAI0N,GAAiB,KAAK,MAAM,EACrD,KAAK,sBAAqB,CAE7B,CACD,SAASzhB,EAAM,CACX,KAAK,eAAe,SAASA,CAChC,CAED,cAAckS,EAAM,CAChB,OAAO,KAAK,eAAe,cAAcA,CAAK,CACjD,CAED,YAAYyS,EAAO4Z,EAAY,CAC3B,KAAK,eAAe,UAAU5Z,EAAO4Z,CAAW,EAChD,KAAK,eAAe,qBACvB,CAQD,cAAcC,EAAInyB,EAAKwV,EAAM4c,EAAOC,EAAU,GAAMC,EAAkB,GAAM,CAQxE,GANIH,GAAO,MACP,KAAK,eAAe,cAAc,KAAK,IAAI,EAK3C,CAAE,KAAK,WAAWA,CAAG,GAAMG,EAAkB,CAC7C,MAAM7c,EAAM,IAAI,MAAMD,EAAM,MAAM,EAAE,KAAK,CAAC,EAC1C,QAAQ1gB,EAAE,EAAEA,EAAEkL,EAAK,OAAOlL,IACtB2gB,EAAIzV,EAAKlL,CAAC,CAAC,IAEf,KAAK,WAAWq9B,CAAG,EAAE1c,CACxB,CACD,KAAK,QAAU,KAAK,WAAW0c,CAAG,EAClC,KAAK,eAAe,cAAcnyB,EAAKwV,CAAK,EAC5C,KAAK,UAAU4c,EACf,KAAK,SAAS5c,EACV6c,GACA,KAAK,eAAe,qBAE3B,CAED,sBAAsBE,EAAGv5B,EAAK,EACtBu5B,GAAOA,IAAO,MACd,KAAK,OAAO,eAAeA,GAE3Bv5B,IACA,KAAK,OAAO,YAAYA,GAE5B,KAAK,eAAe,eAAe,KAAK,OAAO,eAC/C,KAAK,eAAe,YAAY,KAAK,OAAO,WAG/C,CAGD,MAAM,YAAYyP,EAAIC,EAAQC,EAAMgV,EAAM3d,EAAK,CAC3C,GAAI2I,EAAMD,EAAQ,IACd,MAAO,0BAEX,GAAG,CAEC,OADiB,MAAM,KAAK,eAAe,cAAcD,EAAIC,EAAQC,CAAK,CAE7E,OAAM+F,EAAM,CACT,OAAOA,EAAM,OAChB,CAEJ,CAED,UAAUie,EAAOtF,EAAImD,EAAa,CAC9B,IAAI3b,EAAI,KAAK,IACb,MAAM2jB,EAAiB,KAAK,MAAM,KAAK,OAAO,OAAO,KAAK,SAAS,MAAM,EACzEnL,EAAI,YAAYmD,EAChBnD,EAAI,UAAUmD,EACd,QAAS9S,KAAQ,KAAK,SAAS,CAC3B,IAAIwU,EAAMrd,EAAI2jB,EACdnL,EAAI,UAAS,EACbA,EAAI,OAAO,EAAExY,CAAG,EAChBwY,EAAI,OAAO,EAAE6E,CAAG,EAChB7E,EAAI,OAAO,EAAExY,CAAG,EAChBwY,EAAI,OAAO,GAAGxY,CAAG,EACjBwY,EAAI,OAAO,EAAE6E,CAAG,EAChB7E,EAAI,OAAO,GAAG6E,CAAG,EACjB7E,EAAI,KAAK,aACTA,EAAI,OAAM,EACVA,EAAI,aAAa,MACjB,IAAI5iB,EAAM,KAAK,OAAO,MACtB4iB,EAAI,SAAS5iB,EAAI,QAAQ,CAAC,EAAE,GAAGoK,CAAG,EAClCwY,EAAI,KAAK,aACTA,EAAI,aAAa,SACjBA,EAAI,SAAS3P,EAAK,EAAE7I,EAAK2jB,EAAiB,CAAE,EAC5CnL,EAAI,KAAK,aACTxY,GAAK2jB,CACR,CACH,CAEF,aAAajtB,EAAQ,CAQjB,IAAIwF,EAAUxF,EAAQ,SACtB8hB,EAAM9hB,EAAQ,QACdqE,EAAarE,EAAQ,WACrBmD,EAAUnD,EAAQ,QAClBskB,EAAatkB,EAAQ,WAAW1O,EAAEI,EAAEmM,EAGpC,MAAMwS,EAAKlN,EAAQqC,EAAQ,MAAM,CAAC,EAC5B8K,EAAKD,EAAKiU,EAAajgB,EAAc,EACrC4oB,EAAiB,KAAK,MAAM,KAAK,OAAO,OAAOznB,EAAQ,MAAM,EACnE,IAAIwE,EAAI,KAAK,OAAO,MAEhBV,EAAMtJ,EAAQ,IAClB,KAAK,IAAIA,EAAQ,IACvB,IAAIvS,EAAI,KAAK,IAAI,EAAG,KAAK,KAAK,EAAM4W,CAAU,CAAC,EACrC8W,EAAO9W,EAAW,EAAE,EAAE,EAC1B,QAAS9V,EAAE,EAAEA,EAAEiX,EAAQ,OAAOjX,IAAI,CAC1B,IAAI2hB,EAAM1K,EAAQjX,CAAC,EAEnBuzB,EAAI,UAAU,KAAK,UAAUvzB,CAAC,EAEzC,QAASgB,EAAI8gB,EAAI9gB,EAAI+gB,EAAI/gB,GAAG4rB,EAAM,CAEjC,IAAIqP,EAAKj7B,EAAEiW,EAAQ,MAAM,CAAC,EACJ0K,EAAI3gB,CAAC,IAAI,KAG/B+B,EAAI,KAAK,MAAS4e,EAAI3gB,CAAC,EAAE,KAAK,QAAQhB,CAAC,EAAMyb,EAAOijB,CAAgB,EAClD37B,EAAEA,EAAE27B,EAAiBA,EAAiB37B,EACxDI,EAAIu7B,EAAmB37B,EACvBuM,EAAI,KAAK,OAAO2sB,EAAKrnB,GAAWkB,CAAU,EAC1Cyd,EAAI,SAAUjkB,EAAGnM,EAAE4X,EAAK7b,EAAE6D,CAAC,EACxB,CACOgY,GAAO2jB,CACV,CACR,CAGD,YAAYhL,EAAM,CAEd,OADS,MAAM,YAAYA,CAAK,EACvB,OAAO,CAChB,CACI,MAAM,uBACN,KAAK,QAEL,cAAc,KAAK,OAAO,eAC1B,KAAMpkB,GAAI,CACN,KAAK,sBAAsBA,CAAC,EAC5B,KAAK,eAAe,sBACpBokB,EAAM,OAAM,CACf,CACJ,EACG,CAEA,KAAK,SACL,IAAI,EACJ,IAAI,IACJ,KAAK,EACL,MAAM,gBACN,cAAc,KAAK,OAAO,YAC1B,KAAKpkB,GAAG,CACJ,KAAK,sBAAsB,KAAKA,CAAC,EACjC,KAAK,eAAe,sBACpBokB,EAAM,OAAM,CAEf,CACb,EAAU,CACE,KAAK,SACL,IAAI,EACJ,IAAI,EACJ,MAAM,uBACN,cAAc,KAAK,OAAO,MAC1B,KAAKpkB,GAAG,CACJ,KAAK,OAAO,MAAMA,EAElBokB,EAAM,OAAQ,CACjB,CACJ,CAAA,CAAC,CACL,CACL,CAEAJ,EAAS,YAAY,cAAiB,CACrC,MAAQ6K,GACR,KAAK,eAEN,EChNA,IAAItT,GAAiB,SAAS7T,EAAOC,EAAQ,CAEzCA,EAAQ,KAAM,CAAC,SAASD,EAAO,CAAC,CAAC,CAAC,EAClCC,EAAQ,KAAM,SAASD,EAAO,CAAC,CAAC,EAChCC,EAAQ,OAAQ,SAASD,EAAO,CAAC,CAAC,EAClCC,EAAQ,IAAK,WAAWD,EAAO,CAAC,CAAC,CACrC,EAEA,MAAM2nB,WAAyB/I,EAAW,CACtC,mBAAmB,CACf,KAAK,eAAiB,IAAIhL,GAAsB,KAAK,OAAOC,EAAe,CAC9E,CAID,aAAa+T,EAAIjqB,EAAK2hB,EAAOxgB,EAAWyd,EAAI,CACxC,MAAMryB,EAAIqyB,EAAI,aAAa+C,EAAM,EAAGA,EAAM,EAAG,EAAG,CAAC,EAAE,KACnD,GAAIp1B,EAAE,CAAC,IAAI,GAAKA,EAAE,CAAC,IAAI,GAAKA,EAAE,CAAC,IAAI,IAC/B,OAAO,KAGX,MAAM29B,EAAM/oB,EACNgpB,EAAO,CAAA,EAEPC,EAAM,KAAK,eAAe,aAAa,cAAcpqB,EAAIiqB,EAAGC,EAAID,EAAGC,CAAG,EAC5E,QAAS,KAAKE,GACNH,GAAI,EAAE,MAAMC,GAAOD,GAAM,EAAE,KAAKC,GAG3BD,GAAI,EAAE,OAAOC,GAAOD,GAAK,EAAE,IAAIC,IACpCC,EAAO,KAAK,CAAC,EAGrB,OAAOA,EAAO,OAAO,EAAEA,EAAO,IACjC,CAED,cAAcE,EAAU,CAAC,MAAAC,EAAM,QAAAhoB,EAAQ,MAAA1E,CAAK,EAAE,CAC1C,KAAK,WAAW,CACZ,IAAIysB,EAAU,IACd,SAAS/nB,EACT,QAAQ+nB,EAAU,MAClB,QAAQA,EAAU,QAClB,MAAMA,EAAU,IAChB,YAAYA,EAAU,IAAIA,EAAU,OAAOA,EAAU,OAAO,MAC5D,MAAM,MACN,OAAO,EACnB,CAAS,CACJ,CAED,aAAaA,EAAU,CAAC,MAAAC,EAAM,QAAAhoB,EAAQ,MAAA1E,CAAK,EAAE,CACzC,KAAK,WAAW,CACZ,IAAIysB,EAAU,IACd,SAAS/nB,EACT,QAAQ+nB,EAAU,QAClB,QAAQA,EAAU,MAClB,MAAMA,EAAU,IAChB,YAAYA,EAAU,IAAIA,EAAU,OAAOA,EAAU,OAAO,MAC5D,OAAO,EACnB,CAAS,CACJ,CAED,YAAYtL,EAAM,CACd,MAAM1xB,EAAG,MAAM,YAAY0xB,CAAK,EACtB,YAAK,OAAO,MACf1xB,EAAE,OAAO,CA2BpB,CACI,KAAK,QACL,MAAM,kBACN,cAAc,KAAK,OAAO,cAC1B,KAAMsN,GAAI,CACN,KAAK,OAAO,cAAcA,EAC1BokB,EAAM,OAAM,CACf,CAEJ,CAAA,CAAC,CACD,CAGD,WAAW,CAAC,IAAAH,EAAI,SAAA5d,EAAS,QAAAf,EAAQ,WAAAkB,EAAW,MAAAgZ,EAAM,OAAAoQ,EAAO,WAAAnJ,EAAW,QAAAtC,EAAQ,CAAC,EAAE,CAI3E,MAAM5e,EAAOkhB,EAAWjgB,EAAWlB,EAE7BuqB,EADS,KAAK,OAAO1L,EACJ,EACjB2L,EAAQ,KAAK,OAAO,cAC1B,GAAI,KAAK,OAAO,MAAM,CAClB,MAAMC,EAAI,KAAK,OAAO,MAAM,OACtBC,EAAM,KAAK,OAAO,MAAM,CAAC,EAAE,IAC3BC,EAAM,KAAK,OAAO,MAAM,CAAC,EAAE,IAC3BH,EAAQ,KAAK,OAAO,cAC1BzpB,EAAWA,EAAS,OAAOrG,GAAGA,EAAE,IAAI+vB,EAAG,CAAC,GAAK/vB,EAAE,IAAI+vB,EAAG,CAAC,GAAK/vB,EAAE,IAAIA,EAAE,MAAMgwB,GAAQhwB,EAAE,IAAIA,EAAE,MAAMiwB,IAAS,CAACH,GAAU9vB,EAAE,KAAKsF,GAAWtF,EAAE,OAAOuF,EAAO,CACzJ,CAED,IAAI2qB,EAAI,EACJ7pB,EAAS,OAAO,KAAS,KAAK,gBAGlC4d,EAAI,UAAS,EAGb,QAASvzB,EAAE,EAAEA,EAAE2V,EAAS,OAAO3V,GAAGw/B,EAAI,CAClC,MAAMvoB,EAAUtB,EAAS3V,CAAC,EAC1B,GAAK,KAAK,iBAAmB,CAAC,KAAK,gBAAgBiX,CAAO,GAAOmoB,IAAUnoB,EAAQ,IAAIpC,GAASoC,EAAQ,MAAMrC,GAAU,CACpHqC,EAAQ,QAAQ,GAChB,QACH,CACD,IAAIwoB,GAAOxoB,EAAQ,MAAMrC,GAASkB,EAClC,MAAM4pB,GAAOzoB,EAAQ,KAAKrC,GAASkB,EACnC,IAAI6pB,GAAO1oB,EAAQ,OAAOrC,GAASkB,EACnC,MAAM8pB,GAAO3oB,EAAQ,IAAIrC,GAASkB,EAC5BujB,EAAKoG,GAAKC,EAAID,GAAK,EACzB,IAAII,EAAKF,GAAKC,EAAID,GAAK,EACnB58B,GAAMkU,EAAQ,IAAIA,EAAQ,QAAQnB,EAAW,KAAM,KAAK,OAAO,OACnE/S,EAAEA,EAAE,KAAK,OAAO,OAAO,IAAI,KAAK,OAAO,OAAO,IAAIA,EAClDA,EAAIA,EAAE,GAAG,GAAGA,EACZ,MAAMxC,EAAIuuB,IAAY,KAAK,eAAe,KAAK,eAAe7X,CAAO,EAAE,QACvEsc,EAAI,YAAYhzB,EAChBgzB,EAAI,UAAS,EACbA,EAAI,OAAO8F,EAAG8F,CAAQ,EACnBU,EAAGxG,EAAI,IACNwG,EAAGxG,EAAG,GAGV,MAAMyG,EAAKzG,GAAIwG,EAAGxG,GAAI,EAKtB,GAJA9F,EAAI,cAAcuM,EAAGX,EAASp8B,EAAE+8B,EAAGX,EAASp8B,EAAE88B,EAAGV,CAAQ,EACzD5L,EAAI,OAAM,EAGN2L,EAAO,CACP3L,EAAI,UAAU,OACd,IAAIr0B,EAAIwgC,EAAID,EACRvgC,EAAE,IACFA,EAAE,EACFugC,GAAK,GAITlM,EAAI,SAASkM,EAAI,KAAK,OAAO,EAAEvgC,EAAE,CAAC,EAClCA,EAAE0gC,EAAID,EACFzgC,EAAE,IACFA,EAAE,EACFygC,GAAK,GAETpM,EAAI,SAASoM,EAAI,KAAK,OAAO,EAAEzgC,EAAE,CAAC,CACrC,CAEJ,CAEJ,CAED,aAAauS,EAAQ,CACjB,KAAK,WAAW,CACZ,IAAIA,EAAQ,QACZ,SAASA,EAAQ,SACjB,QAAQA,EAAQ,QAChB,WAAWA,EAAQ,WACnB,OAAO,GACP,WAAWA,EAAQ,UAC/B,CAAS,CAEJ,CACL,CAEA6hB,EAAS,YAAY,kBAAqB,CACtC,MAAQqL,EACZ,EC7LA,MAAMoB,WAAuBC,EAAW,CACpC,YAAYpsB,EAAQqsB,EAAS,CACzB,MAAMC,EAAkBtsB,EAAO,QAC/BA,EAAO,QAAU,IAAM,CACfssB,GAAiBA,IACjBtsB,EAAO,OACPA,EAAO,MAAM,QAAQ,OACjBA,EAAO,MAAM,QAAQ,QAAQ,IAAI,EACjC,CACpB,CACA,EACQ,MAAMA,EAAQqsB,CAAO,CACxB,CAED,KAAKA,EAAS,CACL,KAAK,WAAU,KAAK,SAAW,CAAA,GACpC,MAAMx0B,EAAS,KAAK,OAIpB,UAAWzJ,KAAKi+B,EAAS,CACrB,MAAM/+B,EAAIi/B,EACN,MACA,CACI,OAAQ,CAEP,CACJ,EACD10B,CAChB,EAWY,GAVIzJ,EAAE,OAAS,UACXm+B,EAAS,QAAS,CAAE,KAAMn+B,EAAE,KAAK,EAAId,CAAC,EAGtCc,EAAE,MACF,KAAK,YAAYA,EAAE,KAAMd,CAAC,EAK1B,CAAC,KAAKc,EAAE,IAAI,EAAG,CACf,QAAQ,KACJ,yCAAyCA,EAAE,IAAI,GACnE,EACgB,QACH,CACG,KAAK,OAAO,SAAWA,EAAE,OAGzBA,EAAE,KAAOo+B,GAAO,GAAGp+B,EAAE,KAAK,YAAaA,EAAE,IAAI,GAEjD,KAAK,SAASA,EAAE,KAAK,EAAI,KAAKA,EAAE,IAAI,EAAEA,EAAGd,CAAC,CAC7C,CACJ,CACD,WAAW++B,EAAS,CAChB,MAAMI,EAAM,IAAI,KAAK,CAAE,UAAW,KAAK,MAAM,CAAE,EAE/C,UAAWr+B,KAAKi+B,EACZ,OAAQj+B,EAAE,KAAI,CACV,IAAK,WACDq+B,EAAI,IACAr+B,EACA,gBACAA,EAAE,OAAO,CAAC,EAAE,IAAKzB,GAAMA,EAAEyB,EAAE,OAAO,CAAC,CAAC,CAAC,CACxC,EACI,KAAKA,EAAE,KAAK,EACZ,SAASA,EAAE,IAAI,EACpB,MACJ,IAAK,QACGA,EAAE,gBAAkB,SAAWA,EAAE,cAAgB,IACrDq+B,EAAI,IAAIr+B,EAAG,eAAe,EAAE,KAAKA,EAAE,KAAK,EAAE,SAASA,EAAE,IAAI,EACzD,MACJ,IAAK,SACDq+B,EAAI,IAAIr+B,EAAG,MAAM,EAAE,KAAKA,EAAE,KAAK,EAC/B,MACJ,IAAK,SACDq+B,EAAI,IAAIr+B,EAAG,gBAAiBA,EAAE,IAAKA,EAAE,GAAG,EACnC,KAAKA,EAAE,KAAK,EACZ,SAASA,EAAE,IAAI,EACpB,MACJ,IAAK,UACDq+B,EAAI,IAAIr+B,EAAG,gBAAiBA,EAAE,IAAKA,EAAE,GAAG,EACnC,KAAKA,EAAE,KAAK,EACZ,SAASA,EAAE,IAAI,EACpB,MACJ,IAAK,eACDq+B,EAAI,IAAIr+B,EAAG,gBAAiBA,EAAE,OAAO,EAChC,KAAKA,EAAE,KAAK,EACZ,SAASA,EAAE,IAAI,EACpB,MACJ,QACIq+B,EAAI,IAAIr+B,EAAG,eAAe,EAAE,KAAKA,EAAE,KAAK,EAAE,SAASA,EAAE,IAAI,CAChE,CAER,CAGD,OAAOA,EAAGd,EAAG,CACT,KAAK,KAAKc,EAAE,aAAa,CAC5B,CACD,QAAQA,EAAGd,EAAG,CACV,MAAMo/B,EAAKH,EACP,QACA,CACI,KAAM,SACN,MAAOn+B,EAAE,cACT,IAAKA,EAAE,KAAO,KACd,IAAKA,EAAE,KAAO,EACd,KAAMA,EAAE,MAAQ,CACnB,EACDd,CACZ,EACQo/B,EAAG,iBAAiB,SAAWp+B,GAAM,CACjCF,EAAE,KAAK,OAAO,SAASs+B,EAAG,KAAK,CAAC,CAC5C,CAAS,CACJ,CACD,aAAat+B,EAAGd,EAAG,CAEf,MAAMq/B,EAAKJ,EACP,MACA,CACI,QAAS,CAAC,oBAAoB,CACjC,EACDj/B,CACZ,EACQ,UAAWX,KAAKyB,EAAE,QAAS,CACvBm+B,EACI,OACA,CACI,KAAM5/B,EAAE,CAAC,CACZ,EACDggC,CAChB,EACY,MAAMC,EAAKL,EACP,QACA,CACI,KAAM,QACN,KAAMn+B,EAAE,MACR,MAAOzB,EAAE,CAAC,CACb,EACDggC,CAChB,EACYC,EAAG,QAAUx+B,EAAE,gBAAkBzB,EAAE,CAAC,EACpCigC,EAAG,iBAAiB,QAAUt+B,GAAM,CAChCF,EAAE,KAAKE,EAAE,cAAc,KAAK,CAC5C,CAAa,CACJ,CACJ,CAED,aAAaF,EAAGd,EAAG,CACf,MAAMqmB,EAAK4Y,EACP,QACA,CACI,KAAM,QACN,MAAOn+B,EAAE,aACZ,EACDd,CACZ,EACQqmB,EAAG,iBAAiB,SAAWrlB,GAAM,CACjCF,EAAE,KAAKulB,EAAG,KAAK,CAC3B,CAAS,CACJ,CAED,OAAOvlB,EAAGd,EAAG,CACTA,EAAE,MAAM,UAAY,SACpBi/B,EACI,SACA,CACI,QAAS,CAAC,eAAe,EACzB,KAAMn+B,EAAE,KACX,EACDd,CACZ,EAAU,iBAAiB,QAAUgB,GAAM,CAC/BF,EAAE,KAAI,CAClB,CAAS,CACJ,CAED,OAAOA,EAAGd,EAAG,CACT,MAAMu/B,EAAKN,EAAS,MAAO,CAAE,EAAEj/B,CAAC,EAChCw/B,GAAW,OAAOD,EAAI,CAClB,MAAO,CAACz+B,EAAE,eAAiB,CAAC,EAC5B,MAAO,CACH,IAAK,CAACA,EAAE,KAAO,CAAC,EAChB,IAAK,CAACA,EAAE,KAAO,CAAC,CACnB,EACD,KAAMA,EAAE,MAAQ,KAChB,SAAU,GAEV,gBAAiBA,EAAE,KAAO,KAAK,OAAO,GAClD,CAAS,EACD,MAAM2+B,EAAUhyB,GAAW,CACvB3M,EAAE,KAAK,OAAO,WAAW2M,EAAO,CAAC,CAAC,CAAC,CAC/C,EACQ,OAAA8xB,EAAG,WAAW,GAAG,MAAOE,CAAM,EAC1B3+B,EAAE,aACF,QAAQ,IAAI,8BAA+BA,EAAE,KAAK,EAClDy+B,EAAG,WAAW,GAAG,SAAUE,CAAM,GAE9BF,CACV,CAED,MAAMz+B,EAAGd,EAAG,CACR,MAAM0/B,EAAKT,EACP,QACA,CACI,KAAM,UACT,EACDj/B,CACZ,EACQ0/B,EAAG,QAAU5+B,EAAE,cACf4+B,EAAG,iBAAiB,QAAU1+B,GAAM,CAChCF,EAAE,KAAK4+B,EAAG,OAAO,CAC7B,CAAS,CACJ,CAED,cAAc5+B,EAAGd,EAAG,CAChB,MAAM2/B,EAAUV,EAAS,KAAK,EACxBW,EAAKX,EACP,SACA,CACI,SAAU,GACV,OAAQ,CACJ,SAAU,QACV,OAAQ,OACX,CACJ,EACDU,CACZ,EACQV,EAAS,KAAM,GAAIj/B,CAAC,EACpB,UAAWwU,KAAQ1T,EAAE,OAAO,CAAC,EAAG,CAE5B,MAAMk1B,EAAOl1B,EAAE,OAAO,OAAS,EAAI0T,EAAK1T,EAAE,OAAO,CAAC,CAAC,EAAI0T,EACjDjO,EAAQzF,EAAE,OAAO,OAAS,EAAI0T,EAAK1T,EAAE,OAAO,CAAC,CAAC,EAAI0T,EAClDkH,EAAO,CACT,KAAAsa,EACA,MAAAzvB,CAChB,EACwBzF,EAAE,cAAc,QAAQyF,CAAK,IAAM,KAE3CmV,EAAK,SAAW,IAGpBujB,EAAS,SAAUvjB,EAAMkkB,CAAE,CAC9B,CACD,OAAAX,EAAS,KAAM,GAAIj/B,CAAC,EACVi/B,EACN,SACA,CACI,QAAS,CAAC,kBAAkB,EAC5B,KAAM,QACT,EACDj/B,CACZ,EACU,iBAAiB,QAAUgB,GAAM,CAC/BF,EAAE,KAAK,MAAM,KAAK8+B,EAAG,eAAe,EAAE,IAAKxxB,GAAMA,EAAE,KAAK,CAAC,CACrE,CAAS,EACDyxB,GAAoBD,EAAID,CAAO,EAC/B3/B,EAAE,OAAO2/B,CAAO,EACTC,CACV,CAED,SAAS9+B,EAAGd,EAAG,CACX,MAAM2/B,EAAUV,EAAS,KAAK,EACxBW,EAAKX,EACP,SACA,CACI,OAAQ,CACJ,SAAU,OACb,CACJ,EACDU,CACZ,EAEQ,UAAWnrB,KAAQ1T,EAAE,OAAO,CAAC,EAAG,CAE5B,MAAMk1B,EAAOl1B,EAAE,OAAO,OAAS,EAAI0T,EAAK1T,EAAE,OAAO,CAAC,CAAC,EAAI0T,EACjDjO,EAAQzF,EAAE,OAAO,OAAS,EAAI0T,EAAK1T,EAAE,OAAO,CAAC,CAAC,EAAI0T,EACxDyqB,EACI,SACA,CACI,KAAAjJ,EACA,MAAAzvB,CACH,EACDq5B,CAChB,CACS,CACD,OAAAA,EAAG,MAAQ9+B,EAAE,cACb8+B,EAAG,iBAAiB,SAAW5+B,GAAM,CACjCF,EAAE,KAAK8+B,EAAG,MAAO,KAAK,QAAQ,EAC9BA,EAAG,MAAQA,EAAG,MACV9+B,EAAE,UACFA,EAAE,SAAS,KAAK,SAAU8+B,EAAG,KAAK,CAElD,CAAS,EACDC,GAAoBD,EAAID,CAAO,EAC/B3/B,EAAE,OAAO2/B,CAAO,EACTA,CACV,CAED,aAAa7+B,EAAGd,EAAG,CACf,MAAMu/B,EAAKN,EACP,MACA,CACI,OAAQ,CAAE,CACb,EACDj/B,CACZ,EACQw/B,GAAW,OAAOD,EAAI,CAClB,SAAU,GACV,MAAO,CAACz+B,EAAE,cAAc,CAAC,EAAGA,EAAE,cAAc,CAAC,CAAC,EAC9C,MAAO,CACH,IAAK,CAACA,EAAE,GAAG,EACX,IAAK,CAACA,EAAE,GAAG,CACd,EACD,gBAAiBA,EAAE,GAC/B,CAAS,EACD,MAAM2+B,EAAUhyB,GAAW,CACvB3M,EAAE,KAAK,OAAO,WAAW2M,EAAO,CAAC,CAAC,EAAG,OAAO,WAAWA,EAAO,CAAC,CAAC,CAAC,CAC7E,EACQ,OAAA8xB,EAAG,WAAW,GAAG,MAAOE,CAAM,EAC1B3+B,EAAE,YACFy+B,EAAG,WAAW,GAAG,SAAUE,CAAM,EAE9BF,CACV,CAED,KAAKz+B,EAAGd,EAAG,CAGP,MAAMiB,EAAIg+B,EACN,QACA,CACI,MAAOn+B,EAAE,cACT,KAAM,GACN,OAAQ,CAAE,KAAM,CAAG,CACtB,EACDd,CACZ,EACQiB,EAAE,iBAAiB,QAAUD,GAAM,CAC/B,GAAIF,EAAE,qBAAsB,CACpBE,EAAE,MAAQ,SACVF,EAAE,KAAKG,EAAE,KAAK,EAElB,MACH,CACDH,EAAE,KAAKG,EAAE,KAAK,CAC1B,CAAS,CACJ,CAED,QAAQH,EAAGd,EAAG,CACV,MAAMmC,EAAK88B,EACP,WACA,CAEI,OAAQ,CAEJ,MAAO,MACV,CACJ,EACDj/B,CACZ,EACQmC,EAAG,MAAQrB,EAAE,cAEbqB,EAAG,iBAAiB,QAAUnB,GAAM,CAChCF,EAAE,KAAKqB,EAAG,KAAK,CAC3B,CAAS,EACDA,EAAG,iBAAiB,OAASnB,GAAM,CAC/BF,EAAE,KAAKqB,EAAG,KAAK,CAC3B,CAAS,CACJ,CAED,YAAYwwB,EAAMpoB,EAAQ,CACtB,MAAM60B,EAAKH,EACP,OACA,CACI,aAActM,EAAK,KACnB,KAAM,UACN,qBAAsB,SACtB,yBAA0BA,EAAK,SAC/B,OAAQ,CACJ,WAAY,KACf,EACD,QAAS,CAAC,KAAK,CAClB,EACDpoB,CACZ,EAEQ,OAAA00B,EACI,IACA,CACI,QAAS,CAAC,MAAO,SAAS,CAC7B,EACDG,CACZ,EACeA,CACV,CACL,CClZA,SAASn+B,EAAEA,EAAE,EAAE,CAAC,IAAInB,EAAErB,EAAE,OAAO,KAAK,CAAC,EAAE,IAAIqB,EAAE,EAAEA,EAAErB,EAAE,OAAOqB,IAAImB,EAAEA,EAAE,QAAQ,IAAI,OAAO,MAAMxC,EAAEqB,CAAC,EAAE,MAAM,IAAI,EAAE,EAAErB,EAAEqB,CAAC,CAAC,CAAC,EAAE,OAAOmB,CAAC,CAAC,SAASD,GAAEC,EAAE,CAAC,IAAI,EAAEnB,EAAErB,EAAE,GAAG,CAACwC,EAAE,MAAM,IAAI,MAAM,+DAA+D,EAAE,EAAE,sDAAsDnB,EAAE,GAAG,EAAG,KAAIA,EAAE,GAAGrB,EAAE,EAAEA,EAAE,GAAGA,IAAIqB,GAAG,EAAE,KAAK,MAAM,KAAK,OAAQ,EAAC,EAAE,MAAM,CAAC,QAAQmB,EAAEnB,CAAC,GAAG,OAAOA,CAAC,CAAC,IAAIA,GAAE,CAAC,KAAK,QAAQ,MAAM,MAAM,OAAO,SAAS,MAAM,QAAQ,IAAI,KAAK,EAAErB,GAAE,CAAC,WAAW,aAAa,QAAQ,UAAU,IAAI,mBAAmB,OAAO,kBAAkB,OAAO,SAAS,EAAEqC,GAAE,SAASG,EAAE,CAAC,IAAI,EAAE,KAAK,KAAKA,EAAE,CAAC,EAAEA,EAAE,CAAC,EAAEA,EAAE,CAAC,EAAEA,EAAE,CAAC,CAAC,EAAE,MAAM,CAACA,EAAE,CAAC,EAAE,EAAEA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEnC,GAAE,SAASmC,EAAE,EAAE,CAAoB,IAAInB,EAAErB,EAAEqC,EAAEhC,EAAE,CAAA,EAAG6C,EAAE,+rEAA+rE,MAAM,GAAG,EAAE,IAAI7B,EAAE,EAAEA,EAAE6B,EAAE,OAAO7B,GAAG,EAAErB,EAAE,IAAIkD,EAAE7B,EAAE,CAAC,EAAE,IAAIgB,EAAE,SAASa,EAAE7B,CAAC,EAAE,CAAC,EAAEhB,EAAEL,CAAC,EAAE,KAAKqC,EAAE,IAAI,OAAOhC,EAAE,OAAO,EAAE,SAASA,CAAC,EAAE,EAAE,EAAE,EAAE6C,GAAE,CAAC,YAAY,CAAC,QAAQ,SAAS,OAAO,UAAU,IAAI,OAAO,MAAM,QAAQ,EAAE,UAAU,CAAC,QAAQ,OAAO,OAAO,UAAU,IAAI,KAAK,MAAM,MAAM,EAAE,QAAQ,CAAC,QAAQ,iBAAiB,OAAO,OAAO,IAAI,OAAO,MAAM,QAAQ,EAAE,SAAS,CAAC,QAAQ,kBAAkB,OAAO,QAAQ,IAAI,QAAQ,MAAM,QAAQ,EAAE,WAAW,CAAC,QAAQ,oBAAoB,OAAO,GAAG,IAAI,EAAE,MAAM,QAAQ,EAAE,UAAU,CAAC,QAAQ,eAAe,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,EAAE,YAAY,CAAC,QAAQ,UAAU,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,EAAE,KAAK,CAAC,OAAO,iBAAiB,EAAE,YAAY,CAAC,OAAO,SAAS,EAAE,cAAc,CAAC,OAAO,CAAC,EAAE,cAAc,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,OAAO,OAAO,EAAE,aAAa,CAAC,OAAO,YAAY,EAAE,SAAS,CAAC,QAAQ,mBAAmB,OAAO,GAAG,IAAI,KAAK,MAAM,QAAQ,CAAC,EAAEqY,GAAe,UAAU,CAAC,SAAShZ,EAAEC,EAAED,EAAE,CAAC,KAAK,OAAO,OAAO,KAAK,MAAM,OAAO,KAAK,OAAOC,EAAE,KAAK,MAAMD,CAAC,CAAC,OAAOA,EAAE,UAAU,aAAa,SAAS,EAAElB,EAAE,CAAC,IAAIrB,EAAEqC,EAAE,KAAK,MAAM,gBAAgB,MAAM,EAAEA,EAAE,aAAa,SAAS,CAAC,EAAOhB,EAAE,QAAQ,MAAM,IAArB,IAAwBrB,EAAE,kEAAkE,KAAKqB,CAAC,KAAKgB,EAAE,aAAa,aAAaG,EAAE,mBAAmB,CAAC,EAAExC,EAAE,CAAC,EAAE,EAAEA,EAAE,CAAC,EAAE,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEqC,EAAE,aAAa,eAAerC,EAAE,CAAC,CAAC,GAAGqC,EAAE,aAAa,aAAahB,CAAC,EAAE,KAAK,OAAO,YAAYgB,CAAC,CAAC,EAAEE,CAAC,IAAIa,GAAE,SAASZ,EAAE,EAAE,CAAC,KAAK,OAAO,OAAO,KAAK,MAAM,OAAO,KAAK,OAAOA,EAAE,KAAK,MAAM,CAAC,EAAEa,GAAE,CAAC,MAAM,IAAI,OAAO,IAAI,gBAAgB,EAAE,EAAEka,GAAe,UAAU,CAAC,SAASA,EAAE,EAAEhb,EAAE,CAAC,IAAIlB,EAAErB,EAAEqC,EAAEhC,EAAE,GAAY,IAAT,SAAa,EAAEgD,IAAG,KAAK,MAAM,OAAO,KAAK,OAAO,OAAO,KAAK,gBAAgB,OAAO,KAAK,OAAO,OAAO,KAAK,WAAW,OAAO,KAAK,SAAS,OAAO,KAAK,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,OAAO,OAAO,KAAK,OAAO,OAAO,KAAK,iBAAiB,OAAO,KAAK,aAAa,OAAO,KAAK,yBAAyB,KAAe,OAAO,GAAjB,UAAoB,KAAK,MAAM,EAAE,KAAK,OAAad,GAAIc,GAAE,OAAO,KAAK,gBAAgBA,GAAE,gBAAgB,KAAK,WAAW,WAAW,KAAK,OAAarD,EAAE,EAAE,QAAX,KAAkBA,EAAEqD,GAAE,MAAM,KAAK,QAAchB,EAAE,EAAE,SAAX,KAAmBA,EAAEgB,GAAE,OAAO,KAAK,iBAAuBhD,EAAE,EAAE,kBAAX,KAA4BA,EAAEgD,GAAE,gBAAgB,KAAK,WAAW,EAAE,UAAU,SAAShC,EAAE,EAAE,KAAK,EAAEA,IAAI,KAAK,SAAS,KAAK,WAAW,cAAc,QAAQ,EAAEA,EAAE,KAAK,SAAS,WAAW,IAAI,IAAI,MAAM,IAAI,MAAM,8BAA8B,EAAE,KAAK,MAAMA,EAAE,KAAK,OAAO,KAAK,KAAK,mBAAkB,EAAG,KAAK,QAAQ,CAAC,KAAK,gBAAiB,CAAA,EAAE,KAAK,aAAa,GAAG,KAAK,OAAO,KAAK,WAAW,gBAAgB,6BAA6B,KAAK,EAAE,KAAK,OAAO,aAAa,UAAU,KAAK,EAAE,KAAK,OAAO,aAAa,QAAQ,4BAA4B,EAAE,KAAK,OAAO,eAAe,gCAAgC,cAAc,8BAA8B,EAAE,KAAK,OAAO,aAAa,QAAQ,KAAK,MAAM,UAAU,EAAE,KAAK,OAAO,aAAa,SAAS,KAAK,OAAO,UAAU,EAAE,KAAK,MAAM,CAAA,EAAG,KAAK,OAAO,KAAK,WAAW,gBAAgB,6BAA6B,MAAM,EAAE,KAAK,OAAO,YAAY,KAAK,MAAM,EAAE,KAAK,iBAAiB,KAAK,WAAW,gBAAgB,6BAA6B,GAAG,EAAE,KAAK,OAAO,YAAY,KAAK,gBAAgB,CAAC,CAAC,IAAIT,EAAE2c,EAAE,UAAU,OAAO3c,EAAE,gBAAgB,SAAS,EAAE2B,EAAElB,EAAE,CAAUkB,IAAT,SAAaA,EAAE,CAAA,GAAI,IAAIvC,EAAEqC,EAAEhC,EAAE,KAAK,WAAW,gBAAgB,6BAA6B,CAAC,EAAE6C,EAAE,OAAO,KAAKX,CAAC,EAAE,IAAIlB,IAAIhB,EAAE,aAAa,OAAO,MAAM,EAAEA,EAAE,aAAa,SAAS,MAAM,GAAGL,EAAE,EAAEA,EAAEkD,EAAE,OAAOlD,IAAIK,EAAE,aAAagC,EAAEa,EAAElD,CAAC,EAAEuC,EAAEF,CAAC,CAAC,EAAE,OAAOhC,CAAC,EAAEO,EAAE,mBAAmB,UAAU,CAAC,QAAQ,KAAKsC,GAAE,KAAK,CAAC,EAAEA,GAAE,CAAC,EAAE,MAAM,EAAEtC,EAAE,kBAAkB,SAAS,EAAE,CAAC,IAAI2B,EAAElB,EAAErB,EAAE,OAAO,KAAK,CAAC,EAAE,IAAIuC,EAAE,EAAEA,EAAEvC,EAAE,OAAOuC,IAAI,KAAKlB,EAAErB,EAAEuC,CAAC,CAAC,EAAE,EAAElB,CAAC,CAAC,EAAET,EAAE,gBAAgB,UAAU,CAAC,IAAI,EAAE2B,EAAElB,EAAE,GAAGrB,EAAE,OAAO,KAAKkD,EAAC,EAAE,IAAI,EAAE,EAAE,EAAElD,EAAE,OAAO,IAAIqB,EAAEkB,EAAEvC,EAAE,CAAC,CAAC,EAAE,KAAKuC,CAAC,EAAE,OAAOlB,CAAC,EAAET,EAAE,6BAA6B,SAAS2B,EAAE,CAAC,GAAG,KAAK,iBAAiB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAEc,EAAEka,EAAE,KAAK,iBAAiB3c,EAAE,OAAO,KAAKsC,EAAC,EAAE,IAAI,EAAE,EAAE,EAAEtC,EAAE,OAAO,IAAI,GAAG,EAAE,KAAKA,EAAE,CAAC,CAAC,EAAE,UAAU,EAAEsC,GAAEtC,EAAE,CAAC,CAAC,IAAG,GAAG,aAAawC,GAAE,CAAC,GAAG,EAAE,MAAM,KAAK,EAAE,MAAM,OAAO,WAAW,QAAQ,EAAE,EAAE,MAAM,OAAO,WAAW,CAAC,EAAE,aAAa,IAAI,EAAE,KAAK,MAAM,CAAC,EAAE,EAAE,KAAK,OAAO,YAAY,EAAE,MAAM,OAAO,WAAW,CAAC,CAAC,EAAEma,EAAE,aAAa,EAAE,MAAM/a,EAAE,aAAa,CAAC,GAAG,EAAE,OAAO,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,aAAa+Y,GAAEgC,EAAE,aAAa,EAAE,MAAM/a,EAAE,aAAa,CAAC,GAAG,EAAE,OAAO,aAAa,IAAI,CAAC,CAAC,CAAC,UAAe,EAAE,MAAM,QAAQD,CAAC,IAAtB,IAAyB,EAAE,MAAM,GAAE,GAAc,EAAE,UAAb,UAA+B,EAAE,UAAX,QAAyB,EAAE,QAAQ,MAAM,IAArB,GAAuB,CAAC,IAAI8+B,EAAE,EAAE,QAAQ,GAAmBzgC,EAAE,CAAC,IAAnB,eAAsB2c,EAAE,aAAa8jB,EAAE9+B,EAAE,IAAI,EAAE,OAAO,EAAE,SAASgb,EAAE,aAAa8jB,EAAE,CAAC,CAAC,SAASh+B,EAAE,kEAAkE,KAAK,CAAC,EAAE,CAACka,EAAE,aAAa,EAAE,QAAQ/a,EAAE,mBAAmB,CAAC,EAAEa,EAAE,CAAC,EAAE,EAAEA,EAAE,CAAC,EAAE,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI9B,EAAE,WAAW8B,EAAE,CAAC,CAAC,EAAE/C,EAAE,KAAK,YAAkBA,GAAN,OAAUiB,GAAGjB,GAAGid,EAAE,aAAa,EAAE,QAAQ,WAAWhc,EAAE,SAAU,CAAA,CAAC,GAAC,CAAC,EAAEX,EAAE,oBAAoB,SAAS,EAAE,CAAC,GAAY,IAAT,SAAa,EAAE,KAAK,kBAAkB,EAAE,OAAY,EAAE,WAAR,KAA0B,EAAE,WAAV,MAAmB,EAAE,KAAK,oBAAoB,EAAE,UAAU,CAAC,EAAEA,EAAE,iBAAiB,SAAS,EAAE,CAAC,IAAI2B,EAAElB,EAAErB,EAAEqC,EAAEa,EAAEqY,EAAG,IAAI,gBAAe,kBAAkB,KAAK,MAAM,EAAE,GAAG,sFAAsF,KAAKA,CAAC,IAAIA,EAAEA,EAAE,QAAQ,oCAAoC,2CAA2C,GAAG,EAAE,IAAIhZ,EAAE,OAAO,KAAKlC,EAAC,EAAEgB,EAAE,EAAEA,EAAEkB,EAAE,OAAOlB,IAAIgB,EAAEhC,GAAEL,EAAEuC,EAAElB,CAAC,CAAC,GAAG6B,EAAE,IAAI,OAAOlD,EAAE,IAAI,GAAG,KAAKub,CAAC,IAAIA,EAAEA,EAAE,QAAQrY,EAAEb,CAAC,GAAG,OAAOkZ,CAAC,EAAE3a,EAAE,OAAO,UAAU,CAAC,OAAO,KAAK,MAAM,EAAEA,EAAE,KAAK,UAAU,CAAC,IAAI,EAAE,KAAK,gBAAgB,GAAG,EAAE2B,EAAE,KAAK,oBAAmB,EAAGA,GAAG,KAAK,aAAa,KAAKA,CAAC,EAAEA,EAAE,YAAY,CAAC,EAAE,KAAK,iBAAiB,EAAE,KAAK,QAAQ,KAAK,KAAK,gBAAe,CAAE,CAAC,EAAE3B,EAAE,QAAQ,UAAU,CAAC,KAAK,iBAAiB,KAAK,aAAa,IAAG,EAAG,KAAK,yBAAyB,KAAK,KAAK,mBAAmB,KAAK,iBAAiB,KAAK,OAAO,WAAW,CAAC,GAAG,IAAI,EAAE,KAAK,QAAQ,IAAK,EAAC,KAAK,kBAAkB,CAAC,CAAC,EAAEA,EAAE,eAAe,SAAS,EAAE,CAAC,GAAG,KAAK,iBAAiB,CAAC,IAAI2B,EAAE,KAAK,oBAAmB,EAAG,GAAGA,EAAE,CAAC,GAAGA,EAAE,WAAW,OAAO,EAAE,CAAU,KAAK,iBAAiB,WAA/B,SAA0C,KAAK,2BAA2B,KAAK,yBAAyB,CAAC,QAAQA,EAAE,SAAS,EAAE,GAAG,KAAK,yBAAyB,SAAS,KAAK,KAAK,gBAAgB,EAAE,KAAK,0BAA2B,GAAE,IAAIlB,EAAE,KAAK,gBAAgB,GAAG,EAAEkB,EAAE,YAAYlB,CAAC,EAAE,KAAK,iBAAiBA,CAAC,CAAC,GAAG,KAAK,iBAAiB,CAAC,IAAIrB,EAAE,KAAK,iBAAiB,aAAa,WAAW,EAAEA,EAAEA,GAAG,IAAIA,EAAE,GAAG,KAAK,iBAAiB,aAAa,YAAYA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEY,EAAE,MAAM,SAAS2B,EAAE,EAAE,CAAU,IAAT,SAAa,EAAEA,GAAG,KAAK,eAAeC,EAAE,iBAAiB,CAAC,EAAED,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE3B,EAAE,OAAO,SAAS2B,EAAE,CAAC,IAAI,EAAE,IAAIA,EAAE,KAAK,GAAG,KAAK,eAAeC,EAAE,4BAA4B,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE5B,EAAE,UAAU,SAAS2B,EAAE,EAAE,CAAC,KAAK,eAAeC,EAAE,qBAAqB,CAAC,EAAED,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE3B,EAAE,UAAU,SAAS2B,EAAE,EAAE,EAAE,EAAE,EAAEW,EAAE,CAAC,KAAK,eAAeV,EAAE,kCAAkC,CAAC,EAAED,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAEW,CAAC,CAAC,CAAC,CAAC,EAAEtC,EAAE,UAAU,UAAU,CAAC,IAAI,EAAE2B,EAAE,KAAK,qBAAqB,GAAG,KAAK,kBAAkB,CAAE,EAAC,EAAE,KAAK,gBAAgB,OAAO,CAAE,EAAC,EAAE,GAAGA,EAAE,KAAK,oBAAmB,KAAMA,EAAE,YAAY,CAAC,EAAE,KAAK,iBAAiB,EAAE,EAAE3B,EAAE,0BAA0B,UAAU,CAAC,IAAI,EAAE,KAAK,iBAAiB,IAAa,EAAE,WAAX,OAAoB,EAAE,aAAa,IAAI,KAAK,oBAAoB,EAAE,QAAQ,MAAM,0CAA0C,EAAE,QAAQ,EAAE,EAAEA,EAAE,iBAAiB,SAAS,EAAE,CAAC,KAAK,sBAAsB,IAAI,KAAK,sBAAsB,CAAC,EAAEA,EAAE,OAAO,SAAS2B,EAAE,EAAE,CAAC,KAAK,mBAA4B,KAAK,iBAAiB,WAA/B,QAAyC,KAAK,UAAS,EAAG,KAAK,kBAAkB,CAAC,EAAEA,EAAE,EAAE,CAAC,EAAE,KAAK,iBAAiBC,EAAE,YAAY,CAAC,EAAED,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE3B,EAAE,UAAU,UAAU,CAAC,KAAK,sBAAsB,KAAK,iBAAiB,GAAG,CAAC,EAAEA,EAAE,OAAO,SAAS2B,EAAE,EAAE,CAAC,KAAK,kBAAkB,CAAC,EAAEA,EAAE,EAAE,CAAC,EAAE,KAAK,qBAAqB,QAAQ,GAAG,EAAE,GAAG,KAAK,iBAAiBC,EAAE,YAAY,CAAC,EAAED,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,iBAAiBC,EAAE,YAAY,CAAC,EAAED,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE3B,EAAE,cAAc,SAAS2B,EAAE,EAAE,EAAE,EAAE,EAAEW,EAAE,CAAC,KAAK,kBAAkB,CAAC,EAAE,EAAE,EAAEA,CAAC,EAAE,KAAK,iBAAiBV,EAAE,wCAAwC,CAAC,KAAKD,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAEW,CAAC,CAAC,CAAC,CAAC,EAAEtC,EAAE,iBAAiB,SAAS2B,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,kBAAkB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,iBAAiBC,EAAE,wBAAwB,CAAC,IAAID,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE3B,EAAE,MAAM,SAAS,EAAE2B,EAAElB,EAAErB,EAAE,EAAE,CAAC,IAAIkD,EAAE,KAAK,mBAAmB,KAAK,kBAAkB,EAAEqY,EAAE,KAAK,mBAAmB,KAAK,kBAAkB,EAAE,GAAYrY,IAAT,QAAqBqY,IAAT,OAAW,CAAC,GAAG,EAAE,EAAE,MAAM,IAAI,MAAM,wCAAwC,EAAE,gBAAgB,EAAE,GAAGrY,IAAI,GAAGqY,IAAIhZ,GAAG,IAAIlB,GAAGkB,IAAIvC,GAAO,IAAJ,EAAM,KAAK,OAAO,EAAEuC,CAAC,MAAM,CAAC,IAAI,EAAEF,GAAE,CAACa,EAAE,EAAEqY,EAAEhZ,CAAC,CAAC,EAAEc,EAAEhB,GAAE,CAAChB,EAAE,EAAErB,EAAEuC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAEc,EAAE,CAAC,GAAG,EAAE,CAAC,EAAEA,EAAE,CAAC,EAAE,CAAC,IAAIka,EAAE,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC,EAAEla,EAAE,CAAC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,EAAEzC,EAAEyB,GAAE,CAAC,EAAE,CAAC,EAAEgB,EAAE,CAAC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,EAAEg+B,EAAE,EAAE,KAAK,IAAI9jB,EAAE,CAAC,EAAEhc,EAAE,EAAE8/B,EAAEzgC,EAAE,CAAC,EAAEN,EAAEiC,EAAE8+B,EAAEzgC,EAAE,CAAC,EAAEuC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAACE,EAAE,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC,EAAE3D,EAAE,SAAS8C,EAAE,CAAC,IAAID,EAAEC,EAAE,CAAC,EAAE,OAAOA,EAAE,CAAC,GAAG,EAAE,KAAK,KAAKD,CAAC,EAAE,CAAC,KAAK,KAAKA,CAAC,CAAC,EAAEU,EAAEvD,EAAEyD,CAAC,EAAEwM,EAAEjQ,EAAE,CAAC,EAAE,KAAK,OAAO6B,EAAE4B,EAAE,CAAC,EAAE,EAAE7C,EAAE6C,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI5B,EAAEjB,EAAE,EAAE2C,EAAE0M,CAAC,CAAC,MAAM,KAAK,OAAO,EAAEpN,CAAC,CAAC,CAAC,CAAC,EAAE3B,EAAE,OAAO,UAAU,CAAC,KAAK,mBAA4B,KAAK,iBAAiB,WAA/B,QAAyC,KAAK,iBAAiB,aAAa,cAAc,qBAAqB,EAAE,KAAK,0BAAyB,EAAG,KAAK,6BAA6B,QAAQ,EAAE,EAAEA,EAAE,KAAK,UAAU,CAAC,KAAK,mBAA4B,KAAK,iBAAiB,WAA/B,QAAyC,KAAK,iBAAiB,aAAa,cAAc,qBAAqB,EAAE,KAAK,0BAAyB,EAAG,KAAK,6BAA6B,MAAM,EAAE,EAAEA,EAAE,KAAK,SAAS,EAAE2B,EAAElB,EAAErB,EAAE,CAAC,KAAK,mBAA4B,KAAK,iBAAiB,WAA/B,QAAyC,KAAK,UAAS,EAAG,KAAK,OAAO,EAAEuC,CAAC,EAAE,KAAK,OAAO,EAAElB,EAAEkB,CAAC,EAAE,KAAK,OAAO,EAAElB,EAAEkB,EAAEvC,CAAC,EAAE,KAAK,OAAO,EAAEuC,EAAEvC,CAAC,EAAE,KAAK,OAAO,EAAEuC,CAAC,EAAE,KAAK,YAAY,EAAE3B,EAAE,SAAS,SAAS,EAAE2B,EAAElB,EAAErB,EAAE,CAAC,IAAIqC,EAAEA,EAAE,KAAK,gBAAgB,OAAO,CAAC,EAAE,EAAE,EAAEE,EAAE,MAAMlB,EAAE,OAAOrB,CAAC,EAAE,EAAE,EAAE,KAAK,oBAAqB,EAAC,YAAYqC,CAAC,EAAE,KAAK,iBAAiBA,EAAE,KAAK,6BAA6B,MAAM,CAAC,EAAEzB,EAAE,WAAW,SAAS,EAAE2B,EAAElB,EAAErB,EAAE,CAAC,IAAIqC,EAAEA,EAAE,KAAK,gBAAgB,OAAO,CAAC,EAAE,EAAE,EAAEE,EAAE,MAAMlB,EAAE,OAAOrB,CAAC,EAAE,EAAE,EAAE,KAAK,oBAAmB,EAAG,YAAYqC,CAAC,EAAE,KAAK,iBAAiBA,EAAE,KAAK,6BAA6B,QAAQ,CAAC,EAAEzB,EAAE,cAAc,UAAU,CAAC,IAAI,EAAE,KAAK,sBAAsB,GAAG,EAAE,CAAC,QAAQ2B,EAAE,EAAE,aAAa,WAAW,EAAElB,EAAE,KAAK,OAAO,WAAW,CAAC,EAAErB,EAAEqB,EAAE,WAAWgB,EAAErC,EAAE,OAAO,EAAEqC,GAAG,EAAEA,IAAIrC,EAAEqC,CAAC,GAAGhB,EAAE,YAAYrB,EAAEqC,CAAC,CAAC,EAAE,KAAK,iBAAiBhB,EAAE,KAAK,aAAa,CAAA,EAAGkB,GAAG,KAAK,eAAeA,CAAC,CAAC,CAAC,EAAE3B,EAAE,UAAU,SAAS,EAAE2B,EAAElB,EAAErB,EAAE,CAAC,GAAO,IAAJ,GAAWuC,IAAJ,GAAOlB,IAAI,KAAK,OAAOrB,IAAI,KAAK,OAAO,CAAC,IAAIqC,EAAEhC,EAAE,KAAK,oBAAmB,EAAGgC,EAAE,KAAK,gBAAgB,OAAO,CAAC,EAAE,EAAE,EAAEE,EAAE,MAAMlB,EAAE,OAAOrB,EAAE,KAAK,SAAS,EAAE,EAAE,EAAEK,EAAE,YAAYgC,CAAC,CAAC,MAAM,KAAK,cAAe,CAAA,EAAEzB,EAAE,qBAAqB,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,gBAAgB,iBAAiB,CAAC,GAAG2B,GAAE,KAAK,KAAK,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,cAAc,gBAAgB,EAAE,EAAE,EAAE,OAAO,KAAK,OAAO,YAAY,CAAC,EAAE,IAAIgZ,GAAE,EAAE,IAAI,CAAC,EAAE3a,EAAE,qBAAqB,SAAS,EAAE,EAAE,EAAE,EAAE,EAAEsC,EAAE,CAAC,IAAIE,EAAE,KAAK,gBAAgB,iBAAiB,CAAC,GAAGb,GAAE,KAAK,KAAK,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,EAAEW,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,cAAc,gBAAgB,EAAE,EAAE,EAAE,OAAO,KAAK,OAAO,YAAYE,CAAC,EAAE,IAAImY,GAAEnY,EAAE,IAAI,CAAC,EAAExC,EAAE,YAAY,UAAU,CAAC,IAAI,EAAE,sVAAsV,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI2B,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,KAAK,EAAE,CAAC,GAAG,OAAO,OAAO,EAAE,CAAC,GAAG,aAAa,OAAO,EAAE,CAAC,GAAG,SAAS,WAAW,EAAE,CAAC,GAAG,SAAS,KAAK,IAAI,EAAE,OAAoB,KAAK,kBAAnB,cAAqCA,EAAE,WAAW,aAAa,KAAK,aAAaA,EAAE,KAAK,KAAK,YAAYA,CAAC,CAAC,EAAE3B,EAAE,eAAe,SAAS,EAAE2B,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,IAAIlB,EAAE,KAAK,gBAAgB,GAAG,EAAE,OAAOA,EAAE,eAAe,+BAA+B,aAAa,EAAE,IAAI,EAAEA,EAAE,YAAYkB,CAAC,EAAElB,CAAC,CAAC,OAAOkB,CAAC,EAAE3B,EAAE,YAAY,SAAS,EAAE2B,EAAEF,EAAEhC,EAAE,CAAC,IAAI6C,EAAE,KAAK,cAAc,EAAE,KAAK,oBAAmB,EAAG,GAAGA,EAAE,CAAC,IAAIE,EAAEC,EAAEka,EAAE,KAAK,gBAAgB,OAAO,CAAC,cAAcra,EAAE,OAAO,YAAYA,EAAE,KAAK,aAAaA,EAAE,MAAM,cAAcA,EAAE,OAAO,kBAAkBA,EAAE,WAAW,EAAEX,EAAE,EAAEF,EAAE,eAAegB,EAAE,KAAK,UAAUhC,GAAEgC,CAAC,GAAGhC,GAAE,OAAO,qBAAqB+B,EAAE,KAAK,aAAapD,GAAEoD,CAAC,GAAGpD,GAAE,WAAW,EAAE,EAAE,EAAEud,EAAE,YAAY,KAAK,WAAW,eAAe,CAAC,CAAC,EAAE,KAAK,iBAAiBA,EAAE,KAAK,6BAA6Bld,CAAC,EAAE,EAAE,YAAY,KAAK,eAAe6C,EAAEqa,CAAC,CAAC,CAAC,CAAC,EAAE3c,EAAE,SAAS,SAAS,EAAE2B,EAAElB,EAAE,CAAC,KAAK,YAAY,EAAEkB,EAAElB,EAAE,MAAM,CAAC,EAAET,EAAE,WAAW,SAAS,EAAE2B,EAAElB,EAAE,CAAC,KAAK,YAAY,EAAEkB,EAAElB,EAAE,QAAQ,CAAC,EAAET,EAAE,YAAY,SAAS,EAAE,CAAC,OAAO,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,MAAM,YAAY,CAAC,CAAC,EAAEA,EAAE,IAAI,SAAS2B,EAAE,EAAE,EAAE,EAAE,EAAEW,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,MAAM,GAAG,EAAE,KAAK,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,MAAMA,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,IAAIqY,EAAE,EAAEhZ,EAAE,EAAE,KAAK,IAAI,CAAC,EAAEc,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,EAAEka,EAAEhb,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE3B,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,EAAEygC,EAAEn+B,EAAE,EAAE,EAAE3B,EAAE,EAAE,EAAEA,EAAE,IAAIA,GAAG,EAAE,KAAK,IAAIga,EAAErY,EAAE3B,EAAE,KAAK,GAAG,EAAE,EAAEA,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,OAAOgc,EAAE3c,CAAC,EAAE,KAAK,iBAAiB4B,EAAE,uEAAuE,CAAC,GAAG,EAAE,GAAG,EAAE,cAAc,EAAE,aAAa+Y,EAAE,UAAU8lB,EAAE,KAAK,EAAE,KAAKh+B,CAAC,CAAC,CAAC,EAAE,KAAK,kBAAkB,CAAC,EAAE,EAAE,EAAEA,CAAC,CAAC,CAAC,EAAEzC,EAAE,KAAK,UAAU,CAAC,IAAIS,EAAE,KAAK,sBAAsBrB,EAAE,KAAK,gBAAgB,UAAU,EAAEqC,EAAEE,GAAE,KAAK,KAAK,EAAElC,EAAE,KAAK,gBAAgB,GAAG,EAAEgB,GAAG,KAAK,mBAAmB,KAAK,0BAA2B,EAACA,EAAE,YAAY,KAAK,gBAAgB,EAAErB,EAAE,aAAa,KAAKqC,CAAC,EAAErC,EAAE,YAAY,KAAK,gBAAgB,EAAE,KAAK,OAAO,YAAYA,CAAC,EAAEqB,EAAE,aAAa,YAAYmB,EAAE,aAAa,CAAC,GAAGH,CAAC,CAAC,CAAC,EAAEhB,EAAE,YAAYhB,CAAC,EAAE,KAAK,iBAAiBA,EAAE,EAAEO,EAAE,UAAU,UAAU,CAAC,IAAI,EAAE2B,EAAElB,EAAErB,EAAEqC,EAAEhC,EAAE6C,EAAEqY,EAAEnY,EAAEC,EAAEzC,EAAEygC,EAAE9/B,EAAEjB,EAAE6C,EAAE,MAAM,UAAU,MAAM,KAAK,SAAS,EAAE,EAAEA,EAAE,CAAC,EAAEzD,EAAE,EAAEuD,EAAE,EAAE,GAAOE,EAAE,SAAN,EAAa,EAAEA,EAAE,CAAC,EAAEZ,EAAEY,EAAE,CAAC,EAAE9B,EAAEgB,EAAE,EAAE,MAAMrC,EAAEK,EAAE,EAAE,eAAmB8C,EAAE,SAAN,EAAa,EAAEA,EAAE,CAAC,EAAEZ,EAAEY,EAAE,CAAC,EAAE9B,EAAE8B,EAAE,CAAC,EAAEnD,EAAEmD,EAAE,CAAC,EAAEd,EAAE,EAAE,MAAMhC,EAAE,EAAE,WAAW,CAAC,GAAO8C,EAAE,SAAN,EAAa,MAAM,IAAI,MAAM,oDAAoD,UAAU,MAAM,EAAEzD,EAAEyD,EAAE,CAAC,EAAEF,EAAEE,EAAE,CAAC,EAAEd,EAAEc,EAAE,CAAC,EAAE9C,EAAE8C,EAAE,CAAC,EAAE,EAAEA,EAAE,CAAC,EAAEZ,EAAEY,EAAE,CAAC,EAAE9B,EAAE8B,EAAE,CAAC,EAAEnD,EAAEmD,EAAE,CAAC,CAAC,CAACD,EAAE,KAAK,oBAAmB,EAAG,IAAIyM,EAAE,aAAa,EAAE,KAAKpN,EAAE,IAAI,GAAG,aAAagb,GAAG,IAAIhC,EAAE,EAAE,OAAM,EAAG,UAAU,EAAE,GAAG,YAAYA,EAAE,WAAW,OAAO,EAAE,CAAC,IAAInY,EAAEmY,EAAE,WAAW,CAAC,EAAEnY,EAAE,WAAW,QAAQ9C,EAAE8C,EAAE,WAAW,CAAC,EAAE,aAAa,IAAI,EAAE,KAAK,MAAM9C,CAAC,EAAEA,EAAE,KAAK,OAAO,YAAY8C,EAAE,WAAW,CAAC,CAAC,EAAE,GAAGC,EAAEkY,EAAE,WAAW,CAAC,EAAE,CAAC,IAAIhc,EAAE8D,EAAE,aAAa,WAAW,EAAEA,EAAE,aAAa,YAAY9D,EAAEA,EAAE,IAAIoQ,EAAEA,CAAC,EAAEzM,EAAE,YAAYG,CAAC,CAAC,CAAC,UAAqB,EAAE,WAAb,UAA+B,EAAE,WAAV,MAAmB,CAAC,IAAIzC,EAAE,KAAK,gBAAgB,OAAO,GAAG,aAAa,QAAQS,CAAC,EAAET,EAAE,aAAa,SAASZ,CAAC,EAAEY,EAAE,aAAa,sBAAsB,MAAM,EAAElB,GAAGuD,GAAGZ,IAAI,EAAE,OAAOhC,IAAI,EAAE,OAAO,CAAC,IAAIghC,EAAE,KAAK,WAAW,cAAc,QAAQ,GAAG,MAAMhgC,EAAEggC,EAAE,OAAOrhC,EAAE,EAAEuB,EAAE8/B,EAAE,WAAW,IAAI,GAAG,OAAO9/B,EAAE,UAAU,EAAE7B,EAAEuD,EAAEZ,EAAEhC,EAAE,EAAE,EAAEgB,EAAErB,CAAC,EAAE,EAAEqhC,CAAC,CAACzgC,EAAE,aAAa,YAAY+O,CAAC,EAAE/O,EAAE,eAAe,+BAA+B,aAAwB,EAAE,WAAb,SAAsB,EAAE,UAAW,EAAC,EAAE,aAAa,KAAK,CAAC,EAAEsC,EAAE,YAAYtC,CAAC,CAAC,CAAC,EAAEA,EAAE,cAAc,SAAS,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,KAAK,WAAW,gBAAgB,6BAA6B,SAAS,EAAE,EAAE2B,GAAE,KAAK,KAAK,EAAE,OAAO,EAAE,aAAa,KAAK,CAAC,EAAE,EAAE,aAAa,QAAQ,EAAE,KAAK,EAAE,EAAE,aAAa,SAAS,EAAE,MAAM,EAAa,EAAE,WAAb,UAA+B,EAAE,WAAV,QAAqB,EAAE,KAAK,WAAW,gBAAgB,6BAA6B,OAAO,GAAG,aAAa,QAAQ,EAAE,KAAK,EAAE,EAAE,aAAa,SAAS,EAAE,MAAM,EAAE,EAAE,eAAe,+BAA+B,aAAwB,EAAE,WAAb,SAAsB,EAAE,UAAS,EAAG,EAAE,aAAa,KAAK,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,KAAK,OAAO,YAAY,CAAC,GAAG,aAAagb,IAAI,EAAE,YAAY,EAAE,OAAO,WAAW,CAAC,CAAC,EAAE,KAAK,OAAO,YAAY,CAAC,GAAG,IAAIna,GAAE,EAAE,IAAI,CAAC,EAAExC,EAAE,YAAY,SAAS,EAAE,CAAC,KAAK,SAAS,GAAG,EAAE,OAAO,EAAE,EAAE,KAAK,GAAG,EAAE,IAAI,EAAE2c,CAAC,EAAG,ECqC1wjB,MAAM+jB,EAAS,CAMd,YAAapmB,EAAIjH,EAAO,CAAA,EAAGstB,EAAO,CAAA,EAAI,CACrC,KAAK,QAAQ,SACT,OAAOrmB,GAAQ,SAClB,KAAK,SAAS,SAAS,eAAe,IAAIA,CAAG,EAG7C,KAAK,SAAWA,EAEjB,MAAMsmB,EAAM,KAAK,SAAS,sBAAqB,EAE/C,KAAK,OAASA,EAAI,OAClB,KAAK,MAAOA,EAAI,MAEhB,KAAK,OAAO,CAAE,EACd,KAAK,YAAY,GACjB,KAAK,YAAY,GACjB,KAAK,aAAa,GAClB,QAASC,KAAYF,EACpB,GAAI,CACH,IAAIjC,EAAM3L,EAAS,SAAS8N,CAAQ,EACpC,KAAK,OAAOnC,EAAM,OAAO,QAAQ,EAAEA,EACnC,KAAK,YAAY,KAAKA,EAAM,OAAO,QAAQ,EAC3C,KAAK,eAAeA,EAAM,MAAM,CAChC,OAAQ/8B,EAAG,CAEX,QAAQ,MAAMA,CAAC,CACf,CAGF,KAAK,eAAc,EACnB,KAAK,OAAQ,KAGJ,KAAK,SAAS,MAAM,SAAS,WAEhC,KAAK,OAASi+B,EAAS,SAAS,CAC5B,QAAQ,CAAC,oBAAoB,EAC7B,MAAM,KAAK,MACX,OAAO,KAAK,MACxB,EAAU,KAAK,QAAQ,EAEf,KAAK,IAAM,KAAK,OAAO,WAAW,IAAI,EAIlCvsB,EAAO,aACP,KAAK,eAAe,KAAK,MAAM,EAC/B,KAAK,WAAW,IAWjB,KAAK,YAAY,GACjB,KAAK,YAAc,GACpB,KAAK,WAAa,OACjB,KAAK,WAAa,OAGlB,KAAK,aAAa,EAElB,KAAK,OAAO,GAEZ,KAAK,oBAAoB,GAG5B,KAAK,UAAU,GAGRA,EAAO,0BACP,KAAK,cAAa,EACrB,KAAK,cAAa,EAClB,KAAK,sBAAqB,EAC1B,KAAK,qBAAoB,EACzB,KAAK,wBAAuB,EAC5B,KAAK,SAAS,iBAAiB,WAAW1R,GAAG,CACzCA,EAAE,eAAc,CAChC,CAAa,GAKC0R,EAAO,aACN,KAAK,cAAa,EAGlBA,EAAO,aACP,KAAK,WAAW,IAG7B,KAAK,QAAQ,SACP,KAAK,OAAOA,EAGT,KAAK,QAAQ,EACb,KAAK,QAAQ,EAEtB,KAAK,YAAYusB,EAAS,IAAI,CAC7B,QAAQ,CAAC,MAAM,aAAa,UAAU,oBAAoB,CAC7D,EAAI,KAAK,QAAQ,EACf,KAAK,aAAaA,EAAS,MAAM,CAChC,QAAQ,CAAC,qBAAqB,CACjC,EAAI,KAAK,QAAQ,CACZ,CAEJ,mBAAmBkB,EAAI,CAClB,KAAK,OAAO,0BACf,KAAK,kBAAiB,EACtB,KAAK,gBAAe,GAErB,KAAK,OACL,KAAK,QAAQA,EACT,KAAK,OAAO,0BACf,KAAK,cAAa,EAElB,KAAK,cAAa,EAEhB,CAED,iBAAiB,CACb,QAASxgC,KAAM,KAAK,aAChB,KAAK,aAAaA,CAAE,EAAE,MAAK,EAE/B,KAAK,aAAa,EACrB,CAED,eAAe+S,EAAO,CACdA,EAAO,iBAGX,MAAM0tB,EAAYnB,EAAS,MAAM,CAC7B,QAAQ,CAAC,mBAAmB,EAC5B,KAAKvsB,EAAO,YACZ,UAAU,EACtB,EAAU,KAAK,QAAQ,EACf0tB,EAAW,iBAAiB,QAAQp/B,GAAG,CACnC,KAAK,iBAAiBA,EAAE0R,EAAO,QAAQ,CACnD,CAAS,EACD0tB,EAAW,iBAAiB,OAAOp/B,GAAG,CAClC,KAAK,SAAS,MAAM,OAAO,WACvC,CAAS,EACDo/B,EAAW,iBAAiB,YAAYp/B,GAAG,CACvCA,EAAE,yBAAwB,CAEtC,CAAS,EAGDo/B,EAAW,iBAAiB,UAAWp/B,GAAI,CACvC,IAAIiB,EAAI,KAAK,WAAWjB,CAAC,EAAE,EAAG,KAAK,QAG/Bq/B,EAAS,KACb,GAAIp+B,EAAE,EACFo+B,GAAQ,KAAK,YAAY,CAAC,MAG1B,SAASC,KAAM,KAAK,OAAO,CACvB,MAAMr/B,EAAI,KAAK,OAAOq/B,CAAE,EAExB,GAAIr+B,GAAGhB,EAAE,KAAOgB,GAAGhB,EAAE,OAAO,CACxBo/B,EAAQC,EACR,KAEH,CACJ,CAEDD,IAAS3tB,EAAO,WAGpB2tB,EAAQA,GAAU,KAAK,YAAY,KAAK,YAAY,OAAO,CAAC,EAC5D,KAAK,YAAY,OAAO,KAAK,YAAY,QAAQ3tB,EAAO,QAAQ,EAAE,CAAC,EACnE,KAAK,YAAY,OAAO,KAAK,YAAY,QAAQ2tB,CAAM,EAAE,EAAE,EAAE3tB,EAAO,QAAQ,EAC5E,KAAK,OAAM,EAEvB,CAAS,EAED,KAAK,YAAYA,EAAO,QAAQ,EAAE0tB,CAErC,CAED,iBAAiB,EAAEpf,EAAG,CAClB,GAAI,KAAK,aAAaA,CAAE,EACpB,OAEJ,MAAM/f,EAAK,KAAK,OAAO+f,CAAE,EACzB,KAAK,aAAaA,CAAE,EAAI,IAAI6d,GAAe,CACvC,UAAU,IACV,IAAI,KAAK,SAAW,SACpB,MAAM,IACN,MAAM59B,EAAE,OAAO,YACf,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,EACzB,QAAQ,IAAI,OAAO,KAAK,aAAa+f,CAAE,CAC1C,EAAC/f,EAAE,YAAY,IAAI,CAAC,CACxB,CAED,aAAayR,EAAO,CAEZ,KAAK,oBACAA,EAAO,SACRA,EAAO,OAAO,KAGzB,CAED,eAAeilB,EAAO,CAClB,KAAK,aAAesH,EAAS,SAAS,CAClC,OAAO,CACH,SAAS,WACT,IAAI,MACJ,KAAK,KACR,EACD,MAAM,IACN,OAAO,KAAK,MACxB,EAAU,KAAK,QAAQ,EAEf,KAAK,UAAU,KAAK,aAAa,WAAW,IAAI,CACnD,CAOD,eAAepqB,EAAM,CACjB,KAAK,aAAaA,CACrB,CAMD,QAAQ,CACJ,OAAO,KAAK,QACf,CASD,qBAAqB0rB,EAAS7d,EAAKkL,EAAM,CACrC,KAAK,oBAAoBlL,CAAI,EAAE,CAC3B,IAAI6d,EAAS,IACb,MAAMA,EAAS,MACf,IAAIA,EAAS,IACb,MAAM3S,CACT,EACD,KAAK,aAAa,EACrB,CAOD,wBAAwBlL,EAAK,CACzB,OAAO,KAAK,oBAAoBA,CAAI,EACpC,KAAK,aAAa,EACrB,CAED,6BAA6B,CACzB,KAAK,oBAAoB,GACzB,KAAK,aAAa,EACrB,CAGD,eAAe,CACX,IAAIqb,EAAM,IAAIjL,GACVpgB,EAASqrB,EAAM,YAEnB,YAAK,OAAOrrB,EAAO,QAAQ,EAAEqrB,EAC7B,KAAK,YAAY,QAAQrrB,EAAO,QAAQ,EACxC,KAAK,eAAeA,CAAM,EACnB,IACV,CAUD,YAAYsO,EAAG2O,EAAK,CAChB,KAAK,UAAU3O,CAAE,EAAE2O,CACtB,CAQD,eAAe3O,EAAG,CACd,OAAO,KAAK,UAAUA,CAAE,CAC3B,CAQD,SAAStO,EAAO/T,EAAM6hC,EAAa,CAC/B,IAAIzC,EAAM3L,EAAS,SAAS1f,CAAM,EAElC,KAAK,OAAOqrB,EAAM,OAAO,QAAQ,EAAEA,EAC/Bp/B,GAASA,GAAO,EAChB,KAAK,YAAY,OAAOA,EAAM,EAAEo/B,EAAM,OAAO,QAAQ,EAGrD,KAAK,YAAY,KAAKA,EAAM,OAAO,QAAQ,EAE/C,KAAK,eAAc,EACnB,KAAK,eAAeA,EAAM,MAAM,EAC3ByC,GACD,KAAK,eAAe,cAAczC,EAAM,MAAM,CAErD,CAED,eAAelwB,EAAK7C,EAAKhK,EAAE,CACvB,QAASggB,KAAM,KAAK,UAChB,KAAK,UAAUA,CAAE,EAAEnT,EAAK7C,EAAKhK,CAAC,CAErC,CAED,iBAAiB,CACb,IAAIy/B,EAAY,KAAK,YAAY,MAAK,EACtC,QAASzf,KAAMyf,EACX,KAAK,YAAYzf,EAAG,EAAI,CAE/B,CAMD,YAAY0f,EAASC,EAAYC,EAAc,CAC3C,GAAI,CAAC,KAAK,OAAOF,CAAQ,EACrB,OAAO,KAEX,KAAK,YAAc,KAAK,YAAY,OAAO1/B,GAAKA,IAAM0/B,CAAQ,EACzDC,GACD,KAAK,QAAQ,GAAK,EAAI,EAE1B,KAAK,YAAYD,CAAQ,EAAE,OAAM,EACjC,OAAO,KAAK,YAAYA,CAAQ,EAChC,KAAK,aAAaA,CAAQ,GAAK,KAAK,aAAaA,CAAQ,EAAE,QAC3D,OAAO,KAAK,aAAaA,CAAQ,EAE7B,KAAK,QACX,KAAK,OAAO,YAAYA,CAAQ,EAE9B,IAAIhuB,EAAU,KAAK,OAAOguB,CAAQ,EAAE,OAKpC,GAJA,OAAO,KAAK,OAAOA,CAAQ,EACrBE,GACF,KAAK,eAAe,gBAAgBluB,CAAM,EAE1C,KAAK,YAAY,SAAS,EAC1B,QAASmuB,KAAQ,KAAK,UAAU,YAC5B,KAAK,UAAU,YAAeA,CAAI,EAAE,IAAI,EAGhD,OAAOnuB,CACV,CAED,eAAeguB,EAAS,CAEpB,OADY,KAAK,OAAOA,CAAQ,EACnB,WAChB,CAED,SAASA,EAAS,CACd,OAAO,KAAK,OAAOA,CAAQ,CAC9B,CAED,oBAAoB,CAChB,IAAII,EAAQ,CAAA,EACZ,QAAS9f,KAAM,KAAK,YAChB8f,EAAQ,KAAK,KAAK,OAAO9f,CAAE,EAAE,UAAS,CAAE,EAE5C,OAAO8f,CACV,CAED,kBAAkBJ,EAASj7B,EAAIc,EAAM,CACjC,IAAIw3B,EAAQ,KAAK,OAAO2C,CAAQ,EAC3B3C,IAGLA,EAAM,mBAAmBt4B,EAAIc,CAAK,EAC9Bd,IAAM,kBACN,KAAK,OAAOi7B,CAAQ,EAAE,cAAgB,KAAK,OAAOn6B,CAAK,IAEtDd,IAAM,SAAWA,IAAM,YAAc,KAAK,QAC3C,KAAK,OAAO,YAAYi7B,CAAQ,EAEvC,CAED,mBAAmBA,EAAS7S,EAAW,CACnC,IAAIkQ,EAAQ,KAAK,OAAO2C,CAAQ,EAChC,QAASj7B,KAAOooB,EACZkQ,EAAM,mBAAmBt4B,EAAIooB,EAAWpoB,CAAG,CAAC,EACxCA,IAAM,SAAW,KAAK,QACtB,KAAK,OAAO,YAAYi7B,CAAQ,CAG3C,CAUD,sBAAsBA,EAAS/Q,EAAK,CACpB,KAAK,OAAO+Q,CAAQ,EAC1B,kBAAkB/Q,CAAI,CAC/B,CAQD,sBAAsB+Q,EAAS/Q,EAAK,CACpB,KAAK,OAAO+Q,CAAQ,EAC1B,iBAAiB/Q,CAAI,CAC9B,CAED,sBAAsB+Q,EAAS/Q,EAAK,CAChC,IAAIoO,EAAQ,KAAK,OAAO2C,CAAQ,EAC5B3C,IACAA,EAAM,eAAepO,EAE5B,CAGD,gBAAgB,CACZ,QAASoR,KAAQ,KAAK,YAAY,CAC9B,IAAIhD,EAAQ,KAAK,OAAOgD,CAAI,EAGxBC,EAAUjD,EAAM,OAAO,cAC3B,GAAIiD,EAAQ,CACR,IAAIC,EAAc,KAAK,OAAOD,CAAO,EACjCC,IACAlD,EAAM,cAAckD,EAE3B,CACJ,CACJ,CAGD,wBAAwBP,EAAS,CAE7B,OADY,KAAK,OAAOA,CAAQ,EACnB,mBAAmB,KAAK,IAAI,KAAK,MAAM,KAAK,GAAG,CAC/D,CAcD,OAAQjtB,EAAIxT,EAAMye,EAAIwiB,EAAgB,CAElC,GADA,KAAK,qBAAqBA,EACtBjhC,EAAMye,EAAI,CACV,MAAMyiB,EAAMlhC,EACZA,EAAMye,EACNA,EAAIyiB,CACP,CACG1tB,GACA,KAAK,IAAIA,EACT,KAAK,MAAMxT,EACX,KAAK,IAAIye,EACT,KAAK,QAAO,GAGZ,KAAK,QAAQ,GAAK,EAAI,CAE7B,CAED,iBAAiB,CACb,IAAI7c,EAAG,EACHu/B,EAAO,CAAE,EACb,QAASC,KAAO,KAAK,YAAY,CAC7B,IAAItD,EAAQ,KAAK,OAAOsD,CAAG,EACvBz/B,EAAIm8B,EAAM,OAAO,MACjBA,EAAM,OAAO,OAGbn8B,EACKw/B,EAAOx/B,CAAC,IACTC,GAAGk8B,EAAM,OAAO,OAChBqD,EAAOx/B,CAAC,EAAE,IAIdC,GAAGk8B,EAAM,OAAO,OAEvB,CACD,OAAOl8B,CACV,CAGD,MAAM,eAAe6R,EAASC,EAAOgV,EAAO3d,EAAM,CAC9C,IAAIkY,EAAW,CAAA,EACf,KAAK,eAAe,GACpB,QAASwd,KAAa,KAAK,YAAY,CACnC,IAAI3C,EAAQ,KAAK,OAAO2C,CAAQ,EAC5B3C,EAAM,OAAO,OAGjB,KAAK,eAAe,KAAK2C,CAAQ,EACjCxd,EAAS,KAAK6a,EAAM,YAAY,KAAK,IAAIrqB,EAAQC,EAAMgV,EAAM3d,CAAI,CAAC,EACrE,CACD,OAAO,MAAM,QAAQ,IAAIkY,EAAS,IAAInkB,GAAKA,EAAE,MAAMiC,GAAKA,CAAC,CAAC,CAAC,CAC9D,CAUD,QAAQ2nB,EAAM2Y,EAAgBC,EAAK,CAC/B,KAAK,aAAa,MAAM,QAAQ,OAChC,IAAI1M,EACA2M,EACA9tB,EACAC,EACAZ,EAAO,KACPsf,EACA5e,EACAguB,EACAC,EAEJjuB,EAAM,KAAK,IACXguB,EAAgB,KAAK,MACrBC,EAAc,KAAK,IACnB,KAAK,YAAY,KAAK,IAAI,KAAK,OAAO,KAAK,OAAO,MAClD,IAAIC,EAAa,GAIjB,GAHI,KAAK,MAAQ,KAAK,KAAK,cAAcluB,EAAKguB,EAAeC,EAAa,KAAK,UAAU,IACrFC,EAAa,IAEb,CAACA,GAAgB,CAAChZ,GAAS,CAAC,KAAK,aACjC,KAAK,aAAa,GAClB,KAAK,WAAU,EACV5V,EAAK,sBACNA,EAAK,eAAe,eAAe,CAC/B,IAAIA,EAAK,IACT,MAAM,SAASA,EAAK,KAAK,EACzB,IAAI,SAASA,EAAK,GAAG,CACzC,CAAiB,EAELA,EAAK,qBAAqB,GAC1BA,EAAK,QAAQ,MAEZ,CAcD,GAZA,KAAK,aAAa,GACbwuB,GAKD1M,EAAY,KAAK,OAAO,MACxBnhB,EAAU,KAAK,IAAI,EAAG,KAAK,MAAM,KAAK,KAAK,CAAC,IAL5CmhB,GAAe,KAAK,aAAa,EAAG,GAAK,KAAK,OAAO,MACrDnhB,EAAU,KAAK,IAAI,EAAG,KAAK,MAAM,KAAK,MAAO,KAAK,aAAa,KAAK,OAAO,MAAM,KAAK,UAAW,CAAC,GAMtG8tB,EAAU,KAAK,MAAM3M,EAAW,KAAK,UAAU,EAE/ClhB,EAAQD,EAAU8tB,EACdzuB,EAAK,SAAW,CAAEwuB,EAAK,CACnB5Y,GAAS2Y,EACTvuB,EAAK,gBAAgB,GAGrBA,EAAK,gBAAgB,WAEzB,MACH,CACGuuB,GACI,KAAK,OACL5tB,EAAQ,KAAK,KAAK,QAClBC,EAAM,KAAK,KAAK,OAKnB4tB,IACDxuB,EAAK,QAAU,CAAC,MAAOW,EAAS,IAAKC,CAAK,EAE1CZ,EAAK,YAAY,MAAM,QAAQ,SAEnC,MAAM6uB,EAAYL,EAAI,QAAQ,iBAAiBxuB,EAAK,QAAQ,EAAE,iBAAiB,OAAO,EAEtFA,EAAK,eAAgBW,EAASC,EAAM,CAACguB,EAAa,CAAC,WAAW9M,EAAW,WAAW9hB,EAAK,UAAU,CAAC,EAE/F,KAAK,SAAUiW,EAAc,CAE1B,GAAIA,EAAc,CAEd,IAAI9lB,EAAS,KACTq+B,EAEAr+B,EAAQ,CAAA,EAIRA,EAAS,SAAS,cAAc,QAAQ,EAG5CA,EAAO,MAAQ2xB,EACf3xB,EAAO,OAAS6P,EAAK,kBACjBwuB,EACAlP,EAAK,IAAIwP,GAAY3+B,EAAO,MAAMA,EAAO,MAAM,EAG/CmvB,EAAMnvB,EAAO,WAAW,IAAI,EAI5B6P,EAAK,YAAc,CAAEwuB,IACrBxuB,EAAK,aAAc,SAAS,cAAc,QAAQ,EAClDA,EAAK,aAAa,MAAQ,IAC1BA,EAAK,aAAa,OAAS7P,EAAO,OAClC6P,EAAK,iBAAiBA,EAAK,aAAa,WAAW,IAAI,GAG3D,IAAIxC,EAAS,CACR,QAAS8hB,EACT,QAAS3e,EACT,MAAOC,EACP,WAAYZ,EAAK,WACjB,WAAY7P,EAAO,MACnB,YAAaA,EAAO,OACpB,IAAIuQ,EACJ,UAAUmuB,CACvC,EACwB,IAAI/nB,EAAI,EACR9G,EAAK,OAAO,GACZA,EAAK,kBAAkBiW,CAAY,EACnC,QAAShI,KAAMjO,EAAK,OAAO,CACvB,MAAM1T,EAAG0T,EAAK,OAAOiO,CAAE,EAAE,OAE1C3hB,EAAE,OACL0T,EAAK,YAAY1T,EAAE,QAAQ,EAAE,MAAM,QAAQ,OAE5C,CAEiB,UAAWS,KAAKkpB,EAAa,CAC5B,IAAI+U,EAAQhrB,EAAK,OAAOA,EAAK,eAAejT,CAAC,CAAC,EAEhE,MAAMgC,EAAIiR,EAAK,YAAYgrB,EAAM,OAAO,QAAQ,EAC5Cj8B,IACHA,EAAE,MAAM,QAAQ,QAChBA,EAAE,MAAM,IAAK+X,EAAI9G,EAAK,QAAS,MAIXxC,EAAQ,SAASyY,EAAalpB,CAAC,EAE/B,IAAIgiC,EAAQ/D,EAAM,OAAO,MAmB9C,GAlByB+D,GACK/uB,EAAK,OAAO+uB,CAAK,IAClB/uB,EAAK,OAAO+uB,CAAK,EAAE,CAAC,IAAIjoB,EAAI,OAAOkkB,EAAM,OAAO,MAAM,EAEtDlkB,GAAKkkB,EAAM,OAAO,QAEtBxtB,EAAQ,IAAKwtB,EAAM,IAAIhrB,EAAK,OAAO+uB,CAAK,EAAE,IAC1CvxB,EAAQ,OAAOwC,EAAK,OAAO+uB,CAAK,EAAE,OAClC/D,EAAM,OAAOxtB,EAAQ,IAAIA,EAAQ,SAIvCA,EAAQ,IAAKsJ,EAC/BkkB,EAAM,IAAIlkB,EACVtJ,EAAQ,OAAQwtB,EAAM,OAAO,OAC7BlkB,GAAKtJ,EAAQ,OACbwtB,EAAM,OAAOlkB,GAEV,OAAOtJ,EAAQ,UAAa,UAAYwtB,EAAM,OAAO,OAAO,QAAS,CACxEA,EAAM,YAAYxtB,CAAO,EACzB,QACA,CAGD8hB,EAAI,KAAI,EACRA,EAAI,KAAK,EAAE9hB,EAAQ,IAAIA,EAAQ,WAAWA,EAAQ,MAAM,EACxD8hB,EAAI,KAAI,EACRA,EAAI,UAAS,EACI,GAAI,CACrB0L,EAAM,aAAaxtB,CAAO,CACR,OAAQvP,EAAG,CAC5B,QAAQ,MAAMA,CAAC,EACf,MAAM+gC,EAAa,CAClB,GAAGxxB,EACH,SAAUvP,EAAE,OACZ,EACD+8B,EAAM,YAAYgE,CAAU,CAC5B,CAGoB,GAFrB1P,EAAI,QAAS,EAEYtf,EAAK,WAAW,CAChB,MAAMivB,EAAOT,EAAIlP,EAAItf,EAAK,iBAC1BgrB,EAAM,UAAUxtB,EAAQ,YAAYyxB,EAAKJ,CAAS,CACrD,CAEJ,CAED,QAASlf,KAAQ3P,EAAK,oBAAoB,CACtC,IAAIirB,EAASjrB,EAAK,oBAAoB2P,CAAI,EACtC3P,EAAK,MAAQirB,EAAO,MAGpBA,EAAO,IAAItqB,GAAUsqB,EAAO,MAAMrqB,GAGtCZ,EAAK,sBAAsBirB,EAAOztB,CAAO,EAC5C,CACD,GAAIgxB,EAAI,CACJA,EAAIlP,EAAI,iBAAgB,CAAE,EAC1B,MACH,CACDtf,EAAK,QAAQ,EACbA,EAAK,QAAU,GACfA,EAAK,KAAO,IAAIkvB,GAAKxuB,EAAKC,EAASC,EAAOZ,EAAK,WAAY7P,CAAM,EACjE6P,EAAK,WAAU,EACVA,EAAK,sBACNA,EAAK,eAAe,eAAe,CAC/B,IAAIA,EAAK,IACT,MAAM,SAASA,EAAK,KAAK,EACzB,IAAI,SAASA,EAAK,GAAG,CACrD,CAA6B,EAELA,EAAK,qBAAqB,EAE7B,MAEGA,EAAK,IAAI,UAAU,EAAG,EAAGA,EAAK,OAAO,MAAOA,EAAK,OAAO,MAAM,EAE9DA,EAAK,kBACDA,EAAK,kBAAkB,YACvBA,EAAK,OAAOA,EAAK,IAAIA,EAAK,MAAMA,EAAK,GAAG,EACxCA,EAAK,gBAAgB,KAGrBA,EAAK,gBAAgB,GACrBA,EAAK,OAAM,IAGnBA,EAAK,YAAY,MAAM,QAAQ,MAEnD,CAAiB,EACA,MAAM,SAAU2G,EAAO,CACpB3G,EAAK,QAAU,GAEf,QAAQ,IAAI2G,CAAK,EACb3G,EAAK,QAAQ,GAAK2G,IAAQ,aAC1B3G,EAAK,UACLA,EAAK,QAAQ4V,EAAM2Y,CAAe,IAKlCvuB,EAAK,QAAQ,GACbA,EAAK,aAAa,GAClBA,EAAK,YAAY,MAAM,QAAQ,OAC/BA,EAAK,aAAa,YAAY2G,EAC9B3G,EAAK,aAAa,MAAM,QAAQ,QAExD,CAAiB,CACR,CACJ,CAGD,UAAU0B,EAAS6F,EAAIC,EAAI,CACf,MAAI,CAAC9F,GAAY,OAAOA,GAAY,SACzB,CAAC,IAAI,EAAE,IAAI,CAAC,GAEvBA,EAAS,QAAQ,SAAUtW,EAAG,CAC1Bmc,EAAM,KAAK,IAAIA,EAAKnc,EAAE,KAAK,EACxBoc,EAAM,KAAK,IAAIA,EAAKpc,EAAE,KAAK,CAClD,CAAiB,EACM,CAAC,IAAKmc,EAAK,IAAKC,CAAG,EAErC,CAED,kBAAkByO,EAAa,CACzB,IAAIoY,EAAO,CAAA,EACX,QAAS,KAAKpY,EAAa,CACvB,IAAI+U,EAAQ,KAAK,OAAO,KAAK,YAAY,CAAC,CAAC,EAC3CA,EAAM,UAAU,KAChB,IAAI+D,EAAO/D,EAAM,OAAO,MAKzB,GAJI+D,GAAS/D,EAAM,OAAO,QAAQ,SAAW,CAAEA,EAAM,OAAO,gBACpDA,EAAM,OAAO,YAAY+D,GAEjCA,EAAQ/D,EAAM,OAAO,YACjB+D,EAAM,CACN,IAAII,EAAYd,EAAOU,CAAK,EACvBI,GAODA,EAAW,SAAS,KAAKlZ,EAAa,CAAC,CAAC,EACxCkZ,EAAW,OAAO,KAAKnE,CAAK,IAP5BmE,EAAW,CAAC,OAAO,CAACnE,CAAK,EAAE,SAAS,CAAC/U,EAAa,CAAC,CAAC,CAAC,EACrDoY,EAAOU,CAAK,EAAEI,EASrB,CACH,CACD,QAASxf,KAAQ0e,EAAO,CACpB,IAAIx/B,EAAGw/B,EAAO1e,CAAI,EAClB,GAAI,CAAC9gB,EAAE,OAAO,CACV,IAAI0Y,EAAI,EACJC,EAAM,CAAC,OAAO,UACd4nB,EAAM,KACV,QAAShkC,KAAKyD,EAAE,SACXugC,EAAO,KAAK,UAAUhkC,EAAEmc,EAAIC,CAAG,EAC/BD,EAAK6nB,EAAM,IACX5nB,EAAI4nB,EAAM,IAEf,QAASlhC,KAAKW,EAAE,OACZX,EAAE,UAAUkhC,CAEnB,CACJ,CACN,CAED,sBAAsBnE,EAAOztB,EAAQ,CACjC,IAAItQ,GAAQ+9B,EAAO,MAAMztB,EAAQ,SAASA,EAAQ,WAClDtQ,EAAQA,EAAM,EAAE,EAAEA,EAElB,IAAIy3B,GAASsG,EAAO,IAAIA,EAAO,OAAOztB,EAAQ,WAC9CmnB,EAAQA,EAAM,EAAE,EAAEA,EAClBA,EAAOA,EAAMnnB,EAAQ,WAAWA,EAAQ,WAAWmnB,EACnDnnB,EAAQ,QAAQ,YAAY,GAC5BA,EAAQ,QAAQ,UAAUytB,EAAO,MACjCztB,EAAQ,QAAQ,SAAStQ,EAAM,EAAEy3B,EAAMnnB,EAAQ,WAAW,EAC1DA,EAAQ,QAAQ,YAAY,CAC/B,CAGD,YAAa,CAET,KAAK,IAAI,UAAU,EAAG,EAAG,KAAK,OAAO,MAAO,KAAK,OAAO,MAAM,EAC1D,KAAK,aACL,KAAK,UAAU,UAAU,EAAG,EAAE,IAAK,KAAK,OAAO,MAAM,EACrD,KAAK,UAAU,UAAU,KAAK,aAAa,EAAE,KAAK,OAAO,GAGzD,KAAK,OACL,KAAK,QAAU,KAAK,OAAO,KAAK,KAAK,QAAU,KAAK,OAAO,KAAK,UAAU,EAC1E,KAAK,IAAI,UAAU,KAAK,KAAK,MAAO,KAAK,QAAS,KAAK,OAAO,EAC9D,KAAK,IAAI,OACT,KAAK,IAAI,UAEhB,CAED,sBAAsB,CAEd,KAAK,aAGT,KAAK,WAAa,GAAI,CAEV,KAAK,UAGT,aAAa,KAAK,IAAI,EACtB,KAAK,KAAK,WAAW,IAAI,CACrB,GAAI,CAAC,KAAK,YAAY,CACnB,IAAIoiB,EAAK,KAAK,aAAa,CAAC,EACxB,EAAI,KAAK,mBACb,GAAIA,EAAK,QAAS,CACd,GAAG,GAAK,EAAE,UAAUA,EAAK,QAAQ,CAC5B,MAAMvP,EAAM,CAAC,MAAM,EAAE,MAAM,QAAQ,EAAE,QAAQ,MAAM,CAAC,EACjD,KAAK,eAAe,aAAaA,CAAG,EACpC,EAAE,MAAM,cAAgB,EAAE,MAAM,aAAa,KAAKA,CAAG,CAC5D,CAED,GAAK,CAAC,GAAO,EAAE,UAAUuP,EAAK,QAAS,CAClC,MAAMvP,EAAO,CAAC,MAAMuP,EAAK,MAAM,QAAQA,EAAK,QAAQ,MAAM,CAAC,EAC3D,KAAK,eAAe,cAAcvP,CAAG,EACrCuP,EAAK,MAAM,eAAiBA,EAAK,MAAM,cAAc,KAAKvP,CAAG,EAC1D,KAAK,mBAAmBuP,CAC/B,CACJ,SAEW,EAAE,CACL,MAAMvP,EAAM,CAAC,MAAM,EAAE,MAAM,QAAQ,EAAE,QAAQ,MAAM,CAAC,EACpD,KAAK,eAAe,aAAaA,CAAG,EACpC,EAAE,MAAM,cAAgB,EAAE,MAAM,aAAa,KAAKA,CAAG,EAClD,KAAK,mBAAmB,IAC3B,CAEX,CACJ,EAAC,EAAE,EACP,EACD,KAAK,SAAS,iBAAiB,YAAY,KAAK,UAAU,EAEjE,CAED,0BAA0B,CAClB,KAAK,SAAS,oBAAoB,YAAY,KAAK,UAAU,EAC7D,KAAK,WAAW,IACvB,CAGD,uBAAuB,CACf,KAAK,aAGT,KAAK,qBAAoB,EACpB,KAAK,UAAU,OAChB,KAAK,YAAY,QAAQ,CAACvV,EAAK7C,IAAO,CAC9B6C,IAAO,eACP,KAAK,SAAS,MAAM,OAAO,WAE5BA,IAAO,gBACN,KAAK,SAAS,MAAM,OAAO,UAG/C,CAAa,EAGX,KAAK,WAAa,GAAK,CACd,KAAK,UAGT,aAAa,KAAK,IAAI,EACtB,KAAK,KAAK,WAAW,IAAI,CACxB,GAAI,CAAC,KAAK,YAAY,CACzB,IAAI/N,EAAE,KAAK,aAAa,CAAC,EACrBA,EAAE,OAASA,EAAE,SAChB,KAAK,eAAe,eAAe,CAAC,MAAMA,EAAE,MAAM,QAAQA,EAAE,QAAQ,MAAM,CAAC,CAAC,CAEzE,CACD,EAAC,GAAG,EACZ,EACG,KAAK,SAAS,iBAAiB,QAAQ,KAAK,UAAU,EAEpD,CAGD,2BAA2B,CACvB,KAAK,SAAS,oBAAoB,QAAQ,KAAK,UAAU,EACzD,KAAK,WAAW,KAChB,KAAK,eAAe,OAAO,CAC9B,CAID,eAAe,CACjB,KAAK,aAAc,GAAK,CACnB,GAAI,EAAE,SACL,OAEI,MAAMsiC,EAAK,KAAK,WAAW,CAAC,EAC5B,KAAK,YAAc,GACnB,KAAK,eAAe,GACpB,KAAK,WAAaA,EAAG,EACrB,KAAK,WAAYA,EAAG,EACpB,KAAK,WAAa,KAAK,UAE1B,EACD,KAAK,SAAS,iBAAiB,YAAY,KAAK,YAAY,EAG7D,KAAK,aAAc,GAAG,CACjB,IAAIC,EAAe,KAAK,WAAW,CAAC,EACpC,GAAI,KAAK,aAAe,KAAK,eAAe,CACxC,IAAIC,EAAOD,EAAa,EAAE,KAAK,WAC3BE,EAAQ,KAAK,WAAWD,EAC5B,KAAK,OAAOC,EACZ,KAAK,KAAKA,EACV,IAAI3C,EAAK,KAAK,OAAO,OAAO,KAAK,KAAK,MAAM,OACxC4C,EAAO,EACX,GAAI5C,EAAG,GAAK,KAAK,UAAW,EAAE,CAC1B,IAAI4C,EAASH,EAAa,EAAE,KAAK,WACjC,KAAK,SAASG,EACV,KAAK,QAAQ,EACb,KAAK,QAAQ,EAER,KAAK,QAAQ5C,IAClB,KAAK,QAAQA,GAGjB,QAAS5e,KAAM,KAAK,OAAO,CACvB,MAAMyhB,EAAK,KAAK,OAAOzhB,CAAE,EACnBlf,EAAG,KAAK,YAAYkf,CAAE,EACxBlf,IACAA,EAAE,MAAM,QAAQ,QAChBA,EAAE,MAAM,IAAK2gC,EAAG,IAAI,KAAK,QAAS,KAIzC,CACJ,CACD,KAAK,QAAO,EACZ,KAAK,WAAWJ,EAAa,EAC7B,KAAK,WAAWA,EAAa,EACzB,KAAK,iBAAmBC,EAAK,GAAKE,EAAO,KACzC,KAAK,YAAY,GACjB,KAAK,eAAe,GAExB,CACP,EAIP,KAAK,QAAQ,iBAAiB,YAAY,KAAK,YAAY,EAErD,KAAK,aAAe,GAAK,CACnB,KAAK,YAAY,GACjB,KAAK,eAAe,EACzB,EACP,KAAK,QAAQ,iBAAiB,UAAU,KAAK,YAAY,CAEtD,CAED,mBAAmB,CAClB,KAAK,SAAS,oBAAoB,YAAY,KAAK,YAAY,EAClE,KAAK,QAAQ,oBAAoB,YAAY,KAAK,YAAY,EAC9D,KAAK,QAAQ,oBAAoB,UAAU,KAAK,YAAY,EAC5D,KAAK,aAAa,KAClB,KAAK,aAAa,KAClB,KAAK,aAAa,IACf,CAED,WAAW,EAAE,CACf,MAAMvC,EAAM,KAAK,OAAO,sBAAqB,EAEvC7xB,EAAI,EAAE,QAAU6xB,EAAI,KACdh+B,EAAI,EAAE,QAAUg+B,EAAI,IAC1B,MAAO,CAAC,EAAA7xB,EAAE,EAAAnM,CAAC,CACd,CAGD,eAAe,CACjB,KAAK,WAAY,GAAI,CAEpB,EAAE,eAAc,EAChB,IAAIygC,EAAQ,EAAE,OAIV,GAHAA,IAAW,SACdA,EAAO,EAAE,QAEF,KAAK,SAAY,KAAK,WAAW,KAAQA,EAAO,EACnD,OAGD,IAAIL,EAAe,KAAK,WAAW,CAAC,EAEpCM,EAASD,EAAS,EAAI,KAAO,GAC7B,EAAE,aAAe,SACpBC,EAAS,KAAK,IAAI,EAAG,CAAC,EAAE,WAAa,EAAE,GAE/B,IAAIC,EAAM,KAAK,MAAOP,EAAa,EAAI,KAAK,WACxCQ,GAAc,KAAK,IAAI,KAAK,OAAOF,EACnCG,EAAYF,EAAMP,EAAa,EAAE,KAAK,OAAO,MAAOQ,EACxD,KAAK,MAAQC,EACb,KAAK,IAAMA,EAAUD,EACrB,KAAK,QAAO,CACf,EACD,KAAK,SAAS,iBAAiB,QAAQ,KAAK,UAAU,CACzD,CAED,iBAAiB,CACb,KAAK,SAAS,oBAAoB,QAAQ,KAAK,UAAU,CAC5D,CAGD,yBAAyB,CACrB,KAAK,aAAc,GAAG,CAClB,GAAI,EAAE,SAAS,CACX,KAAK,aAAc,KAAK,WAAW,CAAC,EAAE,EACtC,IAAIjpB,EAAO,KAAK,aAAa,KAC7B,KAAK,WAAWqlB,EAAS,MAAM,CAC3B,OAAO,CACH,SAAW,WAAW,QAAU,GAAI,mBAAmB,OAAO,IAAM,MAAM,OAAS,KAAK,OAAO,KAAK,KAAKrlB,EAAK,MAAQ,KACzH,CACrB,EAAkB,KAAK,QAAQ,EACf,EAAE,gBAAe,CACpB,CACJ,EACD,KAAK,SAAS,iBAAiB,YAAY,KAAK,YAAY,EAE5D,KAAK,aAAc,GAAI,CACnB,GAAI,EAAE,UAAY,KAAK,aAAa,CAChC,IAAIxL,EAAE,KAAK,WAAW,CAAC,EAAE,EACrBA,EAAE,KAAK,cACP,KAAK,WAAW,MAAM,KAAKA,EAAE,KAC7B,KAAK,WAAW,MAAM,MAAO,KAAK,aAAaA,EAAG,OAGjD,KAAK,WAAW,MAAM,KAAK,KAAK,aAAa,KAC7C,KAAK,WAAW,MAAM,MAAOA,EAAE,KAAK,aAAc,MAEvD,EAAE,gBAAe,CACpB,CACJ,EACD,KAAK,SAAS,iBAAiB,YAAY,KAAK,YAAY,EAE5D,KAAK,aAAc,GAAI,CACnB,GAAI,KAAK,aAAa,CAClB,IAAIA,EAAE,KAAK,WAAW,CAAC,EAAE,EACrBnO,EAAQ,KAAK,MAAS,KAAK,aAAa,KAAK,WAC7Cye,EAAO,KAAK,MAAStQ,EAAE,KAAK,WAGhC,GAFA,KAAK,aAAa,KAClB,KAAK,WAAW,SACZnO,EAAMye,EAAI,CACV,IAAIyiB,EAAKziB,EACTA,EAAIze,EACJA,EAAMkhC,CACT,CACD,KAAK,eAAe,iBAAiB,CAC7B,IAAI,KAAK,IACT,MAAMlhC,EACN,IAAIye,CACX,EAAC,CAAC,CACN,CACJ,EACD,KAAK,SAAS,iBAAiB,UAAU,KAAK,YAAY,CAC7D,CAGD,sBAAsB,CAClB,KAAK,SAAS,oBAAoB,YAAY,KAAK,YAAY,EAC/D,KAAK,SAAS,oBAAoB,YAAY,KAAK,YAAY,EAC/D,KAAK,SAAS,oBAAoB,UAAU,KAAK,YAAY,EAC7D,KAAK,aAAa,KAClB,KAAK,aAAa,KAClB,KAAK,aAAa,IACrB,CAED,UAAU,CACQ,KAAK,OAAO,CAAC,EAAE,UAAU,SAAS,CACnD,CASA,aAAa,EAAE,CACX,IAAI0jB,EAAK,KAAK,WAAW,CAAC,EAC1BA,EAAG,GAAG,KAAK,QACX,IAAI1E,EAAK,KAAK,MAAM,KAAK,MAAO0E,EAAG,EAAE,KAAK,UAAW,EACrD,QAASnhC,KAAK,KAAK,OAAO,CACtB,IAAI88B,EAAQ,KAAK,OAAO98B,CAAC,EACzB,GAAImhC,EAAG,EAAErE,EAAM,KAAOqE,EAAG,EAAErE,EAAM,OAC7B,MAAO,CAAC,MAAMA,EACN,QAAQA,EAAM,aAAaL,EAAG,KAAK,IAAI0E,EAAG,KAAK,WAAW,KAAK,IAAI,KAAK,OAAO,CACxG,CAEU,CACD,MAAO,CAAC,MAAM,KAAK,QAAQ,IAAI,CACnC,CAED,YAAY,CACR,OAAQ,KAAK,IAAI,EAAG,KAAK,MAAM,KAAK,MAAO,KAAK,aAAa,KAAK,OAAO,MAAM,KAAK,UAAW,CAAC,CACnG,CAKD,QAAQ1K,EAAMC,EAAO,CACjB,GAAKD,EAMD,KAAK,OAAOC,EACZ,KAAK,MAAMD,EACX,KAAK,SAAS,MAAM,OAAQC,EAAO,KACnC,KAAK,SAAS,MAAM,MAAMD,EAAM,SATzB,CACP,MAAMh5B,EAAI,KAAK,SAAS,sBAAqB,EAC7C,KAAK,MAAMA,EAAE,MACb,KAAK,OAAOA,EAAE,MACjB,CAOD,KAAK,OAAO,aAAa,QAAQ,KAAK,KAAK,EAC3C,KAAK,OAAO,aAAa,SAAS,KAAK,MAAM,EACzC,KAAK,YACL,KAAK,aAAa,aAAa,SAAS,KAAK,MAAM,CAG1D,CAED,WAAW+V,EAAU,CAEjB,GAAK,KAAK,KAEV,KAAI1B,EAAO,KACPU,EAAMV,EAAK,KAAK,IAChBW,EAAUX,EAAK,KAAK,QACpBY,EAAQZ,EAAK,KAAK,MAClB7P,EAAS,SAAS,cAAc,QAAQ,EACxC0R,EAAa7B,EAAK,KAAK,MAE3B7P,EAAO,MAAQ6P,EAAK,KAAK,MAAM,MAC/B7P,EAAO,OAAS6P,EAAK,KAAK,MAAM,OAChC,IAAIsf,EAAMnvB,EAAO,WAAW,IAAI,EAChC6P,EAAK,MAAM,KAAK,CACZ,SAAU0B,EACV,QAAS4d,EACT,QAAS3e,EACT,WAAYkB,EACZ,WAAY1R,EAAO,MACnB,YAAaA,EAAO,MAChC,CAAS,EAGD6P,EAAK,KAAO,IAAIkvB,GAAKxuB,EAAKC,EAASC,EAAOiB,EAAY1R,CAAM,EAC5D6P,EAAK,WAAU,EAClB,CAEL,CAGA,MAAMkvB,EAAI,CACN,YAAaxuB,EAAKsvB,EAAWC,EAASb,EAAOc,EAAO,CAChD,KAAK,IAAMxvB,EACX,KAAK,QAAUsvB,EACf,KAAK,MAAQC,EACb,KAAK,MAAQb,EACb,KAAK,MAAQc,CAChB,CAED,cAAcxvB,EAAKxT,EAAOye,EAAKyjB,EAAO,CAClC,OAAIliC,EAAM,IACNA,EAAM,GAEH,KAAK,MAAM,QAAQ,CAAC,IAAMkiC,EAAM,QAAQ,CAAC,GAAKliC,GAAS,KAAK,SAAWye,GAAO,KAAK,OAASjL,IAAQ,KAAK,GACnH,CAED,cAAcA,EAAKxT,EAAOye,EAAK,CAC3B,OAAO,KAAK,MAAQjL,GAAO,KAAK,OAASxT,GAAS,KAAK,SAAWye,CACrE,CACL","x_google_ignoreList":[12]}