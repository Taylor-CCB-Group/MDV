{"version":3,"file":"catWorker-D5lhlpxE.js","sources":["../src/datastore/catWorker.js"],"sourcesContent":["// biome-ignore lint/suspicious/noGlobalAssign: relatively innocuous in simple web worker\nonmessage = (e) => {\n    const config = e.data[3];\n    const dtype =\n        config.datatype === \"text16\" || config.datatype === \"multitext\"\n            ? Uint16Array\n            : Uint8Array;\n    const data = new dtype(e.data[2]);\n    const lFilter = new Uint8Array(e.data[0]);\n    const gFilter = new Uint8Array(e.data[1]);\n    let result = null;\n    if (config.method === \"sankey\") {\n        const data2 = new Uint8Array(e.data[4]);\n        result = getSankeyData(lFilter, gFilter, data, data2, config);\n    } else if (config.method === \"venn\") {\n        result = calculateSets(lFilter, gFilter, data, config);\n    } else if (config.method === \"proportion\") {\n        const data2 = new Uint8Array(e.data[4]);\n        result = getProportionData(lFilter, gFilter, data, data2, config);\n    } else if (config.method === \"stacked\") {\n        const data2 = new Uint8Array(e.data[4]);\n        result = getStackedData(lFilter, gFilter, data, data2, config);\n    } else if (config.method === \"double_cat\") {\n        const data2 =\n            config.datatype2 === \"multitext\"\n                ? new Uint16Array(e.data(4))\n                : new Uint8Array(e.data(4));\n        result = getDoubleCategory(lFilter, gFilter, data, data2, config);\n    } else {\n        result = getNumberInCategory(lFilter, gFilter, data, config);\n    }\n    postMessage(result);\n};\n\nfunction getDoubleCategory(lFilter, gFilter, data, data2, config) {\n    const len = data.length;\n    const mt2 = config.datatype2 === \"multitext\";\n    const matrix = Array.from(config.values, (x, i1) => {\n        return Array.from(config.values2, (x, i2) => ({\n            i1: i1,\n            i2: i2,\n            c: 0,\n        }));\n    });\n    for (let i = 0; i < len; i++) {\n        if (gFilter[i] !== 0) {\n            if (gFilter[i] !== lFilter[i]) {\n                continue;\n            }\n        }\n        if (mt2) {\n            const st = i * config.stringLength2;\n            for (let n = st; n < config.stringLength2; n++) {\n                if (data[n] === 65535) {\n                    break;\n                }\n                matrix[data[i]][data2[n]].c++;\n            }\n        } else {\n            matrix[data[i]][data2[i]].c++;\n        }\n    }\n    return matrix;\n}\n\n//data the x category (groups)\nfunction getProportionData(lFilter, gFilter, data, data2, config) {\n    const len1 = config.values.length;\n    const len2 = config.values2.length;\n    const data3 = config.cats ? new Uint8Array(config.cats) : null;\n    const len = data.length;\n    const counts = new Array(len1);\n    const totals = config.diviser ? config.diviser : new Array(len1);\n    for (let n = 0; n < len1; n++) {\n        counts[n] = new Array(len2).fill(0);\n        totals[n] = new Array(len2).fill(0);\n    }\n    const cat = config.category;\n    let total = 0;\n    for (let i = 0; i < len; i++) {\n        //if filtered out in global but not in local\n        totals[data[i]][data2[i]]++;\n        if (gFilter[i] === 0) {\n            if (data3 && data3[i] !== cat) {\n                continue;\n            }\n            counts[data[i]][data2[i]]++;\n            total++;\n        }\n    }\n    let t_max = 0;\n    let t_min = 10000000;\n    for (let i = 0; i < totals.length; i++) {\n        const t = totals[i];\n        const c = counts[i];\n        const nc = [];\n        const vls = [];\n        let total = 0;\n        let max = 0;\n        let min = 10000000;\n        for (let n = 0; n < t.length; n++) {\n            if (t[n] === 0) {\n                continue;\n            }\n            const v = config.denominators\n                ? c[n] / config.denominators[n]\n                : (c[n] / t[n]) * 100;\n            nc.push([v, i, n, Math.floor(Math.random() * 6)]);\n            vls.push(v);\n            total += v;\n            max = Math.max(max, v);\n            min = Math.min(min, v);\n        }\n\n        nc.av = total / nc.length;\n        nc.std = std(vls, nc.av);\n        nc.max = max;\n        nc.min = min;\n        counts[i] = nc;\n        t_max = Math.max(t_max, max);\n        t_min = Math.min(t_min, min);\n    }\n    counts.max = t_max;\n    counts.min = t_min;\n    return counts;\n}\n\nfunction calculateSets(lFilter, gFilter, data, config) {\n    const t = performance.now();\n    const len = data.length / config.stringLength;\n\n    const sets = new Map();\n    const ilen = config.stringLength;\n    for (let i = 0; i < len; i++) {\n        //if filtered out in global but not in local\n        if (gFilter[i] !== 0) {\n            if (gFilter[i] !== lFilter[i]) {\n                continue;\n            }\n        }\n        const st = i * ilen;\n        const arr = data.slice(st, st + ilen).toString();\n\n        const val = sets.get(arr);\n        if (!val) {\n            sets.set(arr, 1);\n        } else {\n            sets.set(arr, val + 1);\n        }\n    }\n    const ret = [];\n    for (const [key, value] of sets.entries(sets)) {\n        const set_arr = key\n            .split(\",\")\n            .map((x) => config.values[x])\n            .filter((x) => x !== undefined);\n        ret.push({ sets: set_arr, size: value });\n    }\n    console.log(`calc ven : ${performance.now() - t}`);\n    return ret;\n}\n\nfunction getNumberInCategory(lFilter, gFilter, data, config) {\n    const len =\n        config.datatype === \"multitext\"\n            ? data.length / config.stringLength\n            : data.length;\n    const cats = new Array(config.values.length).fill(0);\n\n    if (config.datatype === \"multitext\") {\n        //calculateSets(lFilter,gFilter,data,config);\n        const ilen = config.stringLength;\n        for (let i = 0; i < len; i++) {\n            //if filtered out in global but not in local\n            if (gFilter[i] !== 0) {\n                if (gFilter[i] !== lFilter[i]) {\n                    continue;\n                }\n            }\n            const st = i * ilen;\n            for (let n = st; n < st + ilen; n++) {\n                if (data[n] === 65535) {\n                    break;\n                }\n                cats[data[n]]++;\n            }\n        }\n    } else {\n        for (let i = 0; i < len; i++) {\n            //if filtered out in global but not in local\n            if (gFilter[i] !== 0) {\n                if (gFilter[i] !== lFilter[i]) {\n                    continue;\n                }\n            }\n            cats[data[i]]++;\n        }\n    }\n    return cats;\n}\n\nfunction getStackedData(lFilter, gFilter, data, data2, config) {\n    const len = data.length;\n    const matrix = Array.from(config.values, (x, i) => {\n        return {\n            id: i,\n            values: Array.from(config.values2, (x, i) => ({ id: i, count: 0 })),\n            total: 0,\n        };\n    });\n    for (let i = 0; i < len; i++) {\n        if (gFilter[i] !== 0) {\n            if (gFilter[i] !== lFilter[i]) {\n                continue;\n            }\n        }\n        matrix[data[i]].values[data2[i]].count++;\n        matrix[data[i]].total++;\n    }\n    for (const r of matrix) {\n        let rt = 0;\n        let rpt = 0;\n        for (const i of r.values) {\n            const per = r.total === 0 ? 0 : i.count / r.total;\n            i.pos = rt;\n            i.per = per;\n            i.perpos = rpt;\n            rt += i.count;\n            rpt += per;\n        }\n    }\n    return matrix;\n}\n\nfunction getSankeyData(lFilter, gFilter, data, data2, config) {\n    const len1 = config.values.length;\n    const len2 = config.values2.length;\n    const len = data.length;\n    const matrix = new Array(len1);\n    const nodes1 = config.values.map((x, i) => {\n        return `A${i}`;\n    });\n    const nodes2 = config.values2.map((x, i) => {\n        return `B${i}`;\n    });\n\n    for (let n = 0; n < len1; n++) {\n        matrix[n] = new Array(len2).fill(0);\n    }\n    const links = [];\n    let total = 0;\n    for (let i = 0; i < len; i++) {\n        //if filtered out in global but not in local\n        if (gFilter[i] !== 0) {\n            if (gFilter[i] !== lFilter[i]) {\n                continue;\n            }\n        }\n        matrix[data[i]][data2[i]]++;\n        total++;\n    }\n\n    const nodes1Used = new Set();\n    const nodes2Used = new Set();\n    const minValue = Math.round(total / 300);\n\n    for (let i1 = 0; i1 < len1; i1++) {\n        for (let i2 = 0; i2 < len2; i2++) {\n            const v = matrix[i1][i2];\n            if (v !== 0) {\n                nodes1Used.add(nodes1[i1]);\n                nodes2Used.add(nodes2[i2]);\n                links.push({\n                    source: nodes1[i1],\n                    target: nodes2[i2],\n                    value: v < minValue ? minValue : v,\n                    trueValue: v,\n                });\n            }\n        }\n    }\n    const minNodes = Math.min(nodes1Used.size, nodes2Used.size);\n    const n1 = Array.from(nodes1Used).map((x) => {\n        return { id: x, ind: x.substring(1), param: 0 };\n    });\n    const n2 = Array.from(nodes2Used).map((x) => {\n        return { id: x, ind: x.substring(1), param: 1 };\n    });\n\n    return {\n        links: links,\n        nodes: n1.concat(n2),\n        minNodes: minNodes,\n    };\n}\n\nfunction std(arr, av) {\n    let n = arr.length - 1;\n    n = n === 0 ? 1 : n;\n    const std = arr.reduce((prev, cur) => prev + (cur - av) ** 2, 0);\n    return Math.sqrt(std / n);\n}\n"],"names":["e","config","dtype","data","lFilter","gFilter","result","data2","getSankeyData","calculateSets","getProportionData","getStackedData","getDoubleCategory","getNumberInCategory","len","mt2","matrix","x","i1","i2","st","n","len1","len2","data3","counts","totals","cat","i","t_max","t_min","t","c","nc","vls","total","max","min","v","std","sets","ilen","arr","val","ret","key","value","set_arr","cats","r","rt","rpt","per","nodes1","nodes2","links","nodes1Used","nodes2Used","minValue","minNodes","n1","n2","av","prev","cur"],"mappings":"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"}