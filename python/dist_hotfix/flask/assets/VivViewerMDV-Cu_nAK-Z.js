import{g as f,M as V,D as L,a as m,h as w,b as v,R as M,S as k,C as R,V as A,c as X,d as Z,l as Y}from"../js/mdv.js";import"./createSvgIcon-C71gzcHQ.js";async function T(n,t={c:0,t:0}){const s=n[n.length-1],{shape:i,labels:a}=s,e=i[a.indexOf("z")]>>n.length-1,o=await s.getRaster({selection:{...t,z:0}}),l=await s.getRaster({selection:{...t,z:Math.floor(e/2)}}),r=await s.getRaster({selection:{...t,z:Math.max(0,e-1)}}),c=f(o.data),h=f(l.data),d=f(r.data);return{domain:[Math.min(c.domain[0],h.domain[0],d.domain[0]),Math.max(c.domain[1],h.domain[1],d.domain[1])],contrastLimits:[Math.min(c.contrastLimits[0],h.contrastLimits[0],d.contrastLimits[0]),Math.max(c.contrastLimits[1],h.contrastLimits[1],d.contrastLimits[1])]}}async function G(n,t=[{c:0,t:0}]){const s=await Promise.all(t.map(e=>T(n,e))),i=s.map(e=>e.contrastLimits),a=s.map(e=>e.contrastLimits);return{domains:i,contrastLimits:a}}function E(n){const t=new Array(n).fill([0,1e3]),s=t,i=new Array(n).fill().map((o,l)=>({c:l,t:0,z:0,_id:l})),a=I(n),e=new Array(n).fill(!0);return{domains:t,contrastLimits:s,selections:i,colors:a,channelsVisible:e}}function I(n){return n===1?[[255,255,255]]:new Array(n).fill([0,0,0]).map((t,s)=>{const i=s/n;return[Math.floor(i*255),Math.floor((1-i)*255),0]})}function O(n){var a;const{x:t,y:s,z:i}=((a=n==null?void 0:n.meta)==null?void 0:a.physicalSizes)??{};if(t!=null&&t.size&&(s!=null&&s.size)&&(i!=null&&i.size)){const e=Math.min(i.size,t.size,s.size),o=[t.size/e,s.size/e,i.size/e];return new V().scale(o)}return new V().identity()}function y(n){const t=Array.isArray(n)?n[0]:n,{shape:s,labels:i}=t,a=O(t),e=[0,a[0]*s[i.indexOf("x")]],o=[0,a[5]*s[i.indexOf("y")]],l=[0,a[10]*s[i.indexOf("z")]];return[e,o,l]}const S=new Map;function N(n){if(S.has(n))return S.get(n);const t=Y(n);return S.set(n,t),t}class U{constructor(t,s,i){console.log("new VivViewerMDV",s),this.canvas=t,this.height=this.canvas.height,this.width=this.canvas.width,this.config=s,this.hasRequestedDefaultChannelStats=!1,this.initClip(),N(s.url).then(a=>{this.tiff=a,this._setUp(a,i)}).catch(a=>{console.log(a);const e=this.canvas.getContext("2d");e.font="20px Arial",this.canvas.getContext("2d").fillText("Error loading data",10,20)})}setSize(t,s,i){this.height=s,this.width=t;const a=this.getViewState(i.x_scale,i.y_scale,i.offset);this.detailView=new L({id:m,height:s<this.native_y?this.native_y:s,width:t<this.native_x?this.native_x:t});const e=this.detailView.getDeckGlView();this.canvas.width=t,this.canvas.height=s,this.canvas.style.width=t,this.canvas.style.height=s,this.deck.setProps({height:s,width:t,viewState:a,views:[e]})}setPanZoom(t,s,i){const a=this.getViewState(s,i,t);this.deck.setProps({viewState:a})}getViewState(t,s,i){if(this.config.use3d)return;const a=Math.log2(s),e=Math.log2(t),o=this.width>this.native_x?this.width:this.native_x,l=this.height>this.native_y?this.height:this.native_y;let r=1/t*o/2;r-=i[0];let c=1/s*l/2;return c+=this.native_y-i[1],{height:o,width:l,id:m,target:[r,c,0],zoom:[e,a]}}setChannel(t){const s=this.mainVivLayer.props,i=s.selections.findIndex(a=>a.id===t.id);s.colors[i]=w(t.color),s.contrastLimits[i]=t.contrastLimits,s.channelsVisible[i]=t.channelsVisible,t.domains&&(s.domains[i]=t.domains),this.layers=[...this.layers],this.deck.setProps({layers:this.layers})}removeChannel(t){const s=this.mainVivLayer.props,i=s.selections.findIndex(a=>a.id===t.id);s.colors.splice(i,1),s.selections.splice(i,1),s.contrastLimits.splice(i,1),s.channelsVisible.splice(i,1),s.domains.splice(i,1),this.createLayers(s),this.deck.setProps({layers:[this.layers]})}async addChannel(t){const s=this.mainVivLayer.props;s.channelsVisible.push(!0),t.color=t.color||"#ff00ff";const i={z:0,t:0,c:t.index},a=await this.getDefaultChannelValues([{index:0,sel:i}]);return t.contrastLimits=a[0].stats.contrastLimits,t.domains=a[0].stats.domain,t.channelsVisible=!0,s.colors.push(w(t.color)),s.contrastLimits.push(t.contrastLimits),s.domains.push(t.domains),t.id=v(),s.selections.push({...i,id:t.id}),this.createLayers(s),this.deck.setProps({layers:[this.layers]}),t.name=this.channels[t.index].Name,t}getAllChannels(){return this.channels}getSelectedChannels(){const{props:t}=this.mainVivLayer,s=t.selections.map(a=>this.channels[a.c].Name),i=t.colors.map(M);return s.map((a,e)=>({name:a,index:t.selections[e].c,id:t.selections[e].id,color:i[e],contrastLimits:t.contrastLimits[e].slice(0),channelsVisible:t.channelsVisible[e],domains:t.domains[e]}))}recenterCamera(){if(!this.config.use3d)return;console.log("recenter");const{SizeX:t,SizeY:s,SizeZ:i}=this.tiff.metadata.Pixels,e={target:[t/2,s/2,i/2],zoom:1,rotationX:0,rotationOrbit:0+Math.random()*.01};this.volViewState=e,this.deck.setProps({initialViewState:e})}_createLayers3D(){const t=this.tiff,{SizeX:s,SizeY:i,SizeZ:a,Channels:e}=t.metadata.Pixels,o=`3d_${m}`,l=t.data,r=e.length,c=t.data[0].dtype,{domains:h,contrastLimits:d,selections:u,colors:x,channelsVisible:C}=this.newVivProps??(this.mainVivLayer?this.mainVivLayer.props:E(r));this.newVivProps=null,this.hasRequestedDefaultChannelStats||(this.hasRequestedDefaultChannelStats=!0,this.defaultDomains=h,this.defaultContrastLimits=d.slice(0),G(l,u).then(g=>{this.defaultDomains=g.domains,this.defaultContrastLimits=g.contrastLimits.slice(0),this.newVivProps={...this.mainVivLayer.props,...g},this._updateProps()}));const z=this.getXSlice(),_=this.getYSlice(),P=this.getZSlice(),D=l.length-1,b={id:o,loader:l,dtype:c,resolution:D,channelsVisible:C,contrastLimits:d,domains:h,selections:u,colors:x,xSlice:z,ySlice:_,zSlice:P},p=this.detailView.getLayers({props:b,viewStates:[this.volViewState]});this.layers=p,this.mainVivLayer=p[0],this.config.scatterData&&p.push(new k({data:this.config.scatterData,radiusScale:1,billboard:!0,getFillColor:this.config.getScatterFillColor}))}initClip(){this.clipX=[0,1],this.clipY=[0,1],this.clipZ=[0,1]}setClipX(t,s){this.clipX=[t,s],this._updateProps()}setClipY(t,s){this.clipY=[t,s],this._updateProps()}setClipZ(t,s){this.clipZ=[t,s],this._updateProps()}getXSlice(){this.tiff.metadata.Pixels;const[t,s]=this.clipX,i=y(this.loader)[0][1];return[t*i,s*i]}getYSlice(){this.tiff.metadata.Pixels;const[t,s]=this.clipY,i=y(this.loader)[1][1];return[t*i,s*i]}getZSlice(){this.tiff.metadata.Pixels;const[t,s]=this.clipZ,i=y(this.loader)[2][1];return[t*i,s*i]}_updateProps(){this.createLayers(),this.deck.setProps({layers:this.layers})}_parseChannels(t){const s={selections:[],colors:[],channelsVisible:[],contrastLimits:[],domains:[]},i=[[0,0,255],[0,255,0],[255,0,0],[255,255,0],[0,255,255],[255,0,255]];let a=0;for(const e of t){const o=this.channels.findIndex(r=>r.Name===e.name);if(o===-1){console.warn(`channel '${e.name}' not found, uniforms housekeeping will be a bit messed up`);continue}s.selections.push({z:0,t:0,c:o});let l=e.color;l=l?typeof e.color=="string"?w(l):l:i[a],a++,a>=i.length&&(a=0),s.colors.push(l),s.channelsVisible.push(e.visible===void 0?!0:e.visible),s.contrastLimits.push(e.contrastLimits||null),s.domains.push(e.domains||null)}return s}getSelectedChannelsNice(){const t=this.layers[0].props;return t.selections.map((s,i)=>({name:this.channels[s.c].Name,color:t.colors[i],visible:t.channelsVisible[i],contrastLimits:t.contrastLimits[i],domains:t.domains[i]}))}_setUp(t,s){this.native_x=t.metadata.Pixels.SizeX,this.native_y=t.metadata.Pixels.SizeY;const{use3d:i}=this.config;this.extensions=[new R],this.channels=t.metadata.Pixels.Channels,this.loader=t.data,this.transparentColor=[255,255,255,0];const a=this.getViewState(s.x_scale,s.y_scale,s.offset);if(i){const{SizeX:c,SizeY:h,SizeZ:d}=t.metadata.Pixels,u=[c/2,h/2,d/2];this.volViewState={zoom:1,target:u},this.detailView=new A({id:m,useFixedAxis:!1,target:u,extensions:[new X.AdditiveBlendExtension]})}else this.detailView=new L({id:m,height:this.native_y>this.height?this.native_y:this.height,width:this.native_x>this.width?this.native_x:this.width});const e=this.volViewState;let{image_properties:o}=this.config;const l=this.detailView.getDeckGlView();if(this.config.channels&&(o=this._parseChannels(this.config.channels)),o!=null&&o.selections)for(const c of o.selections)c.id=v();const r=[];for(let c=0;c<o.contrastLimits.length;c++)o.contrastLimits[c]&&o.domains[c]||r.push({index:c,sel:o.selections[c]});this.getDefaultChannelValues(r).then(c=>{for(const h of c)o.contrastLimits[h.index]=h.stats.contrastLimits,o.domains[h.index]=h.stats.domain;this.createLayers(o),this.deck=new Z({canvas:this.canvas,layers:[this.layers],views:[l],viewState:a,width:this.width,height:this.height,useDevicePixels:!0,initialViewState:e,controller:i})})}async getDefaultChannelValues(t){return await Promise.all(t.map(async s=>{const i=await this.loader[this.loader.length-1].getRaster({selection:s.sel});return{index:s.index,stats:f(i.data)}}))}createLayers(t){if(this.config.use3d){this._createLayers3D();return}const s={id:m},i={loader:this.loader,contrastLimits:t.contrastLimits.slice(0),domains:t.domains.slice(0),colors:t.colors.slice(0),channelsVisible:t.channelsVisible.slice(0),selections:t.selections.slice(0),extensions:this.extensions,transparentColor:this.transparentColor};this.defaultDomains||(this.defaultDomains=i.contrastLimits),this.defaultContrastLimits||(this.defaultContrastLimits=this.defaultDomains.slice(0)),this.layers=this.detailView.getLayers({viewStates:s,props:i}),this.layers=[this.layers[0]],this.mainVivLayer=this.layers[0]}}export{U as default};
//# sourceMappingURL=VivViewerMDV-Cu_nAK-Z.js.map
